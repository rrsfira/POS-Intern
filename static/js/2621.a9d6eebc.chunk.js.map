{"version":3,"file":"static/js/2621.a9d6eebc.chunk.js","mappings":"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","sources":["features/sales/allsales/SalesDetail.js","features/sales/allsales/index.js","features/sales/allsales/salesSlice.js","features/sales/returnsales/ReturnDetail.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\"\r\nimport { utils, write } from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport TitleCard from \"../../../components/Cards/TitleCard\";\r\nimport SearchBar from \"../../../components/Input/SearchBar\";\r\nimport DocumentChartBar from '@heroicons/react/24/outline/DocumentChartBarIcon';\r\nimport DocumentText from '@heroicons/react/24/outline/DocumentTextIcon';\r\nimport { ALLSALESDATA } from \"../allsales/index\";\r\n\r\nfunction SalesDetail({salesId}) {\r\n    const [salesObj, setSalesObj] = useState(null);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");    \r\n    const [orderItems, setOrderItems] = useState([]);\r\n    const [discount, setDiscount] = useState(0);\r\n    const [shipping, setShipping] = useState(0);\r\n    const [orderTax, setOrderTax] = useState(0);\r\n\r\n    const customerInfo = [\r\n        \"Gina Maulinda\",\r\n        \"gina@gmail.com\",\r\n        \"0876-5310-2149\",\r\n        \"Sukodono, Rt-05 RW-01\",\r\n      ];\r\n    \r\n      const companyInfo = [\r\n        \"DashStack\",\r\n        \"admin@gmail.com\",\r\n        \"0876-5310-2149\",\r\n        \"Surabaya, RS-05 RW-01\",\r\n      ];\r\n    \r\n      const returnInfo = [\r\n        \"Reference: PR_0012\",\r\n        \"Status: Ordered\",\r\n        \"Warehouse: Warehouse 2\",\r\n        \"Payment Status: Unpaid\",\r\n      ];\r\n\r\n      const InfoCard = ({ title, details }) => (\r\n        <div className=\"space-y-1 text-sm\">\r\n          <h3 className=\"font-bold\">{title}</h3>\r\n          {details.map((detail, idx) => (\r\n            <p key={idx} className=\"text-gray-500\">{detail}</p>\r\n          ))}\r\n        </div>\r\n      );\r\n\r\n    useEffect(() => {\r\n        console.log(\"ALLSALESDATA:\", ALLSALESDATA);\r\n        console.log(\"salesId:\", salesId);\r\n        const sales = ALLSALESDATA.find((c) => c.id === salesId);\r\n        if (sales) {\r\n            console.log(\"Sales Found:\", sales);\r\n            setSalesObj(sales);\r\n            setOrderItems(sales.orderItems || []);\r\n        } else {\r\n            setErrorMessage(\"Data not found.\");\r\n        }\r\n    }, [salesId]);\r\n\r\n  // EXCEL\r\n  const downloadExcel = () => {\r\n    const worksheet = utils.json_to_sheet(ALLSALESDATA); \r\n    const workbook = utils.book_new(); \r\n    utils.book_append_sheet(workbook, worksheet, \"Detail Sales\"); \r\n  \r\n    // Buat file Excel\r\n    const excelBuffer = write(workbook, { bookType: \"xlsx\", type: \"array\" });\r\n  \r\n    // Simpan file dengan nama 'DetailSalesData.xlsx'\r\n    const file = new Blob([excelBuffer], { type: \"application/octet-stream\" });\r\n    saveAs(file, \"DetailSalesData.xlsx\");\r\n  };\r\n\r\n  // PDF\r\n  const downloadPDF = () => {\r\n    const doc = new jsPDF();\r\n  \r\n    // Judul PDF\r\n    doc.text(\"Sales Data\", 14, 10);\r\n  \r\n    // Data tabel\r\n    const tableColumn = [\"Sales Id\", \"Customer\", \"Product\", \"Unit Price\", \"Quantity\", \"Discount\", \"Tax\", \"Grand Total\" ];\r\n    const tableRows = ALLSALESDATA.map(item => [\r\n      item.salesId,\r\n      item.customerName,\r\n      item.product,\r\n      item.unitPrice,\r\n      item.quantity,\r\n      item.discount,\r\n      item.tax,\r\n      item.subtotal,\r\n    ]);\r\n  \r\n    // Menambahkan tabel ke PDF\r\n    doc.autoTable({\r\n      head: [tableColumn],\r\n      body: tableRows,\r\n      startY: 20, // Posisi awal tabel\r\n    });\r\n  \r\n    // Simpan file sebagai 'AllSalesData.pdf'\r\n    doc.save(\"SalesData.pdf\");\r\n  };\r\n\r\n  const subtotal = orderItems.reduce((total, item) => {\r\n    return total + Number(item.subtotal || 0); // Pastikan subtotal adalah angka\r\n}, 0);\r\n\r\n  return (\r\n    <>\r\n      <TitleCard title=\"Detail Sales\">\r\n\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n\r\n            <div className=\"flex items-center space-x-2\">  \r\n            <button className=\"border btn-sm border-success text-success rounded-md px-4 py-2 flex items-center space-x-1 hover:bg-success hover:text-white hover:shadow-xl transition duration-200\"\r\n                onClick={downloadExcel}>\r\n                <DocumentChartBar className=\"h-5 w-5\" /> \r\n                <span>EXCEL</span>\r\n            </button>\r\n            <button className=\"border btn-sm border-error text-error rounded-md px-4 py-2 flex items-center space-x-1 hover:bg-error hover:text-white hover:shadow-xl transition duration-200\"\r\n                onClick={downloadPDF}>\r\n                <DocumentText className=\"h-5 w-5\" /> \r\n                <span>PDF</span>\r\n            </button>         \r\n            </div>\r\n        </div>\r\n\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mt-8\">\r\n          <InfoCard title=\"Customer Info\" details={customerInfo} />\r\n          <div className=\"md:ml-10\">\r\n            <InfoCard title=\"Company Info\" details={companyInfo} />\r\n          </div>\r\n          <div className=\"md:ml-10\">\r\n            <InfoCard title=\"Info of Return\" details={returnInfo} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Order Summary */}\r\n        <div className=\"mt-8\">\r\n          <h3 className=\"font-bold text-lg mb-4\">Order Summary</h3>\r\n        </div>\r\n\r\n        {/* Tabel */}\r\n        <div className=\"w-full\">\r\n            {/* Order Items Table */}\r\n            <table className=\"w-full border-collapse border border-gray-300 mb-6\">\r\n                <thead>\r\n                <tr className=\"bg-gray-200\">\r\n                    <th className=\"border border-[#D9D9D9] px-4 py-2 text-neutral text-left\">\r\n                        #\r\n                    </th>\r\n                    <th className=\"border border-[#D9D9D9] px-4 py-2 text-neutral text-left\">\r\n                        Product\r\n                    </th>\r\n                    <th className=\"border border-[#D9D9D9] px-4 py-2 text-neutral text-left\">\r\n                        Unit Price\r\n                    </th>\r\n                    <th className=\"border border-[#D9D9D9] px-4 py-2 text-neutral text-left\">\r\n                        Quantity\r\n                    </th>\r\n                    <th className=\"border border-[#D9D9D9] px-4 py-2 text-neutral text-left\">\r\n                        Discount\r\n                    </th>\r\n                    <th className=\"border border-[#D9D9D9] px-4 py-2 text-neutral text-left\">\r\n                        Tax\r\n                    </th>\r\n                    <th className=\"border border-[#D9D9D9] px-4 py-2 text-neutral text-left\">\r\n                        Subtotal\r\n                    </th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {orderItems.map((item, index) => (\r\n                        <tr key={item.salesId || index}>\r\n                        <td className=\"border border-gray-300 px-4 py-2\">{index + 1}</td>\r\n                        <td className=\"border border-gray-300 px-4 py-2\">{item.product}</td>\r\n                        <td className=\"border border-gray-300 px-4 py-2\">{item.unitPrice}</td>\r\n                        <td className=\"border border-gray-300 px-4 py-2\">{item.quantity}</td>\r\n                        <td className=\"border border-gray-300 px-4 py-2\">{item.discount}</td>\r\n                        <td className=\"border border-gray-300 px-4 py-2\">{item.tax}</td>\r\n                        <td className=\"border border-gray-300 px-4 py-2\">{item.subtotal}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        {/* Total Summary */}\r\n        <div className=\"flex justify-end mb-6\">\r\n            <div className=\"text-sm text-right w-72\">\r\n            <div className=\"bg-gray-200 border-t border-b border-black p-2 flex justify-between\">\r\n                <span className=\"text-sm text-neutral font-bold\">Grand Total:</span>\r\n                <span className=\"text-sm text-neutral font-bold\">${subtotal.toFixed(2)}</span>\r\n            </div>\r\n            </div>\r\n        </div>\r\n\r\n      </TitleCard>     \r\n    </>\r\n  );\r\n}\r\n\r\nexport default SalesDetail;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\"\r\nimport { utils, write } from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport TitleCard from \"../../../components/Cards/TitleCard\";\r\nimport SearchBar from \"../../../components/Input/SearchBar\";\r\nimport EllipsisVertical from '@heroicons/react/24/outline/EllipsisVerticalIcon';\r\nimport Eye from '@heroicons/react/24/outline/EyeIcon';\r\nimport PencilSquare from '@heroicons/react/24/outline/PencilSquareIcon';\r\nimport CreditCard from '@heroicons/react/24/outline/CreditCardIcon';\r\nimport Trash from '@heroicons/react/24/outline/TrashIcon';\r\nimport Funnel from '@heroicons/react/24/outline/FunnelIcon';\r\nimport PlusCircle from '@heroicons/react/24/outline/PlusCircleIcon';\r\nimport DocumentChartBar from '@heroicons/react/24/outline/DocumentChartBarIcon';\r\nimport DocumentText from '@heroicons/react/24/outline/DocumentTextIcon';\r\nimport { NavLink,  Routes, Link , useLocation, useNavigate} from 'react-router-dom'\r\nimport { openRightDrawer } from '../../../features/common/rightDrawerSlice';\r\nimport { showNotification } from \"../../common/headerSlice\";\r\nimport { openModal } from \"../../common/modalSlice\";\r\nimport SalesDetail from \"../allsales/SalesDetail\";\r\nimport { deleteSales, editSales, getSalesContent } from \"../../sales/allsales/salesSlice\";\r\nimport { RIGHT_DRAWER_TYPES, CONFIRMATION_MODAL_CLOSE_TYPES, MODAL_BODY_TYPES } from '../../../../src/utils/globalConstantUtil';\r\n\r\nexport const ALLSALESDATA = [\r\n  {\r\n    salesId: 1, \r\n    date: \"12-12-2024\", \r\n    addedBy: \"Cashier\", \r\n    customerName: \"Gina Maulinda\", \r\n    warehouse: \"Warehouse 1\", \r\n    grandTotal: \"1527.00\", \r\n    paid: \"1527.00\", \r\n    due: \"0.0\",\r\n    orderItems: [\r\n        { \r\n          product: \"MacBook\", \r\n          unitPrice: \"1300.000\", \r\n          quantity: \"1.0\", \r\n          discount: \"0.00\", \r\n          tax: \"0.00\", \r\n          subtotal: \"1300.000\" \r\n        },\r\n        {\r\n          product: \"MacBook\", \r\n          unitPrice: \"1300.000\", \r\n          quantity: \"1.0\", \r\n          discount: \"0.00\", \r\n          tax: \"0.00\", \r\n          subtotal: \"1300.000\"\r\n        },\r\n    ],\r\n  },\r\n  { \r\n    salesId: 2, \r\n    date: \"13-12-2024\", \r\n    addedBy: \"Cashier\", \r\n    customerName: \"Ahmad Fikri\", \r\n    warehouse: \"Warehouse 2\", \r\n    grandTotal: \"1038.00\", \r\n    paid: \"1038.00\", \r\n    due: \"0.0\", \r\n    orderItems: [\r\n      {\r\n        product: \"MacBook\", \r\n        unitPrice: \"1300.000\", \r\n        quantity: \"2.0\", \r\n        discount: \"0.00\", \r\n        tax: \"0.00\", \r\n        subtotal: \"2600.000\"\r\n      },\r\n      {\r\n        product: \"Sunglass\", \r\n        unitPrice: \"100.000\", \r\n        quantity: \"1.0\", \r\n        discount: \"0.00\", \r\n        tax: \"0.00\", \r\n        subtotal: \"100.000\"\r\n      },\r\n    ],     \r\n  },\r\n];\r\n\r\nfunction AllSales() {\r\n  const [allsales] = useState(ALLSALESDATA);\r\n\r\n  // DROPDOWN\r\n  const [openDropdown, setOpenDropdown] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  // Mengaktifkan Dropdown\r\n  const handleActionClick = (index) => {\r\n    setOpenDropdown(openDropdown === index ? null : index); \r\n  };\r\n\r\n  // FILTER\r\n  const openSalesFilter = () => {\r\n    dispatch(openRightDrawer({header : \"Filters\", bodyType : RIGHT_DRAWER_TYPES.SALES_FILTER}));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getSalesContent())\r\n  }, [])  \r\n    \r\n  // PAGINATION\r\n  const [searchText, setSearchText] = useState(\"\"); // Untuk teks pencarian\r\n  const [currentPage, setCurrentPage] = useState(1); // Halaman saat ini\r\n  const itemsPerPage = 10; // Jumlah item per halaman\r\n\r\n  // Filter data berdasarkan teks pencarian\r\n  const filteredSales = ALLSALESDATA.filter((sales) =>\r\n    sales.customerName.toLowerCase().includes(searchText.toLowerCase())\r\n  );\r\n\r\n  // Hitung jumlah halaman\r\n  const totalPages = Math.ceil(filteredSales.length / itemsPerPage);\r\n\r\n  // Ambil data untuk halaman aktif\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = filteredSales.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  // EXCEL\r\n  const downloadExcel = () => {\r\n    const worksheet = utils.json_to_sheet(ALLSALESDATA); \r\n    const workbook = utils.book_new(); \r\n    utils.book_append_sheet(workbook, worksheet, \"All Sales\"); \r\n  \r\n    // Buat file Excel\r\n    const excelBuffer = write(workbook, { bookType: \"xlsx\", type: \"array\" });\r\n  \r\n    // Simpan file dengan nama 'AllSalesData.xlsx'\r\n    const file = new Blob([excelBuffer], { type: \"application/octet-stream\" });\r\n    saveAs(file, \"AllSalesData.xlsx\");\r\n  };\r\n\r\n  // PDF\r\n  const downloadPDF = () => {\r\n    const doc = new jsPDF();\r\n  \r\n    // Judul PDF\r\n    doc.text(\"Sales Data\", 14, 10);\r\n  \r\n    // Data tabel\r\n    const tableColumn = [\"Date\", \"Added By\", \"Customer Name\", \"Warehouse\", \"Grand Total\", \"Paid\", \"Due\" ];\r\n    const tableRows = ALLSALESDATA.map(item => [\r\n      item.date,\r\n      item.addedBy,\r\n      item.customerName,\r\n      item.warehouse,\r\n      item.grandTotal,\r\n      item.paid,\r\n      item.due,\r\n    ]);\r\n  \r\n    // Menambahkan tabel ke PDF\r\n    doc.autoTable({\r\n      head: [tableColumn],\r\n      body: tableRows,\r\n      startY: 20, // Posisi awal tabel\r\n    });\r\n  \r\n    // Simpan file sebagai 'AllSalesData.pdf'\r\n    doc.save(\"AllSalesData.pdf\");\r\n  };\r\n\r\n  // VIEW\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = () => {\r\n    navigate(\"/app/salesdetail\");\r\n  };\r\n\r\n  // DELETE\r\n  const deleteSales = (index) => {\r\n    dispatch(openModal({\r\n        title: \"Delete\",\r\n        bodyType: MODAL_BODY_TYPES.CONFIRMATION,\r\n        extraObject: { \r\n            message: `Are you sure you want to delete this data?`, \r\n            type: CONFIRMATION_MODAL_CLOSE_TYPES.SALES_DELETE, \r\n            index,\r\n            onConfirm: () => handleDeleteConfirmation(index) \r\n        }\r\n    }));\r\n  };\r\n\r\n  // Status\r\n  const getDummyStatus = (index) => {\r\n    if (index % 5 === 0) {\r\n        return (\r\n            <div className=\"badge badge-success\">\r\n                <span className=\"text-white px-1\">Delivered</span>\r\n            </div>\r\n        );\r\n    } else if (index % 5 === 1) {\r\n        return (\r\n            <div className=\"badge bg-gray-500\">\r\n                <span className=\"text-white px-2\">Pending</span>\r\n            </div>\r\n        );\r\n    } else {\r\n        return null; // Atau ganti dengan badge lainnya jika dibutuhkan\r\n    }\r\n  };\r\n\r\n\r\n  const handleDeleteConfirmation = async (index) => {\r\n      dispatch(deleteSales(index)); \r\n\r\n      // Tampilkan notifikasi\r\n      dispatch(showNotification({\r\n          message: \"Data deleted successfully!\",\r\n          status: 1 \r\n      }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TitleCard title=\"All Sales Management\">\r\n\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n\r\n        <SearchBar\r\n            searchText={searchText}\r\n            setSearchText={(text) => {\r\n              setSearchText(text);\r\n              setCurrentPage(1); // Reset ke halaman pertama setelah search\r\n            }}\r\n          /> \r\n\r\n            <div className=\"flex items-center space-x-2\">    \r\n            <button className=\"border btn-sm border-primary text-primary rounded-md px-4 py-2 flex items-center space-x-1 hover:bg-primary hover:text-white hover:shadow-xl transition duration-200\"\r\n                onClick={() => openSalesFilter()} >\r\n                <Funnel className=\"h-5 w-5\"/>\r\n                <span>Filter</span>\r\n            </button>      \r\n            <button className=\"border btn-sm border-success text-success rounded-md px-4 py-2 flex items-center space-x-1 hover:bg-success hover:text-white hover:shadow-xl transition duration-200\"\r\n                onClick={downloadExcel}>\r\n                <DocumentChartBar className=\"h-5 w-5\" /> \r\n                <span>EXCEL</span>\r\n            </button>\r\n            <button className=\"border btn-sm border-error text-error rounded-md px-4 py-2 flex items-center space-x-1 hover:bg-error hover:text-white hover:shadow-xl transition duration-200\"\r\n                onClick={downloadPDF}>\r\n                <DocumentText className=\"h-5 w-5\" /> \r\n                <span>PDF</span>\r\n            </button>         \r\n            </div>\r\n        </div>\r\n\r\n        {/* Tabel pelanggan */}\r\n        <div className=\"w-full\">\r\n            <table className=\"table w-full table-auto\">\r\n            <thead>\r\n                <tr>\r\n                <th className=\"text-center text-primary text-base\">Date</th>\r\n                <th className=\"text-center text-primary text-base\">Added By</th>\r\n                <th className=\"text-center text-primary text-base\">Customer</th>\r\n                <th className=\"text-center text-primary text-base\">Warehouse</th>\r\n                <th className=\"text-center text-primary text-base\">Grand Total</th>\r\n                <th className=\"text-center text-primary text-base\">Paid</th>\r\n                <th className=\"text-center text-primary text-base\">Due</th> \r\n                <th className=\"text-center text-primary text-base\">Status</th>                \r\n                <th className=\"text-center text-primary text-base\">Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {currentItems.map((sales, index) => (\r\n                  <tr key={index}>\r\n                    <td className=\"text-center\">{sales.date}</td>\r\n                    <td className=\"text-center\">{sales.addedBy}</td>\r\n                    <td className=\"text-center\">{sales.customerName}</td>\r\n                    <td className=\"text-center\">{sales.warehouse}</td>\r\n                    <td className=\"text-center\">{sales.grandTotal}</td>\r\n                    <td className=\"text-center\">{sales.paid}</td>\r\n                    <td className=\"text-center\">{sales.due}</td>\r\n                    <td className=\"text-center\">{getDummyStatus(index)}</td>\r\n                    <td>\r\n                      <div className=\"dropdown dropdown-end ml-4\">\r\n                        <button onClick={() => handleActionClick(index)}>\r\n                          <EllipsisVertical className=\"h-6 w-6\" />\r\n                        </button>\r\n                        <ul\r\n                          tabIndex={0}\r\n                          className=\"menu menu-compact dropdown-content shadow bg-base-100 rounded-box w-30 z-50\"\r\n                        >\r\n                          {/* View */}\r\n                          <div className=\"flex items-center ml-2\">\r\n                            <Eye className=\"h-5 w-5 inline-block\" />\r\n                                <li onClick={handleClick}>\r\n                                  <span>View</span>\r\n                                </li>\r\n                          </div>         \r\n\r\n                          {/* Delete */}\r\n                          <div className=\"flex items-center ml-2\">\r\n                              <Trash className=\"h-5 w-5 inline-block\" />\r\n                              <li onClick={() => deleteSales(index)}>  \r\n                                  <span>Delete</span>\r\n                              </li>\r\n                          </div>\r\n                         \r\n                        </ul>\r\n                      </div>\r\n                    </td>\r\n                </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {/* Page Content */}\r\n        <div className=\"flex justify-between items-center mt-5 mx-5 space-x-4\">\r\n          {/* Text for current page */}\r\n          <span className=\"text-sm text-gray-500\">\r\n            Rows Per Page <span className=\"font-bold text-primary\">{itemsPerPage}</span>\r\n          </span>\r\n\r\n          {/* Pagination */}\r\n          <div className=\"flex justify-end items-center space-x-4\">\r\n            {/* Text for current page */}\r\n            <span className=\"text-sm text-gray-500\">\r\n              Page <span className=\"font-bold text-primary\">{currentPage}</span> of <span className=\"font-bold text-primary\">{totalPages}</span>\r\n            </span>\r\n\r\n            {/* Pagination buttons */}\r\n            <div className=\"join\">\r\n              {Array.from({ length: totalPages }, (_, i) => (\r\n                <button\r\n                  key={i + 1}\r\n                  className={`join-item btn btn-sm ${currentPage === i + 1 ? 'btn-primary btn-active' : ''}`}\r\n                  onClick={() => setCurrentPage(i + 1)}\r\n                >\r\n                  {i + 1}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </TitleCard>     \r\n    </>\r\n  );\r\n}\r\n\r\nexport default AllSales;\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nexport const getSalesContent = createAsyncThunk('/Users/content', async () => {\r\n\tconst response = await axios.get('/api/users?page=1', {})\r\n\treturn response.data;\r\n})\r\n\r\nexport const SalesSlice = createSlice({\r\n    name: 'Sale',\r\n    initialState: {\r\n        isLoading: false,\r\n        Sales: []\r\n    },\r\n    \r\n    reducers: {\r\n        addNewSales: (state, action) => {\r\n            const { newSalesObj } = action.payload;\r\n            state.Sales = [...state.Sales, newSalesObj];\r\n        },\r\n\r\n        deleteSales: (state, action) => {\r\n            const { index } = action.payload;\r\n            state.Sales.splice(index, 1);\r\n        },\r\n\r\n        editSales: (state, action) => {\r\n            const { index, updatedSaleObj } = action.payload;\r\n            state.Sales[index] = { ...state.Sales[index], ...updatedSaleObj };\r\n        }\r\n    },\r\n\r\n    extraReducers: {\r\n        [getSalesContent.pending]: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        [getSalesContent.fulfilled]: (state, action) => {\r\n            state.Sales = action.payload.data;\r\n            state.isLoading = false;\r\n        },\r\n        [getSalesContent.rejected]: (state) => {\r\n            state.isLoading = false;\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addNewSales, deleteSales, editSale } = SalesSlice.actions;\r\n\r\nexport default SalesSlice.reducer;\r\n\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\"\r\nimport { utils, write } from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport TitleCard from \"../../../components/Cards/TitleCard\";\r\nimport SearchBar from \"../../../components/Input/SearchBar\";\r\nimport DocumentChartBar from '@heroicons/react/24/outline/DocumentChartBarIcon';\r\nimport DocumentText from '@heroicons/react/24/outline/DocumentTextIcon';\r\nimport { ALLSALESDATA } from \"../allsales/index\";\r\n\r\nfunction ReturnDetail({salesId}) {\r\n    const [salesObj, setSalesObj] = useState(null);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");    \r\n    const [orderItems, setOrderItems] = useState([]);\r\n    const [discount, setDiscount] = useState(0);\r\n    const [shipping, setShipping] = useState(0);\r\n    const [orderTax, setOrderTax] = useState(0);\r\n\r\n    const customerInfo = [\r\n        \"Gina Maulinda\",\r\n        \"gina@gmail.com\",\r\n        \"0876-5310-2149\",\r\n        \"Sukodono, Rt-05 RW-01\",\r\n      ];\r\n    \r\n      const companyInfo = [\r\n        \"DashStack\",\r\n        \"admin@gmail.com\",\r\n        \"0876-5310-2149\",\r\n        \"Surabaya, RS-05 RW-01\",\r\n      ];\r\n    \r\n      const returnInfo = [\r\n        \"Reference: PR_0012\",\r\n        \"Status: Ordered\",\r\n        \"Warehouse: Warehouse 2\",\r\n        \"Payment Status: Unpaid\",\r\n      ];\r\n\r\n      const InfoCard = ({ title, details }) => (\r\n        <div className=\"space-y-1 text-sm\">\r\n          <h3 className=\"font-bold\">{title}</h3>\r\n          {details.map((detail, idx) => (\r\n            <p key={idx} className=\"text-gray-500\">{detail}</p>\r\n          ))}\r\n        </div>\r\n      );\r\n\r\n    useEffect(() => {\r\n        console.log(\"ALLSALESDATA:\", ALLSALESDATA);\r\n        console.log(\"salesId:\", salesId);\r\n        const sales = ALLSALESDATA.find((c) => c.id === salesId);\r\n        if (sales) {\r\n            console.log(\"Sales Found:\", sales);\r\n            setSalesObj(sales);\r\n            setOrderItems(sales.orderItems || []);\r\n        } else {\r\n            setErrorMessage(\"Data not found.\");\r\n        }\r\n    }, [salesId]);\r\n\r\n  // EXCEL\r\n  const downloadExcel = () => {\r\n    const worksheet = utils.json_to_sheet(ALLSALESDATA); \r\n    const workbook = utils.book_new(); \r\n    utils.book_append_sheet(workbook, worksheet, \"Detail Sales\"); \r\n  \r\n    // Buat file Excel\r\n    const excelBuffer = write(workbook, { bookType: \"xlsx\", type: \"array\" });\r\n  \r\n    // Simpan file dengan nama 'DetailSalesData.xlsx'\r\n    const file = new Blob([excelBuffer], { type: \"application/octet-stream\" });\r\n    saveAs(file, \"DetailSalesData.xlsx\");\r\n  };\r\n\r\n  // PDF\r\n  const downloadPDF = () => {\r\n    const doc = new jsPDF();\r\n  \r\n    // Judul PDF\r\n    doc.text(\"Sales Data\", 14, 10);\r\n  \r\n    // Data tabel\r\n    const tableColumn = [\"Sales Id\", \"Customer\", \"Product\", \"Unit Price\", \"Quantity\", \"Discount\", \"Tax\", \"Grand Total\" ];\r\n    const tableRows = ALLSALESDATA.map(item => [\r\n      item.salesId,\r\n      item.customerName,\r\n      item.product,\r\n      item.unitPrice,\r\n      item.quantity,\r\n      item.discount,\r\n      item.tax,\r\n      item.subtotal,\r\n    ]);\r\n  \r\n    // Menambahkan tabel ke PDF\r\n    doc.autoTable({\r\n      head: [tableColumn],\r\n      body: tableRows,\r\n      startY: 20, // Posisi awal tabel\r\n    });\r\n  \r\n    // Simpan file sebagai 'AllSalesData.pdf'\r\n    doc.save(\"SalesData.pdf\");\r\n  };\r\n\r\n  const subtotal = orderItems.reduce((total, item) => {\r\n    return total + Number(item.subtotal || 0); // Pastikan subtotal adalah angka\r\n}, 0);\r\n\r\n  return (\r\n    <>\r\n      <TitleCard title=\"Detail Sales\">\r\n\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n\r\n            <div className=\"flex items-center space-x-2\">  \r\n            <button className=\"border btn-sm border-success text-success rounded-md px-4 py-2 flex items-center space-x-1 hover:bg-success hover:text-white hover:shadow-xl transition duration-200\"\r\n                onClick={downloadExcel}>\r\n                <DocumentChartBar className=\"h-5 w-5\" /> \r\n                <span>EXCEL</span>\r\n            </button>\r\n            <button className=\"border btn-sm border-error text-error rounded-md px-4 py-2 flex items-center space-x-1 hover:bg-error hover:text-white hover:shadow-xl transition duration-200\"\r\n                onClick={downloadPDF}>\r\n                <DocumentText className=\"h-5 w-5\" /> \r\n                <span>PDF</span>\r\n            </button>         \r\n            </div>\r\n        </div>\r\n\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mt-8\">\r\n          <InfoCard title=\"Customer Info\" details={customerInfo} />\r\n          <div className=\"md:ml-10\">\r\n            <InfoCard title=\"Company Info\" details={companyInfo} />\r\n          </div>\r\n          <div className=\"md:ml-10\">\r\n            <InfoCard title=\"Info of Return\" details={returnInfo} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Order Summary */}\r\n        <div className=\"mt-8\">\r\n          <h3 className=\"font-bold text-lg mb-4\">Order Summary</h3>\r\n        </div>\r\n\r\n        {/* Tabel */}\r\n        <div className=\"w-full\">\r\n            {/* Order Items Table */}\r\n            <table className=\"w-full border-collapse border border-gray-300 mb-6\">\r\n                <thead>\r\n                <tr className=\"bg-gray-200\">\r\n                    <th className=\"border border-[#D9D9D9] px-4 py-2 text-neutral text-left\">\r\n                        #\r\n                    </th>\r\n                    <th className=\"border border-[#D9D9D9] px-4 py-2 text-neutral text-left\">\r\n                        Product\r\n                    </th>\r\n                    <th className=\"border border-[#D9D9D9] px-4 py-2 text-neutral text-left\">\r\n                        Unit Price\r\n                    </th>\r\n                    <th className=\"border border-[#D9D9D9] px-4 py-2 text-neutral text-left\">\r\n                        Quantity\r\n                    </th>\r\n                    <th className=\"border border-[#D9D9D9] px-4 py-2 text-neutral text-left\">\r\n                        Discount\r\n                    </th>\r\n                    <th className=\"border border-[#D9D9D9] px-4 py-2 text-neutral text-left\">\r\n                        Tax\r\n                    </th>\r\n                    <th className=\"border border-[#D9D9D9] px-4 py-2 text-neutral text-left\">\r\n                        Subtotal\r\n                    </th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {orderItems.map((item, index) => (\r\n                        <tr key={item.salesId || index}>\r\n                        <td className=\"border border-gray-300 px-4 py-2\">{index + 1}</td>\r\n                        <td className=\"border border-gray-300 px-4 py-2\">{item.product}</td>\r\n                        <td className=\"border border-gray-300 px-4 py-2\">{item.unitPrice}</td>\r\n                        <td className=\"border border-gray-300 px-4 py-2\">{item.quantity}</td>\r\n                        <td className=\"border border-gray-300 px-4 py-2\">{item.discount}</td>\r\n                        <td className=\"border border-gray-300 px-4 py-2\">{item.tax}</td>\r\n                        <td className=\"border border-gray-300 px-4 py-2\">{item.subtotal}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        {/* Total Summary */}\r\n        <div className=\"flex justify-end mb-6\">\r\n            <div className=\"text-sm text-right w-72\">\r\n            <div className=\"bg-gray-200 border-t border-b border-black p-2 flex justify-between\">\r\n                <span className=\"text-sm text-neutral font-bold\">Grand Total:</span>\r\n                <span className=\"text-sm text-neutral font-bold\">${subtotal.toFixed(2)}</span>\r\n            </div>\r\n            </div>\r\n        </div>\r\n\r\n      </TitleCard>     \r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReturnDetail;\r\n"],"names":["_ref","salesId","salesObj","setSalesObj","useState","errorMessage","setErrorMessage","orderItems","setOrderItems","discount","setDiscount","shipping","setShipping","orderTax","setOrderTax","InfoCard","_ref2","title","details","_jsxs","className","children","_jsx","map","detail","idx","useEffect","console","log","ALLSALESDATA","sales","find","c","id","subtotal","reduce","total","item","Number","_Fragment","TitleCard","onClick","downloadExcel","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","write","bookType","type","file","Blob","saveAs","DocumentChartBar","downloadPDF","doc","jsPDF","text","tableRows","customerName","product","unitPrice","quantity","tax","autoTable","head","body","startY","save","DocumentText","index","toFixed","date","addedBy","warehouse","grandTotal","paid","due","allsales","openDropdown","setOpenDropdown","dispatch","useDispatch","getSalesContent","searchText","setSearchText","currentPage","setCurrentPage","filteredSales","filter","toLowerCase","includes","totalPages","Math","ceil","length","indexOfLastItem","indexOfFirstItem","currentItems","slice","navigate","useNavigate","handleClick","deleteSales","openModal","bodyType","MODAL_BODY_TYPES","CONFIRMATION","extraObject","message","CONFIRMATION_MODAL_CLOSE_TYPES","SALES_DELETE","onConfirm","handleDeleteConfirmation","getDummyStatus","async","showNotification","status","SearchBar","openRightDrawer","header","RIGHT_DRAWER_TYPES","SALES_FILTER","Funnel","handleActionClick","EllipsisVertical","tabIndex","Eye","Trash","Array","from","_","i","createAsyncThunk","axios","get","data","SalesSlice","createSlice","name","initialState","isLoading","Sales","reducers","addNewSales","state","action","newSalesObj","payload","splice","editSales","updatedSaleObj","extraReducers","pending","fulfilled","rejected","editSale","actions"],"sourceRoot":""}