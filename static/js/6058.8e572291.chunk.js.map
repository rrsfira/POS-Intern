{"version":3,"file":"static/js/6058.8e572291.chunk.js","mappings":";mGAUO,SAASA,IACJ,0KAML,MAAMC,EAAM,MACjB,IAAIC,EAAK,EACT,MAAO,IAAMA,GACd,EAHkB,GAUZ,SAASC,EAAcC,GAC5B,OAAiB,OAAVA,GAAmC,qBAAVA,CACjC,CAOM,SAASC,EAAqBD,GACnC,GAAIE,MAAMD,SAAWC,MAAMD,QAAQD,GACjC,OAAO,EAET,MAAMG,EAAOC,OAAOC,UAAUC,SAASC,KAAKP,GAC5C,MAAyB,YAArBG,EAAKK,MAAM,EAAG,IAAuC,WAAnBL,EAAKK,OAAO,EAInD,CAOM,SAASC,EAAST,GACvB,OAAiB,OAAVA,GAA4D,oBAA1CI,OAAOC,UAAUC,SAASC,KAAKP,EACzD,CAMD,SAASU,EAAeV,GACtB,OAAyB,kBAAVA,GAAsBA,aAAiBW,SAAWC,UAAUZ,EAC5E,CAUM,SAASa,EAAgBb,EAAgBc,GAC9C,OAAOJ,EAAeV,GAASA,EAAQc,CACxC,CAOM,SAASC,EAAkBf,EAAsBc,GACtD,MAAwB,qBAAVd,EAAwBc,EAAed,CACtD,CAEYgB,MAKAC,EAAcA,CAACjB,EAAwBkB,IACjC,kBAAVlB,GAAsBA,EAAMmB,SAAS,KAC1CC,WAAWpB,GAAS,IAAMkB,GACvBlB,EASA,SAASqB,EACdC,EACAC,EACAC,GAEA,GAAIF,GAAyB,oBAAZA,EAAGf,KAClB,OAAOe,EAAGG,MAAMD,EAASD,EAE5B,CAuBM,SAASG,EACdC,EACAL,EACAE,EACAI,GAEA,IAAIC,EAAWC,EAAaC,EAC5B,GAAI9B,EAAQ0B,GAEV,GADAG,EAAMH,EAASK,OACXJ,EACF,IAAKC,EAAIC,EAAM,EAAGD,GAAK,EAAGA,IACxBP,EAAGf,KAAKiB,EAASG,EAASE,GAAIA,QAGhC,IAAKA,EAAI,EAAGA,EAAIC,EAAKD,IACnBP,EAAGf,KAAKiB,EAASG,EAASE,GAAIA,QAG7B,GAAIpB,EAASkB,GAGlB,IAFAI,EAAO3B,OAAO2B,KAAKJ,GACnBG,EAAMC,EAAKC,OACNH,EAAI,EAAGA,EAAIC,EAAKD,IACnBP,EAAGf,KAAKiB,EAASG,EAASI,EAAKF,IAAKE,EAAKF,GAG9C,CAQM,SAASI,EAAeC,EAAuBC,GACpD,IAAIN,EAAWO,EAAcC,EAAqBC,EAElD,IAAKJ,IAAOC,GAAMD,EAAGF,SAAWG,EAAGH,OACjC,OAAO,EAGT,IAAKH,EAAI,EAAGO,EAAOF,EAAGF,OAAQH,EAAIO,IAAQP,EAIxC,GAHAQ,EAAKH,EAAGL,GACRS,EAAKH,EAAGN,GAEJQ,EAAGE,eAAiBD,EAAGC,cAAgBF,EAAGG,QAAUF,EAAGE,MACzD,OAAO,EAIX,OAAO,CACR,CAMM,SAASC,EAASC,GACvB,GAAIzC,EAAQyC,GACV,OAAOA,EAAOC,IAAIF,GAGpB,GAAIhC,EAASiC,GAAS,CACpB,MAAME,EAASxC,OAAOyC,OAAO,MACvBd,EAAO3B,OAAO2B,KAAKW,GACnBI,EAAOf,EAAKC,OAClB,IAAIe,EAAI,EAER,KAAOA,EAAID,IAAQC,EACjBH,EAAOb,EAAKgB,IAAMN,EAAMC,EAAOX,EAAKgB,KAGtC,OAAOH,CACR,CAED,OAAOF,CACR,CAED,SAASM,EAAWC,GAClB,OAAmE,IAA5D,CAAC,YAAa,YAAa,eAAeC,QAAQD,EAC1D,CAOM,SAASE,EAAQF,EAAaL,EAAmBF,EAAmBU,GACzE,IAAKJ,EAAWC,GACd,OAGF,MAAMI,EAAOT,EAAOK,GACdK,EAAOZ,EAAOO,GAEhBxC,EAAS4C,IAAS5C,EAAS6C,GAE7BC,EAAMF,EAAMC,EAAMF,GAElBR,EAAOK,GAAOR,EAAMa,EAEvB,CA0BM,SAASC,EAASX,EAAWF,EAAqBU,GACvD,MAAMI,EAAUvD,EAAQyC,GAAUA,EAAS,CAACA,GACtCN,EAAOoB,EAAQxB,OAErB,IAAKvB,EAASmC,GACZ,OAAOA,EAIT,MAAMa,GADNL,EAAUA,GAAW,CAAC,GACCK,QAAUN,EACjC,IAAIO,EAEJ,IAAK,IAAI7B,EAAI,EAAGA,EAAIO,IAAQP,EAAG,CAE7B,GADA6B,EAAUF,EAAQ3B,IACbpB,EAASiD,GACZ,SAGF,MAAM3B,EAAO3B,OAAO2B,KAAK2B,GACzB,IAAK,IAAIX,EAAI,EAAGD,EAAOf,EAAKC,OAAQe,EAAID,IAAQC,EAC9CU,EAAO1B,EAAKgB,GAAIH,EAAQc,EAASN,EAEpC,CAED,OAAOR,CACR,CAgBM,SAASe,EAAWf,EAAWF,GAEpC,OAAOa,EAASX,EAAQF,EAAQ,CAACe,OAAQG,GAC1C,CAMM,SAASA,EAAUX,EAAaL,EAAmBF,GACxD,IAAKM,EAAWC,GACd,OAGF,MAAMI,EAAOT,EAAOK,GACdK,EAAOZ,EAAOO,GAEhBxC,EAAS4C,IAAS5C,EAAS6C,GAC7BK,EAAQN,EAAMC,GACJlD,OAAOC,UAAUwD,eAAetD,KAAKqC,EAAQK,KACvDL,EAAOK,GAAOR,EAAMa,GAEvB,CAaD,MAAMQ,EAAe,CAEnB,GAAIC,GAAKA,EAETC,EAAGC,GAAKA,EAAED,EACVE,EAAGD,GAAKA,EAAEC,GAqCL,SAASC,EAAiBC,EAAgBnB,GAC/C,MAAMoB,EAAWP,EAAab,KAASa,EAAab,GAhBtD,SAAyBA,GACvB,MAAMlB,EAjBD,SAAmBkB,GACxB,MAAMqB,EAAQrB,EAAIsB,MAAM,KAClBxC,EAAiB,GACvB,IAAIyC,EAAM,GACV,IAAK,MAAMC,KAAQH,EACjBE,GAAOC,EACHD,EAAIrD,SAAS,MACfqD,EAAMA,EAAIhE,MAAM,GAAI,GAAK,KAEzBuB,EAAK2C,KAAKF,GACVA,EAAM,IAGV,OAAOzC,CACR,CAGc4C,CAAU1B,GACvB,OAAOmB,IACL,IAAK,MAAMrB,KAAKhB,EAAM,CACpB,GAAU,KAANgB,EAGF,MAEFqB,EAAMA,GAAOA,EAAIrB,EAClB,CACD,OAAOqB,CAAG,CAEb,CAG4DQ,CAAgB3B,IAC3E,OAAOoB,EAASD,EACjB,CAKM,SAASS,EAAYC,GAC1B,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAItE,MAAM,EAChD,CAGM,MAAMyE,EAAWjF,GAAoC,qBAAVA,EAErCkF,EAAclF,GAAsE,oBAAVA,EAG1EmF,EAAYA,CAAIC,EAAWC,KACtC,GAAID,EAAEE,OAASD,EAAEC,KACf,OAAO,EAGT,IAAK,MAAMC,KAAQH,EACjB,IAAKC,EAAEG,IAAID,GACT,OAAO,EAIX,OAAO,CAAI,EC9YAE,MAAAA,EAAKC,KAAKD,GACVE,EAAM,EAAIF,EACVG,EAAQD,EAAMF,EACdI,EAAWlF,OAAOmF,kBAClBC,EAAcN,EAAK,IACnBO,EAAUP,EAAK,EACfQ,EAAaR,EAAK,EAClBS,EAAqB,EAALT,EAAS,EAEzBU,EAAQT,KAAKS,MACbC,EAAOV,KAAKU,KAElB,SAASC,EAAarC,EAAWE,EAAWoC,GACjD,OAAOZ,KAAKa,IAAIvC,EAAIE,GAAKoC,CAC1B,CAKM,SAASE,EAAQC,GACtB,MAAMC,EAAehB,KAAKiB,MAAMF,GAChCA,EAAQJ,EAAaI,EAAOC,EAAcD,EAAQ,KAAQC,EAAeD,EACzE,MAAMG,EAAYlB,KAAKmB,IAAI,GAAInB,KAAKoB,MAAMX,EAAMM,KAC1CM,EAAWN,EAAQG,EAEzB,OADqBG,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAI,IAC3DH,CACvB,CAyBM,SAASI,EAASC,GACvB,OAAQC,MAAM9F,WAAW6F,KAAiBrG,SAASqG,EACpD,CAUM,SAASE,EACdC,EACAxE,EACAyE,GAEA,IAAIxF,EAAWO,EAAcpC,EAE7B,IAAK6B,EAAI,EAAGO,EAAOgF,EAAMpF,OAAQH,EAAIO,EAAMP,IACzC7B,EAAQoH,EAAMvF,GAAGwF,GACZH,MAAMlH,KACT4C,EAAO0E,IAAM5B,KAAK4B,IAAI1E,EAAO0E,IAAKtH,GAClC4C,EAAO2E,IAAM7B,KAAK6B,IAAI3E,EAAO2E,IAAKvH,GAGvC,CAEM,SAASwH,EAAUC,GACxB,OAAOA,GAAWhC,EAAK,IACxB,CAEM,SAASiC,EAAUC,GACxB,OAAOA,GAAW,IAAMlC,EACzB,CASM,SAASmC,EAAe5D,GAC7B,IAAK6D,EAAe7D,GAClB,OAEF,IAAI8D,EAAI,EACJC,EAAI,EACR,KAAOrC,KAAKiB,MAAM3C,EAAI8D,GAAKA,IAAM9D,GAC/B8D,GAAK,GACLC,IAEF,OAAOA,CACR,CAGM,SAASC,EACdC,EACAC,GAEA,MAAMC,EAAsBD,EAAWlE,EAAIiE,EAAYjE,EACjDoE,EAAsBF,EAAWhE,EAAI+D,EAAY/D,EACjDmE,EAA2B3C,KAAK4C,KAAKH,EAAsBA,EAAsBC,EAAsBA,GAE7G,IAAIG,EAAQ7C,KAAK8C,MAAMJ,EAAqBD,GAM5C,OAJII,GAAU,GAAM9C,IAClB8C,GAAS5C,GAGJ,CACL4C,QACAE,SAAUJ,EAEb,CAEM,SAASK,EAAsBC,EAAYC,GAChD,OAAOlD,KAAK4C,KAAK5C,KAAKmB,IAAI+B,EAAI5E,EAAI2E,EAAI3E,EAAG,GAAK0B,KAAKmB,IAAI+B,EAAI1E,EAAIyE,EAAIzE,EAAG,GACvE,CAMM,SAAS2E,EAAWzD,EAAWC,GACpC,OAAQD,EAAIC,EAAIO,GAASD,EAAMF,CAChC,CAMM,SAASqD,EAAgB1D,GAC9B,OAAQA,EAAIO,EAAMA,GAAOA,CAC1B,CAKM,SAASoD,EAAcR,EAAeS,EAAeC,EAAaC,GACvE,MAAM9D,EAAI0D,EAAgBP,GACpBY,EAAIL,EAAgBE,GACpBlB,EAAIgB,EAAgBG,GACpBG,EAAeN,EAAgBK,EAAI/D,GACnCiE,EAAaP,EAAgBhB,EAAI1C,GACjCkE,EAAeR,EAAgB1D,EAAI+D,GACnCI,EAAaT,EAAgB1D,EAAI0C,GACvC,OAAO1C,IAAM+D,GAAK/D,IAAM0C,GAAMoB,GAAyBC,IAAMrB,GACvDsB,EAAeC,GAAcC,EAAeC,CACnD,CASM,SAASC,EAAYxJ,EAAesH,EAAaC,GACtD,OAAO7B,KAAK6B,IAAID,EAAK5B,KAAK4B,IAAIC,EAAKvH,GACpC,CAiBM,SAASyJ,EAAWzJ,EAAegJ,EAAeC,GAA6B,IAAhB3C,EAAU,UAAH,6CAAG,KAC9E,OAAOtG,GAAS0F,KAAK4B,IAAI0B,EAAOC,GAAO3C,GAAWtG,GAAS0F,KAAK6B,IAAIyB,EAAOC,GAAO3C,CACnF,CCpLM,SAASoD,EACdC,EACA3J,EACA4J,GAEAA,EAAMA,GAAO,CAAEpH,GAAUmH,EAAMnH,GAASxC,GACxC,IAEI6J,EAFAC,EAAKH,EAAM3H,OAAS,EACpB+H,EAAK,EAGT,KAAOD,EAAKC,EAAK,GACfF,EAAME,EAAMD,GAAO,EACfF,EAAIC,GACNE,EAAKF,EAELC,EAAKD,EAIT,MAAO,CAACE,KAAID,KACb,OAUYE,EAAeA,CAC1BL,EACA1G,EACAjD,EACAiK,IAEAP,EAAQC,EAAO3J,EAAOiK,EAClBzH,IACA,MAAM0H,EAAKP,EAAMnH,GAAOS,GACxB,OAAOiH,EAAKlK,GAASkK,IAAOlK,GAAS2J,EAAMnH,EAAQ,GAAGS,KAASjD,CAAK,EAEpEwC,GAASmH,EAAMnH,GAAOS,GAAOjD,GAStBmK,EAAgBA,CAC3BR,EACA1G,EACAjD,IAEA0J,EAAQC,EAAO3J,GAAOwC,GAASmH,EAAMnH,GAAOS,IAAQjD,IAyBtD,MAAMoK,GAAc,CAAC,OAAQ,MAAO,QAAS,SAAU,WA0DhD,SAASC,GAAoBjD,EAAOkD,GACzC,MAAMC,EAAOnD,EAAMoD,SACnB,IAAKD,EACH,OAGF,MAAME,EAAYF,EAAKE,UACjBjI,EAAQiI,EAAUvH,QAAQoH,IACjB,IAAX9H,GACFiI,EAAUC,OAAOlI,EAAO,GAGtBiI,EAAUzI,OAAS,IAIvBoI,GAAYO,SAAS1H,WACZmE,EAAMnE,EAAI,WAGZmE,EAAMoD,SACd,CAKM,SAASI,GAAgBC,GAC9B,MAAMC,EAAM,IAAIC,IAChB,IAAIlJ,EAAWO,EAEf,IAAKP,EAAI,EAAGO,EAAOyI,EAAM7I,OAAQH,EAAIO,IAAQP,EAC3CiJ,EAAIE,IAAIH,EAAMhJ,IAGhB,OAAIiJ,EAAIxF,OAASlD,EACRyI,EAGF3K,MAAM+K,KAAKH,EACnB,CCxLM,MAAMI,GACW,qBAAXC,OACF,SAAS9J,GACd,OAAOA,KAGJ8J,OAAOC,sBAOT,SAASC,GACd/J,EACAE,GAEA,IAAI8J,GAAU,EAEd,OAAO,WAAyB,2BAAb/J,EAAW,yBAAXA,EAAW,gBACvB+J,IACHA,GAAU,EACVJ,GAAiB3K,KAAK4K,QAAQ,KAC5BG,GAAU,EACVhK,EAAGG,MAAMD,EAASD,EAAK,KAI9B,OAsBYgK,GAAsBC,GAAgD,UAAVA,EAAoB,OAAmB,QAAVA,EAAkB,QAAU,SAMrHC,GAAiBA,CAACD,EAAmCxC,EAAeC,IAA0B,UAAVuC,EAAoBxC,EAAkB,QAAVwC,EAAkBvC,GAAOD,EAAQC,GAAO,EAe9J,SAASyC,GAAiCC,EAAqCC,EAAwBC,GAC5G,MAAMC,EAAaF,EAAO5J,OAE1B,IAAIgH,EAAQ,EACR+C,EAAQD,EAEZ,GAAIH,EAAKK,QAAS,CAChB,MAAM,OAACC,EAAM,QAAEC,GAAWP,EACpBQ,EAAOF,EAAOE,MACd,IAAC7E,EAAG,IAAEC,EAAG,WAAE6E,EAAU,WAAEC,GAAcJ,EAAOK,gBAE9CF,IACFpD,EAAQQ,EAAY9D,KAAK4B,IAEvB0C,EAAakC,EAASD,EAAOE,KAAM7E,GAAKyC,GAExC8B,EAAqBC,EAAa9B,EAAa4B,EAAQO,EAAMF,EAAOM,iBAAiBjF,IAAMyC,IAC7F,EAAG+B,EAAa,IAGhBC,EADEM,EACM7C,EAAY9D,KAAK6B,IAEvByC,EAAakC,EAASD,EAAOE,KAAM5E,GAAK,GAAMuC,GAAK,EAEnD+B,EAAqB,EAAI7B,EAAa4B,EAAQO,EAAMF,EAAOM,iBAAiBhF,IAAM,GAAMuC,GAAK,GAC/Fd,EAAO8C,GAAc9C,EAEb8C,EAAa9C,CAExB,CAED,MAAO,CAACA,QAAO+C,QAChB,CAQM,SAASS,GAAoBb,GAClC,MAAM,OAACc,EAAM,OAAEC,EAAM,aAAEC,GAAgBhB,EACjCiB,EAAY,CAChBC,KAAMJ,EAAOnF,IACbwF,KAAML,EAAOlF,IACbwF,KAAML,EAAOpF,IACb0F,KAAMN,EAAOnF,KAEf,IAAKoF,EAEH,OADAhB,EAAKgB,aAAeC,GACb,EAET,MAAMK,EAAUN,EAAaE,OAASJ,EAAOnF,KAC1CqF,EAAaG,OAASL,EAAOlF,KAC7BoF,EAAaI,OAASL,EAAOpF,KAC7BqF,EAAaK,OAASN,EAAOnF,IAGhC,OADAnH,OAAO8M,OAAOP,EAAcC,GACrBK,CACR,CC5ID,MAAME,GAAUC,GAAoB,IAANA,GAAiB,IAANA,EACnCC,GAAYA,CAACD,EAAWjE,EAAWpB,KAAgBrC,KAAKmB,IAAI,EAAG,IAAMuG,GAAK,IAAM1H,KAAK4H,KAAKF,EAAIjE,GAAKxD,EAAMoC,GACzGwF,GAAaA,CAACH,EAAWjE,EAAWpB,IAAcrC,KAAKmB,IAAI,GAAI,GAAKuG,GAAK1H,KAAK4H,KAAKF,EAAIjE,GAAKxD,EAAMoC,GAAK,EAOvGyF,GAAU,CACdC,OAASL,GAAcA,EAEvBM,WAAaN,GAAcA,EAAIA,EAE/BO,YAAcP,IAAeA,GAAKA,EAAI,GAEtCQ,cAAgBR,IAAgBA,GAAK,IAAO,EACxC,GAAMA,EAAIA,GACT,MAAUA,GAAMA,EAAI,GAAK,GAE9BS,YAAcT,GAAcA,EAAIA,EAAIA,EAEpCU,aAAeV,IAAeA,GAAK,GAAKA,EAAIA,EAAI,EAEhDW,eAAiBX,IAAgBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EACd,KAAQA,GAAK,GAAKA,EAAIA,EAAI,GAE9BY,YAAcZ,GAAcA,EAAIA,EAAIA,EAAIA,EAExCa,aAAeb,MAAiBA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAEtDc,eAAiBd,IAAgBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EAAIA,GACjB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAEnCe,YAAcf,GAAcA,EAAIA,EAAIA,EAAIA,EAAIA,EAE5CgB,aAAehB,IAAeA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAExDiB,eAAiBjB,IAAgBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EACtB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAEtCkB,WAAalB,GAAuC,EAAxB1H,KAAK6I,IAAInB,EAAIpH,GAEzCwI,YAAcpB,GAAc1H,KAAK4H,IAAIF,EAAIpH,GAEzCyI,cAAgBrB,IAAe,IAAO1H,KAAK6I,IAAI9I,EAAK2H,GAAK,GAEzDsB,WAAatB,GAAqB,IAANA,EAAW,EAAI1H,KAAKmB,IAAI,EAAG,IAAMuG,EAAI,IAEjEuB,YAAcvB,GAAqB,IAANA,EAAW,EAA4B,EAAvB1H,KAAKmB,IAAI,GAAI,GAAKuG,GAE/DwB,cAAgBxB,GAAcD,GAAOC,GAAKA,EAAIA,EAAI,GAC9C,GAAM1H,KAAKmB,IAAI,EAAG,IAAU,EAAJuG,EAAQ,IAChC,IAAyC,EAAjC1H,KAAKmB,IAAI,GAAI,IAAU,EAAJuG,EAAQ,KAEvCyB,WAAazB,GAAeA,GAAK,EAAKA,IAAM1H,KAAK4C,KAAK,EAAI8E,EAAIA,GAAK,GAEnE0B,YAAc1B,GAAc1H,KAAK4C,KAAK,GAAK8E,GAAK,GAAKA,GAErD2B,cAAgB3B,IAAgBA,GAAK,IAAO,GACvC,IAAO1H,KAAK4C,KAAK,EAAI8E,EAAIA,GAAK,GAC/B,IAAO1H,KAAK4C,KAAK,GAAK8E,GAAK,GAAKA,GAAK,GAEzC4B,cAAgB5B,GAAcD,GAAOC,GAAKA,EAAIC,GAAUD,EAAG,KAAO,IAElE6B,eAAiB7B,GAAcD,GAAOC,GAAKA,EAAIG,GAAWH,EAAG,KAAO,IAEpE8B,gBAAAA,CAAiB9B,GACf,MAAMjE,EAAI,MAEV,OAAOgE,GAAOC,GAAKA,EACjBA,EAAI,GACA,GAAMC,GAAc,EAAJD,EAAOjE,EAHnB,KAIJ,GAAM,GAAMoE,GAAe,EAAJH,EAAQ,EAAGjE,EAJ9B,IAKX,EAEDgG,UAAAA,CAAW/B,GACT,MAAMjE,EAAI,QACV,OAAOiE,EAAIA,IAAMjE,EAAI,GAAKiE,EAAIjE,EAC/B,EAEDiG,WAAAA,CAAYhC,GACV,MAAMjE,EAAI,QACV,OAAQiE,GAAK,GAAKA,IAAMjE,EAAI,GAAKiE,EAAIjE,GAAK,CAC3C,EAEDkG,aAAAA,CAAcjC,GACZ,IAAIjE,EAAI,QACR,OAAKiE,GAAK,IAAO,EACDA,EAAIA,IAAuB,GAAhBjE,GAAM,QAAeiE,EAAIjE,GAA3C,GAEF,KAAQiE,GAAK,GAAKA,IAAuB,GAAhBjE,GAAM,QAAeiE,EAAIjE,GAAK,EAC/D,EAEDmG,aAAelC,GAAc,EAAII,GAAQ+B,cAAc,EAAInC,GAE3DmC,aAAAA,CAAcnC,GACZ,MAAMoC,EAAI,OACJC,EAAI,KACV,OAAIrC,EAAK,EAAIqC,EACJD,EAAIpC,EAAIA,EAEbA,EAAK,EAAIqC,EACJD,GAAKpC,GAAM,IAAMqC,GAAMrC,EAAI,IAEhCA,EAAK,IAAMqC,EACND,GAAKpC,GAAM,KAAOqC,GAAMrC,EAAI,MAE9BoC,GAAKpC,GAAM,MAAQqC,GAAMrC,EAAI,OACrC,EAEDsC,gBAAkBtC,GAAcA,EAAK,GACH,GAA9BI,GAAQ8B,aAAiB,EAAJlC,GACc,GAAnCI,GAAQ+B,cAAkB,EAAJnC,EAAQ,GAAW,IAK/C,OAAeI,GCrHf,SAAS7G,GAAM5C,GACb,OAAOA,EAAI,GAAM,CACnB,CACA,MAAM4L,GAAMA,CAAC5L,EAAG6L,EAAGC,IAAMnK,KAAK6B,IAAI7B,KAAK4B,IAAIvD,EAAG8L,GAAID,GAClD,SAASE,GAAI/L,GACX,OAAO4L,GAAIhJ,GAAU,KAAJ5C,GAAW,EAAG,IACjC,CAIA,SAASgM,GAAIhM,GACX,OAAO4L,GAAIhJ,GAAU,IAAJ5C,GAAU,EAAG,IAChC,CACA,SAASiM,GAAIjM,GACX,OAAO4L,GAAIhJ,GAAM5C,EAAI,MAAQ,IAAK,EAAG,EACvC,CACA,SAASkM,GAAIlM,GACX,OAAO4L,GAAIhJ,GAAU,IAAJ5C,GAAU,EAAG,IAChC,CAEA,MAAMmM,GAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIpL,EAAG,GAAIC,EAAG,GAAIoL,EAAG,GAAIhB,EAAG,GAAI3H,EAAG,GAAI4I,EAAG,IACrJC,GAAM,IAAI,oBACVC,GAAKvL,GAAKsL,GAAQ,GAAJtL,GACdwL,GAAKxL,GAAKsL,IAAS,IAAJtL,IAAa,GAAKsL,GAAQ,GAAJtL,GACrCyL,GAAKzL,IAAW,IAAJA,IAAa,KAAY,GAAJA,GAyBvC,SAAS0L,GAAUhN,GACjB,IAAI2M,EAzBU3M,IAAK+M,GAAG/M,EAAEiN,IAAMF,GAAG/M,EAAEkN,IAAMH,GAAG/M,EAAEsB,IAAMyL,GAAG/M,EAAEqB,GAyBjD8L,CAAQnN,GAAK6M,GAAKC,GAC1B,OAAO9M,EACH,IAAM2M,EAAE3M,EAAEiN,GAAKN,EAAE3M,EAAEkN,GAAKP,EAAE3M,EAAEsB,GAJpB8L,EAAC/L,EAAGsL,IAAMtL,EAAI,IAAMsL,EAAEtL,GAAK,GAIF+L,CAAMpN,EAAEqB,EAAGsL,QAC5CU,CACN,CAEA,MAAMC,GAAS,+GACf,SAASC,GAASzB,EAAG1G,EAAGyG,GACtB,MAAMxK,EAAI+D,EAAIzD,KAAK4B,IAAIsI,EAAG,EAAIA,GACxBc,EAAI,SAACzJ,GAAC,IAAElE,EAAI,UAAH,8CAAIkE,EAAI4I,EAAI,IAAM,GAAE,OAAKD,EAAIxK,EAAIM,KAAK6B,IAAI7B,KAAK4B,IAAIvE,EAAI,EAAG,EAAIA,EAAG,IAAK,EAAE,EACvF,MAAO,CAAC2N,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASa,GAAS1B,EAAG1G,EAAGpF,GACtB,MAAM2M,EAAI,SAACzJ,GAAC,IAAElE,EAAI,UAAH,8CAAIkE,EAAI4I,EAAI,IAAM,EAAC,OAAK9L,EAAIA,EAAIoF,EAAIzD,KAAK6B,IAAI7B,KAAK4B,IAAIvE,EAAG,EAAIA,EAAG,GAAI,EAAE,EACrF,MAAO,CAAC2N,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASc,GAAS3B,EAAG4B,EAAGpM,GACtB,MAAMqM,EAAMJ,GAASzB,EAAG,EAAG,IAC3B,IAAIhO,EAMJ,IALI4P,EAAIpM,EAAI,IACVxD,EAAI,GAAK4P,EAAIpM,GACboM,GAAK5P,EACLwD,GAAKxD,GAEFA,EAAI,EAAGA,EAAI,EAAGA,IACjB6P,EAAI7P,IAAM,EAAI4P,EAAIpM,EAClBqM,EAAI7P,IAAM4P,EAEZ,OAAOC,CACT,CAUA,SAASC,GAAQ5N,GACf,MACMiN,EAAIjN,EAAEiN,EADE,IAERC,EAAIlN,EAAEkN,EAFE,IAGR5L,EAAItB,EAAEsB,EAHE,IAIRkC,EAAM7B,KAAK6B,IAAIyJ,EAAGC,EAAG5L,GACrBiC,EAAM5B,KAAK4B,IAAI0J,EAAGC,EAAG5L,GACrBuK,GAAKrI,EAAMD,GAAO,EACxB,IAAIuI,EAAG1G,EAAGsG,EAOV,OANIlI,IAAQD,IACVmI,EAAIlI,EAAMD,EACV6B,EAAIyG,EAAI,GAAMH,GAAK,EAAIlI,EAAMD,GAAOmI,GAAKlI,EAAMD,GAC/CuI,EArBJ,SAAkBmB,EAAGC,EAAG5L,EAAGoK,EAAGlI,GAC5B,OAAIyJ,IAAMzJ,GACC0J,EAAI5L,GAAKoK,GAAMwB,EAAI5L,EAAI,EAAI,GAElC4L,IAAM1J,GACAlC,EAAI2L,GAAKvB,EAAI,GAEfuB,EAAIC,GAAKxB,EAAI,CACvB,CAaQmC,CAASZ,EAAGC,EAAG5L,EAAGoK,EAAGlI,GACzBsI,EAAQ,GAAJA,EAAS,IAER,CAAK,EAAJA,EAAO1G,GAAK,EAAGyG,EACzB,CACA,SAASiC,GAAMnB,EAAGtL,EAAGC,EAAGoL,GACtB,OACEvQ,MAAMD,QAAQmF,GACVsL,EAAEtL,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAChBsL,EAAEtL,EAAGC,EAAGoL,IACZ9N,IAAIoN,GACR,CACA,SAAS+B,GAAQjC,EAAG1G,EAAGyG,GACrB,OAAOiC,GAAMP,GAAUzB,EAAG1G,EAAGyG,EAC/B,CAOA,SAASmC,GAAIlC,GACX,OAAQA,EAAI,IAAM,KAAO,GAC3B,CACA,SAASmC,GAASlN,GAChB,MAAM0K,EAAI6B,GAAOY,KAAKnN,GACtB,IACIf,EADAqB,EAAI,IAER,IAAKoK,EACH,OAEEA,EAAE,KAAOzL,IACXqB,EAAIoK,EAAE,GAAKM,IAAKN,EAAE,IAAMO,IAAKP,EAAE,KAEjC,MAAMK,EAAIkC,IAAKvC,EAAE,IACX0C,GAAM1C,EAAE,GAAK,IACb2C,GAAM3C,EAAE,GAAK,IAQnB,OANEzL,EADW,QAATyL,EAAE,GAtBR,SAAiBK,EAAG4B,EAAGpM,GACrB,OAAOwM,GAAML,GAAU3B,EAAG4B,EAAGpM,EAC/B,CAqBQ+M,CAAQvC,EAAGqC,EAAIC,GACD,QAAT3C,EAAE,GArBf,SAAiBK,EAAG1G,EAAGpF,GACrB,OAAO8N,GAAMN,GAAU1B,EAAG1G,EAAGpF,EAC/B,CAoBQsO,CAAQxC,EAAGqC,EAAIC,GAEfL,GAAQjC,EAAGqC,EAAIC,GAEd,CACLnB,EAAGjN,EAAE,GACLkN,EAAGlN,EAAE,GACLsB,EAAGtB,EAAE,GACLqB,EAAGA,EAEP,CAsBA,MAAMzC,GAAM,CACVqB,EAAG,OACHsO,EAAG,QACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,SACHC,EAAG,QACHxC,EAAG,KACHyC,EAAG,KACHC,EAAG,KACHzC,EAAG,KACHC,EAAG,QACHC,EAAG,QACHwC,EAAG,KACHC,EAAG,WACHxC,EAAG,KACHyC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,QACH5C,EAAG,KACH6C,EAAG,KACHC,EAAG,OACHC,EAAG,KACHC,EAAG,QACHC,EAAG,MAECC,GAAU,CACdC,OAAQ,SACRC,YAAa,SACbC,KAAM,OACNC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,IACPC,aAAc,SACdC,GAAI,KACJC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,SAAU,SACVC,QAAS,SACTC,IAAK,SACLC,YAAa,SACbC,QAAS,SACTC,QAAS,SACTC,KAAM,OACNC,IAAK,KACLC,MAAO,OACPC,QAAS,SACTC,KAAM,SACNC,KAAM,OACNC,KAAM,SACNC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,IAAK,OACLC,OAAQ,SACRC,OAAQ,SACRC,SAAU,OACVC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACTC,WAAY,SACZC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,IAAK,SACLC,KAAM,OACNC,QAAS,SACTC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,IAAK,KACLC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,UAAW,OACXC,IAAK,SACLC,SAAU,SACVC,WAAY,SACZC,QAAS,SACTC,SAAU,SACVC,QAAS,SACTC,WAAY,SACZC,KAAM,KACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,UAAW,SACXC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,YAAa,SACbC,GAAI,SACJC,SAAU,SACVC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,SAAU,OACVC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,UAAW,SACXC,GAAI,SACJC,MAAO,UAmBT,IAAIC,GACJ,SAASC,GAAUlY,GACZiY,KACHA,GApBJ,WACE,MAAME,EAAW,CAAC,EACZlb,EAAO3B,OAAO2B,KAAK2R,IACnBwJ,EAAQ9c,OAAO2B,KAAKY,IAC1B,IAAId,EAAGsb,EAAGpa,EAAGqa,EAAIC,EACjB,IAAKxb,EAAI,EAAGA,EAAIE,EAAKC,OAAQH,IAAK,CAEhC,IADAub,EAAKC,EAAKtb,EAAKF,GACVsb,EAAI,EAAGA,EAAID,EAAMlb,OAAQmb,IAC5Bpa,EAAIma,EAAMC,GACVE,EAAKA,EAAGC,QAAQva,EAAGJ,GAAII,IAEzBA,EAAIwa,SAAS7J,GAAQ0J,GAAK,IAC1BH,EAASI,GAAM,CAACta,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,EACnD,CACE,OAAOka,CACT,CAKYO,GACRT,GAAMU,YAAc,CAAC,EAAG,EAAG,EAAG,IAEhC,MAAMrY,EAAI2X,GAAMjY,EAAI4Y,eACpB,OAAOtY,GAAK,CACV4L,EAAG5L,EAAE,GACL6L,EAAG7L,EAAE,GACLC,EAAGD,EAAE,GACLA,EAAgB,IAAbA,EAAEpD,OAAeoD,EAAE,GAAK,IAE/B,CAEA,MAAMuY,GAAS,uGAiCf,MAAMC,GAAK7Z,GAAKA,GAAK,SAAgB,MAAJA,EAAqC,MAAzB2B,KAAKmB,IAAI9C,EAAG,EAAM,KAAe,KACxEkH,GAAOlH,GAAKA,GAAK,OAAUA,EAAI,MAAQ2B,KAAKmB,KAAK9C,EAAI,MAAS,MAAO,KAa3E,SAAS8Z,GAAO9Z,EAAGlC,EAAGic,GACpB,GAAI/Z,EAAG,CACL,IAAIS,EAAMmN,GAAQ5N,GAClBS,EAAI3C,GAAK6D,KAAK6B,IAAI,EAAG7B,KAAK4B,IAAI9C,EAAI3C,GAAK2C,EAAI3C,GAAKic,EAAa,IAANjc,EAAU,IAAM,IACvE2C,EAAMsN,GAAQtN,GACdT,EAAEiN,EAAIxM,EAAI,GACVT,EAAEkN,EAAIzM,EAAI,GACVT,EAAEsB,EAAIb,EAAI,EACd,CACA,CACA,SAAS/B,GAAMsB,EAAGga,GAChB,OAAOha,EAAI3D,OAAO8M,OAAO6Q,GAAS,CAAC,EAAGha,GAAKA,CAC7C,CACA,SAASia,GAAWC,GAClB,IAAIla,EAAI,CAACiN,EAAG,EAAGC,EAAG,EAAG5L,EAAG,EAAGD,EAAG,KAY9B,OAXIlF,MAAMD,QAAQge,GACZA,EAAMjc,QAAU,IAClB+B,EAAI,CAACiN,EAAGiN,EAAM,GAAIhN,EAAGgN,EAAM,GAAI5Y,EAAG4Y,EAAM,GAAI7Y,EAAG,KAC3C6Y,EAAMjc,OAAS,IACjB+B,EAAEqB,EAAI2K,GAAIkO,EAAM,OAIpBla,EAAItB,GAAMwb,EAAO,CAACjN,EAAG,EAAGC,EAAG,EAAG5L,EAAG,EAAGD,EAAG,KACrCA,EAAI2K,GAAIhM,EAAEqB,GAEPrB,CACT,CACA,SAASma,GAAcpZ,GACrB,MAAsB,MAAlBA,EAAIC,OAAO,GA3EjB,SAAkBD,GAChB,MAAM0K,EAAImO,GAAO1L,KAAKnN,GACtB,IACIkM,EAAGC,EAAG5L,EADND,EAAI,IAER,GAAKoK,EAAL,CAGA,GAAIA,EAAE,KAAOwB,EAAG,CACd,MAAMjN,GAAKyL,EAAE,GACbpK,EAAIoK,EAAE,GAAKM,GAAI/L,GAAK4L,GAAQ,IAAJ5L,EAAS,EAAG,IACxC,CAOE,OANAiN,GAAKxB,EAAE,GACPyB,GAAKzB,EAAE,GACPnK,GAAKmK,EAAE,GACPwB,EAAI,KAAOxB,EAAE,GAAKM,GAAIkB,GAAKrB,GAAIqB,EAAG,EAAG,MACrCC,EAAI,KAAOzB,EAAE,GAAKM,GAAImB,GAAKtB,GAAIsB,EAAG,EAAG,MACrC5L,EAAI,KAAOmK,EAAE,GAAKM,GAAIzK,GAAKsK,GAAItK,EAAG,EAAG,MAC9B,CACL2L,EAAGA,EACHC,EAAGA,EACH5L,EAAGA,EACHD,EAAGA,EAfP,CAiBA,CAqDW+Y,CAASrZ,GAEXkN,GAASlN,EAClB,CACA,MAAMsZ,GACJC,WAAAA,CAAYJ,GACV,GAAIA,aAAiBG,GACnB,OAAOH,EAET,MAAM9d,SAAc8d,EACpB,IAAIla,EACS,WAAT5D,EACF4D,EAAIia,GAAWC,GACG,WAAT9d,IACT4D,EAjcN,SAAkBe,GAChB,IACIwZ,EADAxc,EAAMgD,EAAI9C,OAmBd,MAjBe,MAAX8C,EAAI,KACM,IAARhD,GAAqB,IAARA,EACfwc,EAAM,CACJtN,EAAG,IAAsB,GAAhBd,GAAMpL,EAAI,IACnBmM,EAAG,IAAsB,GAAhBf,GAAMpL,EAAI,IACnBO,EAAG,IAAsB,GAAhB6K,GAAMpL,EAAI,IACnBM,EAAW,IAARtD,EAA4B,GAAhBoO,GAAMpL,EAAI,IAAW,KAErB,IAARhD,GAAqB,IAARA,IACtBwc,EAAM,CACJtN,EAAGd,GAAMpL,EAAI,KAAO,EAAIoL,GAAMpL,EAAI,IAClCmM,EAAGf,GAAMpL,EAAI,KAAO,EAAIoL,GAAMpL,EAAI,IAClCO,EAAG6K,GAAMpL,EAAI,KAAO,EAAIoL,GAAMpL,EAAI,IAClCM,EAAW,IAARtD,EAAaoO,GAAMpL,EAAI,KAAO,EAAIoL,GAAMpL,EAAI,IAAO,OAIrDwZ,CACT,CA4aUC,CAASN,IAAUjB,GAAUiB,IAAUC,GAAcD,IAE3DO,KAAKC,KAAO1a,EACZya,KAAKE,SAAW3a,CACpB,CACE,SAAI4a,GACF,OAAOH,KAAKE,MAChB,CACE,OAAIhN,GACF,IAAI3N,EAAItB,GAAM+b,KAAKC,MAInB,OAHI1a,IACFA,EAAEqB,EAAI4K,GAAIjM,EAAEqB,IAEPrB,CACX,CACE,OAAI2N,CAAItN,GACNoa,KAAKC,KAAOT,GAAW5Z,EAC3B,CACEwa,SAAAA,GACE,OAAOJ,KAAKE,QArFG3a,EAqFgBya,KAAKC,QAnFpC1a,EAAEqB,EAAI,IACF,QAAQrB,EAAEiN,MAAMjN,EAAEkN,MAAMlN,EAAEsB,MAAM2K,GAAIjM,EAAEqB,MACtC,OAAOrB,EAAEiN,MAAMjN,EAAEkN,MAAMlN,EAAEsB,WAiFe+L,EArFhD,IAAmBrN,CAsFnB,CACEgN,SAAAA,GACE,OAAOyN,KAAKE,OAAS3N,GAAUyN,KAAKC,WAAQrN,CAChD,CACEyN,SAAAA,GACE,OAAOL,KAAKE,OApVhB,SAAmB3a,GACjB,IAAKA,EACH,OAEF,MAAMqB,EAAIuM,GAAQ5N,GACZ8L,EAAIzK,EAAE,GACN+D,EAAI8G,GAAI7K,EAAE,IACVwK,EAAIK,GAAI7K,EAAE,IAChB,OAAOrB,EAAEqB,EAAI,IACT,QAAQyK,MAAM1G,OAAOyG,OAAOI,GAAIjM,EAAEqB,MAClC,OAAOyK,MAAM1G,OAAOyG,KAC1B,CAyUyBiP,CAAUL,KAAKC,WAAQrN,CAChD,CACE0N,GAAAA,CAAIC,EAAOC,GACT,GAAID,EAAO,CACT,MAAME,EAAKT,KAAK9M,IACVwN,EAAKH,EAAMrN,IACjB,IAAIyN,EACJ,MAAMpX,EAAIiX,IAAWG,EAAK,GAAMH,EAC1BvN,EAAI,EAAI1J,EAAI,EACZ3C,EAAI6Z,EAAG7Z,EAAI8Z,EAAG9Z,EACdga,IAAO3N,EAAIrM,KAAO,EAAIqM,GAAKA,EAAIrM,IAAM,EAAIqM,EAAIrM,IAAM,GAAK,EAC9D+Z,EAAK,EAAIC,EACTH,EAAGjO,EAAI,IAAOoO,EAAKH,EAAGjO,EAAImO,EAAKD,EAAGlO,EAAI,GACtCiO,EAAGhO,EAAI,IAAOmO,EAAKH,EAAGhO,EAAIkO,EAAKD,EAAGjO,EAAI,GACtCgO,EAAG5Z,EAAI,IAAO+Z,EAAKH,EAAG5Z,EAAI8Z,EAAKD,EAAG7Z,EAAI,GACtC4Z,EAAG7Z,EAAI2C,EAAIkX,EAAG7Z,GAAK,EAAI2C,GAAKmX,EAAG9Z,EAC/BoZ,KAAK9M,IAAMuN,CACjB,CACI,OAAOT,IACX,CACEa,WAAAA,CAAYN,EAAO3R,GAIjB,OAHI2R,IACFP,KAAKC,KAvGX,SAAqBa,EAAMC,EAAMnS,GAC/B,MAAM4D,EAAI/F,GAAK+E,GAAIsP,EAAKtO,IAClBC,EAAIhG,GAAK+E,GAAIsP,EAAKrO,IAClB5L,EAAI4F,GAAK+E,GAAIsP,EAAKja,IACxB,MAAO,CACL2L,EAAGjB,GAAI6N,GAAG5M,EAAI5D,GAAKnC,GAAK+E,GAAIuP,EAAKvO,IAAMA,KACvCC,EAAGlB,GAAI6N,GAAG3M,EAAI7D,GAAKnC,GAAK+E,GAAIuP,EAAKtO,IAAMA,KACvC5L,EAAG0K,GAAI6N,GAAGvY,EAAI+H,GAAKnC,GAAK+E,GAAIuP,EAAKla,IAAMA,KACvCD,EAAGka,EAAKla,EAAIgI,GAAKmS,EAAKna,EAAIka,EAAKla,GAEnC,CA6FkBia,CAAYb,KAAKC,KAAMM,EAAMN,KAAMrR,IAE1CoR,IACX,CACE/b,KAAAA,GACE,OAAO,IAAI2b,GAAMI,KAAK9M,IAC1B,CACEP,KAAAA,CAAM/L,GAEJ,OADAoZ,KAAKC,KAAKrZ,EAAI2K,GAAI3K,GACXoZ,IACX,CACEgB,OAAAA,CAAQ1B,GAGN,OAFYU,KAAKC,KACbrZ,GAAK,EAAI0Y,EACNU,IACX,CACEiB,SAAAA,GACE,MAAM/N,EAAM8M,KAAKC,KACXiB,EAAM/Y,GAAc,GAAR+K,EAAIV,EAAkB,IAARU,EAAIT,EAAmB,IAARS,EAAIrM,GAEnD,OADAqM,EAAIV,EAAIU,EAAIT,EAAIS,EAAIrM,EAAIqa,EACjBlB,IACX,CACEmB,OAAAA,CAAQ7B,GAGN,OAFYU,KAAKC,KACbrZ,GAAK,EAAI0Y,EACNU,IACX,CACEoB,MAAAA,GACE,MAAM7b,EAAIya,KAAKC,KAIf,OAHA1a,EAAEiN,EAAI,IAAMjN,EAAEiN,EACdjN,EAAEkN,EAAI,IAAMlN,EAAEkN,EACdlN,EAAEsB,EAAI,IAAMtB,EAAEsB,EACPmZ,IACX,CACEqB,OAAAA,CAAQ/B,GAEN,OADAD,GAAOW,KAAKC,KAAM,EAAGX,GACdU,IACX,CACEsB,MAAAA,CAAOhC,GAEL,OADAD,GAAOW,KAAKC,KAAM,GAAIX,GACfU,IACX,CACEuB,QAAAA,CAASjC,GAEP,OADAD,GAAOW,KAAKC,KAAM,EAAGX,GACdU,IACX,CACEwB,UAAAA,CAAWlC,GAET,OADAD,GAAOW,KAAKC,KAAM,GAAIX,GACfU,IACX,CACEyB,MAAAA,CAAOC,GAEL,OAtaJ,SAAgBnc,EAAGmc,GACjB,IAAIrQ,EAAI8B,GAAQ5N,GAChB8L,EAAE,GAAKkC,GAAIlC,EAAE,GAAKqQ,GAClBrQ,EAAIiC,GAAQjC,GACZ9L,EAAEiN,EAAInB,EAAE,GACR9L,EAAEkN,EAAIpB,EAAE,GACR9L,EAAEsB,EAAIwK,EAAE,EACV,CA8ZIoQ,CAAOzB,KAAKC,KAAMyB,GACX1B,IACX,EAGA,SAAS2B,GAAUlC,GACjB,OAAO,IAAIG,GAAMH,EACnB,CCxkBO,SAASmC,GAAoBpgB,GAClC,GAAIA,GAA0B,kBAAVA,EAAoB,CACtC,MAAMG,EAAOH,EAAMM,WACnB,MAAgB,2BAATH,GAA8C,4BAATA,CAC7C,CAED,OAAO,CACR,CAWM,SAAS4e,GAAM/e,GACpB,OAAOogB,GAAoBpgB,GAASA,EAAQqgB,GAASrgB,EACtD,CAKM,SAASsgB,GAActgB,GAC5B,OAAOogB,GAAoBpgB,GACvBA,EACAqgB,GAASrgB,GAAO+f,SAAS,IAAKD,OAAO,IAAK/O,WAC/C,CC/BD,MAAMwP,GAAU,CAAC,IAAK,IAAK,cAAe,SAAU,WAC9CC,GAAS,CAAC,QAAS,cAAe,mBCAxC,MAAMC,GAAY,IAAIC,IAaf,SAASC,GAAaC,EAAaC,EAAgBzd,GACxD,OAZF,SAAyByd,EAAgBzd,GACvCA,EAAUA,GAAW,CAAC,EACtB,MAAM0d,EAAWD,EAASE,KAAKC,UAAU5d,GACzC,IAAI6d,EAAYR,GAAUS,IAAIJ,GAK9B,OAJKG,IACHA,EAAY,IAAIE,KAAKC,aAAaP,EAAQzd,GAC1Cqd,GAAU3V,IAAIgW,EAAUG,IAEnBA,CACR,CAGQI,CAAgBR,EAAQzd,GAASke,OAAOV,EAChD,CCRD,MAAMW,GAAa,CAOjBC,OAAOxhB,GACEC,EAAQD,GAAkCA,EAAS,GAAKA,EAWjEyhB,OAAAA,CAAQC,EAAWlf,EAAOmf,GACxB,GAAkB,IAAdD,EACF,MAAO,IAGT,MAAMb,EAASrC,KAAKoD,MAAMxe,QAAQyd,OAClC,IAAIgB,EACAC,EAAQJ,EAEZ,GAAIC,EAAM3f,OAAS,EAAG,CAEpB,MAAM+f,EAAUrc,KAAK6B,IAAI7B,KAAKa,IAAIob,EAAM,GAAG3hB,OAAQ0F,KAAKa,IAAIob,EAAMA,EAAM3f,OAAS,GAAGhC,SAChF+hB,EAAU,MAAQA,EAAU,QAC9BF,EAAW,cAGbC,EAmCN,SAAwBJ,EAAWC,GAGjC,IAAIG,EAAQH,EAAM3f,OAAS,EAAI2f,EAAM,GAAG3hB,MAAQ2hB,EAAM,GAAG3hB,MAAQ2hB,EAAM,GAAG3hB,MAAQ2hB,EAAM,GAAG3hB,MAGvF0F,KAAKa,IAAIub,IAAU,GAAKJ,IAAchc,KAAKoB,MAAM4a,KAEnDI,EAAQJ,EAAYhc,KAAKoB,MAAM4a,IAEjC,OAAOI,CACR,CA9CaE,CAAeN,EAAWC,EACnC,CAED,MAAMM,EAAW9b,EAAMT,KAAKa,IAAIub,IAC1BI,EAAaxc,KAAK6B,IAAI7B,KAAK4B,KAAK,EAAI5B,KAAKoB,MAAMmb,GAAW,IAAK,GAE/D7e,EAAU,CAACye,WAAUM,sBAAuBD,EAAYE,sBAAuBF,GAGrF,OAFA9hB,OAAO8M,OAAO9J,EAASob,KAAKpb,QAAQue,MAAML,QAEnCX,GAAae,EAAWb,EAAQzd,EACxC,EAWDif,WAAAA,CAAYX,EAAWlf,EAAOmf,GAC5B,GAAkB,IAAdD,EACF,MAAO,IAET,MAAMY,EAASX,EAAMnf,GAAO+f,aAAgBb,EAAahc,KAAKmB,IAAI,GAAInB,KAAKoB,MAAMX,EAAMub,KACvF,MAAI,CAAE,EAAG,EAAG,EAAG,EAAI,GAAI,IAAEc,SAASF,IAAW9f,EAAQ,GAAMmf,EAAM3f,OACxDuf,GAAWE,QAAQlhB,KAAKie,KAAMkD,EAAWlf,EAAOmf,GAElD,EACR,GAsBH,OAAe,CAACJ,eCzFT,MAAMkB,GAAYriB,OAAOyC,OAAO,MAC1B6f,GAActiB,OAAOyC,OAAO,MAOzC,SAAS8f,GAASC,EAAM3f,GACtB,IAAKA,EACH,OAAO2f,EAET,MAAM7gB,EAAOkB,EAAIsB,MAAM,KACvB,IAAK,IAAI1C,EAAI,EAAGoF,EAAIlF,EAAKC,OAAQH,EAAIoF,IAAKpF,EAAG,CAC3C,MAAMkB,EAAIhB,EAAKF,GACf+gB,EAAOA,EAAK7f,KAAO6f,EAAK7f,GAAK3C,OAAOyC,OAAO,MAC5C,CACD,OAAO+f,CACR,CAED,SAAS9X,GAAI+X,EAAMC,EAAOtB,GACxB,MAAqB,kBAAVsB,EACFvf,EAAMof,GAASE,EAAMC,GAAQtB,GAE/Bje,EAAMof,GAASE,EAAM,IAAKC,EAClC,CAMM,MAAMC,GACX1E,WAAAA,CAAY2E,EAAcC,GACxBzE,KAAK0E,eAAY9R,EACjBoN,KAAK2E,gBAAkB,kBACvB3E,KAAK4E,YAAc,kBACnB5E,KAAKO,MAAQ,OACbP,KAAK6E,SAAW,CAAC,EACjB7E,KAAK8E,iBAAoBC,GAAYA,EAAQ3B,MAAM4B,SAASC,sBAC5DjF,KAAKkF,SAAW,CAAC,EACjBlF,KAAKmF,OAAS,CACZ,YACA,WACA,QACA,aACA,aAEFnF,KAAKoF,KAAO,CACVC,OAAQ,qDACRve,KAAM,GACNwe,MAAO,SACPC,WAAY,IACZ/E,OAAQ,MAEVR,KAAKwF,MAAQ,CAAC,EACdxF,KAAKyF,qBAAuB,CAACC,EAAK9gB,IAAYkd,GAAcld,EAAQ+f,iBACpE3E,KAAK2F,iBAAmB,CAACD,EAAK9gB,IAAYkd,GAAcld,EAAQggB,aAChE5E,KAAK4F,WAAa,CAACF,EAAK9gB,IAAYkd,GAAcld,EAAQ2b,OAC1DP,KAAK6F,UAAY,IACjB7F,KAAK8F,YAAc,CACjBC,KAAM,UACNC,WAAW,EACXC,kBAAkB,GAEpBjG,KAAKkG,qBAAsB,EAC3BlG,KAAKmG,QAAU,KACfnG,KAAKoG,QAAU,KACfpG,KAAKqG,SAAU,EACfrG,KAAKsG,QAAU,CAAC,EAChBtG,KAAKuG,YAAa,EAClBvG,KAAKwG,WAAQ5T,EACboN,KAAKyG,OAAS,CAAC,EACfzG,KAAK0G,UAAW,EAChB1G,KAAK2G,yBAA0B,EAE/B3G,KAAK4G,SAASpC,GACdxE,KAAK/c,MAAMwhB,EACZ,CAMDnY,GAAAA,CAAIgY,EAAOtB,GACT,OAAO1W,GAAI0T,KAAMsE,EAAOtB,EACzB,CAKDN,GAAAA,CAAI4B,GACF,OAAOH,GAASnE,KAAMsE,EACvB,CAMDsC,QAAAA,CAAStC,EAAOtB,GACd,OAAO1W,GAAI4X,GAAaI,EAAOtB,EAChC,CAED6D,QAAAA,CAASvC,EAAOtB,GACd,OAAO1W,GAAI2X,GAAWK,EAAOtB,EAC9B,CAmBD8D,KAAAA,CAAMxC,EAAOyC,EAAMC,EAAaC,GAC9B,MAAMC,EAAc/C,GAASnE,KAAMsE,GAC7B6C,EAAoBhD,GAASnE,KAAMgH,GACnCI,EAAc,IAAML,EAE1BnlB,OAAOylB,iBAAiBH,EAAa,CAEnC,CAACE,GAAc,CACb5lB,MAAO0lB,EAAYH,GACnBO,UAAU,GAGZ,CAACP,GAAO,CACNQ,YAAY,EACZ7E,GAAAA,GACE,MAAM8E,EAAQxH,KAAKoH,GACbhjB,EAAS+iB,EAAkBF,GACjC,OAAIhlB,EAASulB,GACJ5lB,OAAO8M,OAAO,CAAC,EAAGtK,EAAQojB,GAE5BjlB,EAAeilB,EAAOpjB,EAC9B,EACDkI,GAAAA,CAAI9K,GACFwe,KAAKoH,GAAe5lB,CACrB,IAGN,CAEDyB,KAAAA,CAAMwkB,GACJA,EAAStb,SAASlJ,GAAUA,EAAM+c,OACnC,EAIH,OAA+B,IAAIuE,GAAS,CAC1CmD,YAAcX,IAAUA,EAAKY,WAAW,MACxCC,WAAab,GAAkB,WAATA,EACtBvB,MAAO,CACLqC,UAAW,eAEb/B,YAAa,CACX4B,aAAa,EACbE,YAAY,IAEb,CH3KI,SAAiCE,GACtCA,EAASxb,IAAI,YAAa,CACxByb,WAAOnV,EACPoV,SAAU,IACVC,OAAQ,eACRnlB,QAAI8P,EACJnG,UAAMmG,EACNsV,UAAMtV,EACNwM,QAAIxM,EACJjR,UAAMiR,IAGRkV,EAASlB,SAAS,YAAa,CAC7BiB,WAAW,EACXD,YAAY,EACZF,YAAcX,GAAkB,eAATA,GAAkC,eAATA,GAAkC,OAATA,IAG3Ee,EAASxb,IAAI,aAAc,CACzB0V,OAAQ,CACNrgB,KAAM,QACNwmB,WAAYnG,IAEdD,QAAS,CACPpgB,KAAM,SACNwmB,WAAYpG,MAIhB+F,EAASlB,SAAS,aAAc,CAC9BiB,UAAW,cAGbC,EAASxb,IAAI,cAAe,CAC1B8b,OAAQ,CACN1D,UAAW,CACTsD,SAAU,MAGdK,OAAQ,CACN3D,UAAW,CACTsD,SAAU,IAGdM,KAAM,CACJC,WAAY,CACVvG,OAAQ,CACNvV,KAAM,eAER+b,QAAS,CACP7mB,KAAM,UACNqmB,SAAU,KAIhBS,KAAM,CACJF,WAAY,CACVvG,OAAQ,CACN5C,GAAI,eAENoJ,QAAS,CACP7mB,KAAM,UACNsmB,OAAQ,SACRnlB,GAAIyC,GAAS,EAAJA,MAKlB,EIvEM,SAA8BuiB,GACnCA,EAASxb,IAAI,SAAU,CACrBoc,aAAa,EACbC,QAAS,CACPC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,IAGX,ECRM,SAA4BjB,GACjCA,EAASxb,IAAI,QAAS,CACpB0c,SAAS,EACTC,QAAQ,EACR7lB,SAAS,EACT8lB,aAAa,EASbC,OAAQ,QAMRC,MAAO,EAGPC,KAAM,CACJL,SAAS,EACTM,UAAW,EACXC,iBAAiB,EACjBC,WAAW,EACXC,WAAY,EACZC,UAAWA,CAACC,EAAM/kB,IAAYA,EAAQ0kB,UACtCM,UAAWA,CAACD,EAAM/kB,IAAYA,EAAQ2b,MACtC0I,QAAQ,GAGVY,OAAQ,CACNb,SAAS,EACTc,KAAM,GACNC,WAAY,EACZC,MAAO,GAITC,MAAO,CAELjB,SAAS,EAGTkB,KAAM,GAGNvB,QAAS,CACPC,IAAK,EACLE,OAAQ,IAKZ3F,MAAO,CACLgH,YAAa,EACbC,YAAa,GACbC,QAAQ,EACRC,gBAAiB,EACjBC,gBAAiB,GACjB5B,QAAS,EACTK,SAAS,EACTwB,UAAU,EACVC,gBAAiB,EACjBC,YAAa,EAEb7nB,SAAU8nB,GAAM5H,WAAWC,OAC3B4H,MAAO,CAAC,EACRC,MAAO,CAAC,EACR7d,MAAO,SACP8d,WAAY,OAEZC,mBAAmB,EACnBC,cAAe,4BACfC,gBAAiB,KAIrBnD,EAAShB,MAAM,cAAe,QAAS,GAAI,SAC3CgB,EAAShB,MAAM,aAAc,QAAS,GAAI,eAC1CgB,EAAShB,MAAM,eAAgB,QAAS,GAAI,eAC5CgB,EAAShB,MAAM,cAAe,QAAS,GAAI,SAE3CgB,EAASlB,SAAS,QAAS,CACzBiB,WAAW,EACXH,YAAcX,IAAUA,EAAKY,WAAW,YAAcZ,EAAKY,WAAW,UAAqB,aAATZ,GAAgC,WAATA,EACzGa,WAAab,GAAkB,eAATA,GAAkC,mBAATA,GAAsC,SAATA,IAG9Ee,EAASlB,SAAS,SAAU,CAC1BiB,UAAW,UAGbC,EAASlB,SAAS,cAAe,CAC/Bc,YAAcX,GAAkB,oBAATA,GAAuC,aAATA,EACrDa,WAAab,GAAkB,oBAATA,GAEzB,ICnEM,SAASmE,GAAaxF,EAAKyF,EAAMC,EAAIC,EAASC,GACnD,IAAIC,EAAYJ,EAAKG,GAQrB,OAPKC,IACHA,EAAYJ,EAAKG,GAAU5F,EAAI8F,YAAYF,GAAQtB,MACnDoB,EAAGllB,KAAKolB,IAENC,EAAYF,IACdA,EAAUE,GAELF,CACR,CA6DM,SAASI,GAAYrI,EAAOsI,EAAO1B,GACxC,MAAMlF,EAAmB1B,EAAMuI,wBACzBC,EAAsB,IAAV5B,EAAc9iB,KAAK6B,IAAIihB,EAAQ,EAAG,IAAO,EAC3D,OAAO9iB,KAAKiB,OAAOujB,EAAQE,GAAa9G,GAAoBA,EAAmB8G,CAChF,CAOM,SAASC,GAAYC,EAAQpG,IAClCA,EAAMA,GAAOoG,EAAOC,WAAW,OAE3BC,OAGJtG,EAAIuG,iBACJvG,EAAIwG,UAAU,EAAG,EAAGJ,EAAO9B,MAAO8B,EAAOK,QACzCzG,EAAI0G,SACL,CAEM,SAASC,GAAU3G,EAAK9gB,EAASY,EAAGE,GACzC4mB,GAAgB5G,EAAK9gB,EAASY,EAAGE,EAAG,KACrC,CAEM,SAAS4mB,GAAgB5G,EAAK9gB,EAASY,EAAGE,EAAGuN,GAClD,IAAItR,EAAM4qB,EAASC,EAAS1lB,EAAM2lB,EAAczC,EAAO0C,EAAUC,EACjE,MAAMrH,EAAQ1gB,EAAQgoB,WAChBC,EAAWjoB,EAAQioB,SACnBC,EAASloB,EAAQkoB,OACvB,IAAIC,GAAOF,GAAY,GAAKtlB,EAE5B,GAAI+d,GAA0B,kBAAVA,IAClB3jB,EAAO2jB,EAAMxjB,WACA,8BAATH,GAAiD,+BAATA,GAM1C,OALA+jB,EAAIsG,OACJtG,EAAIsH,UAAUxnB,EAAGE,GACjBggB,EAAIjE,OAAOsL,GACXrH,EAAIuH,UAAU3H,GAAQA,EAAM0E,MAAQ,GAAI1E,EAAM6G,OAAS,EAAG7G,EAAM0E,MAAO1E,EAAM6G,aAC7EzG,EAAI0G,UAKR,KAAI1jB,MAAMokB,IAAWA,GAAU,GAA/B,CAMA,OAFApH,EAAIwH,YAEI5H,GAER,QACMrS,EACFyS,EAAIyH,QAAQ3nB,EAAGE,EAAGuN,EAAI,EAAG6Z,EAAQ,EAAG,EAAG3lB,GAEvCue,EAAI0H,IAAI5nB,EAAGE,EAAGonB,EAAQ,EAAG3lB,GAE3Bue,EAAI2H,YACJ,MACF,IAAK,WACHrD,EAAQ/W,EAAIA,EAAI,EAAI6Z,EACpBpH,EAAI4H,OAAO9nB,EAAI0B,KAAK4H,IAAIie,GAAO/C,EAAOtkB,EAAIwB,KAAK6I,IAAIgd,GAAOD,GAC1DC,GAAOrlB,EACPge,EAAI6H,OAAO/nB,EAAI0B,KAAK4H,IAAIie,GAAO/C,EAAOtkB,EAAIwB,KAAK6I,IAAIgd,GAAOD,GAC1DC,GAAOrlB,EACPge,EAAI6H,OAAO/nB,EAAI0B,KAAK4H,IAAIie,GAAO/C,EAAOtkB,EAAIwB,KAAK6I,IAAIgd,GAAOD,GAC1DpH,EAAI2H,YACJ,MACF,IAAK,cAQHZ,EAAwB,KAATK,EACfhmB,EAAOgmB,EAASL,EAChBF,EAAUrlB,KAAK6I,IAAIgd,EAAMtlB,GAAcX,EACvC4lB,EAAWxlB,KAAK6I,IAAIgd,EAAMtlB,IAAewL,EAAIA,EAAI,EAAIwZ,EAAe3lB,GACpE0lB,EAAUtlB,KAAK4H,IAAIie,EAAMtlB,GAAcX,EACvC6lB,EAAWzlB,KAAK4H,IAAIie,EAAMtlB,IAAewL,EAAIA,EAAI,EAAIwZ,EAAe3lB,GACpE4e,EAAI0H,IAAI5nB,EAAIknB,EAAUhnB,EAAI8mB,EAASC,EAAcM,EAAM9lB,EAAI8lB,EAAMvlB,GACjEke,EAAI0H,IAAI5nB,EAAImnB,EAAUjnB,EAAI6mB,EAASE,EAAcM,EAAMvlB,EAASulB,GAChErH,EAAI0H,IAAI5nB,EAAIknB,EAAUhnB,EAAI8mB,EAASC,EAAcM,EAAKA,EAAMvlB,GAC5Dke,EAAI0H,IAAI5nB,EAAImnB,EAAUjnB,EAAI6mB,EAASE,EAAcM,EAAMvlB,EAASulB,EAAM9lB,GACtEye,EAAI2H,YACJ,MACF,IAAK,OACH,IAAKR,EAAU,CACb/lB,EAAOI,KAAKsmB,QAAUV,EACtB9C,EAAQ/W,EAAIA,EAAI,EAAInM,EACpB4e,EAAI+H,KAAKjoB,EAAIwkB,EAAOtkB,EAAIoB,EAAM,EAAIkjB,EAAO,EAAIljB,GAC7C,KACD,CACDimB,GAAOtlB,EAET,IAAK,UACHilB,EAAWxlB,KAAK6I,IAAIgd,IAAQ9Z,EAAIA,EAAI,EAAI6Z,GACxCP,EAAUrlB,KAAK6I,IAAIgd,GAAOD,EAC1BN,EAAUtlB,KAAK4H,IAAIie,GAAOD,EAC1BH,EAAWzlB,KAAK4H,IAAIie,IAAQ9Z,EAAIA,EAAI,EAAI6Z,GACxCpH,EAAI4H,OAAO9nB,EAAIknB,EAAUhnB,EAAI8mB,GAC7B9G,EAAI6H,OAAO/nB,EAAImnB,EAAUjnB,EAAI6mB,GAC7B7G,EAAI6H,OAAO/nB,EAAIknB,EAAUhnB,EAAI8mB,GAC7B9G,EAAI6H,OAAO/nB,EAAImnB,EAAUjnB,EAAI6mB,GAC7B7G,EAAI2H,YACJ,MACF,IAAK,WACHN,GAAOtlB,EAET,IAAK,QACHilB,EAAWxlB,KAAK6I,IAAIgd,IAAQ9Z,EAAIA,EAAI,EAAI6Z,GACxCP,EAAUrlB,KAAK6I,IAAIgd,GAAOD,EAC1BN,EAAUtlB,KAAK4H,IAAIie,GAAOD,EAC1BH,EAAWzlB,KAAK4H,IAAIie,IAAQ9Z,EAAIA,EAAI,EAAI6Z,GACxCpH,EAAI4H,OAAO9nB,EAAIknB,EAAUhnB,EAAI8mB,GAC7B9G,EAAI6H,OAAO/nB,EAAIknB,EAAUhnB,EAAI8mB,GAC7B9G,EAAI4H,OAAO9nB,EAAImnB,EAAUjnB,EAAI6mB,GAC7B7G,EAAI6H,OAAO/nB,EAAImnB,EAAUjnB,EAAI6mB,GAC7B,MACF,IAAK,OACHG,EAAWxlB,KAAK6I,IAAIgd,IAAQ9Z,EAAIA,EAAI,EAAI6Z,GACxCP,EAAUrlB,KAAK6I,IAAIgd,GAAOD,EAC1BN,EAAUtlB,KAAK4H,IAAIie,GAAOD,EAC1BH,EAAWzlB,KAAK4H,IAAIie,IAAQ9Z,EAAIA,EAAI,EAAI6Z,GACxCpH,EAAI4H,OAAO9nB,EAAIknB,EAAUhnB,EAAI8mB,GAC7B9G,EAAI6H,OAAO/nB,EAAIknB,EAAUhnB,EAAI8mB,GAC7B9G,EAAI4H,OAAO9nB,EAAImnB,EAAUjnB,EAAI6mB,GAC7B7G,EAAI6H,OAAO/nB,EAAImnB,EAAUjnB,EAAI6mB,GAC7BQ,GAAOtlB,EACPilB,EAAWxlB,KAAK6I,IAAIgd,IAAQ9Z,EAAIA,EAAI,EAAI6Z,GACxCP,EAAUrlB,KAAK6I,IAAIgd,GAAOD,EAC1BN,EAAUtlB,KAAK4H,IAAIie,GAAOD,EAC1BH,EAAWzlB,KAAK4H,IAAIie,IAAQ9Z,EAAIA,EAAI,EAAI6Z,GACxCpH,EAAI4H,OAAO9nB,EAAIknB,EAAUhnB,EAAI8mB,GAC7B9G,EAAI6H,OAAO/nB,EAAIknB,EAAUhnB,EAAI8mB,GAC7B9G,EAAI4H,OAAO9nB,EAAImnB,EAAUjnB,EAAI6mB,GAC7B7G,EAAI6H,OAAO/nB,EAAImnB,EAAUjnB,EAAI6mB,GAC7B,MACF,IAAK,OACHA,EAAUtZ,EAAIA,EAAI,EAAI/L,KAAK6I,IAAIgd,GAAOD,EACtCN,EAAUtlB,KAAK4H,IAAIie,GAAOD,EAC1BpH,EAAI4H,OAAO9nB,EAAI+mB,EAAS7mB,EAAI8mB,GAC5B9G,EAAI6H,OAAO/nB,EAAI+mB,EAAS7mB,EAAI8mB,GAC5B,MACF,IAAK,OACH9G,EAAI4H,OAAO9nB,EAAGE,GACdggB,EAAI6H,OAAO/nB,EAAI0B,KAAK6I,IAAIgd,IAAQ9Z,EAAIA,EAAI,EAAI6Z,GAASpnB,EAAIwB,KAAK4H,IAAIie,GAAOD,GAI3EpH,EAAIgI,OACA9oB,EAAQ+oB,YAAc,GACxBjI,EAAIkI,QA7GL,CA+GF,CAUM,SAASC,GAAeC,EAAOC,EAAMC,GAG1C,OAFAA,EAASA,GAAU,IAEXD,GAASD,GAASA,EAAMtoB,EAAIuoB,EAAKhF,KAAOiF,GAAUF,EAAMtoB,EAAIuoB,EAAKlF,MAAQmF,GACjFF,EAAMpoB,EAAIqoB,EAAKnF,IAAMoF,GAAUF,EAAMpoB,EAAIqoB,EAAKjF,OAASkF,CACxD,CAEM,SAASC,GAASvI,EAAKqI,GAC5BrI,EAAIsG,OACJtG,EAAIwH,YACJxH,EAAI+H,KAAKM,EAAKhF,KAAMgF,EAAKnF,IAAKmF,EAAKlF,MAAQkF,EAAKhF,KAAMgF,EAAKjF,OAASiF,EAAKnF,KACzElD,EAAIwI,MACL,CAEM,SAASC,GAAWzI,GACzBA,EAAI0G,SACL,CAKM,SAASgC,GAAe1I,EAAK2I,EAAUjqB,EAAQkqB,EAAMvI,GAC1D,IAAKsI,EACH,OAAO3I,EAAI6H,OAAOnpB,EAAOoB,EAAGpB,EAAOsB,GAErC,GAAa,WAATqgB,EAAmB,CACrB,MAAMwI,GAAYF,EAAS7oB,EAAIpB,EAAOoB,GAAK,EAC3CkgB,EAAI6H,OAAOgB,EAAUF,EAAS3oB,GAC9BggB,EAAI6H,OAAOgB,EAAUnqB,EAAOsB,OACV,UAATqgB,MAAuBuI,EAChC5I,EAAI6H,OAAOc,EAAS7oB,EAAGpB,EAAOsB,GAE9BggB,EAAI6H,OAAOnpB,EAAOoB,EAAG6oB,EAAS3oB,GAEhCggB,EAAI6H,OAAOnpB,EAAOoB,EAAGpB,EAAOsB,EAC7B,CAKM,SAAS8oB,GAAe9I,EAAK2I,EAAUjqB,EAAQkqB,GACpD,IAAKD,EACH,OAAO3I,EAAI6H,OAAOnpB,EAAOoB,EAAGpB,EAAOsB,GAErCggB,EAAI+I,cACFH,EAAOD,EAASK,KAAOL,EAASM,KAChCL,EAAOD,EAASO,KAAOP,EAASQ,KAChCP,EAAOlqB,EAAOuqB,KAAOvqB,EAAOsqB,KAC5BJ,EAAOlqB,EAAOyqB,KAAOzqB,EAAOwqB,KAC5BxqB,EAAOoB,EACPpB,EAAOsB,EACV,CAKM,SAASopB,GAAWpJ,EAAKwE,EAAM1kB,EAAGE,EAAG0f,GAAiB,IAAX2J,EAAO,UAAH,6CAAG,CAAC,EACxD,MAAMC,EAAQvtB,EAAQyoB,GAAQA,EAAO,CAACA,GAChC0D,EAASmB,EAAKE,YAAc,GAA0B,KAArBF,EAAKG,YAC5C,IAAI7rB,EAAG8rB,EAMP,IAJAzJ,EAAIsG,OACJtG,EAAIN,KAAOA,EAAKkG,OA+BlB,SAAuB5F,EAAKqJ,GACtBA,EAAKK,aACP1J,EAAIsH,UAAU+B,EAAKK,YAAY,GAAIL,EAAKK,YAAY,IAGjD7tB,EAAcwtB,EAAKlC,WACtBnH,EAAIjE,OAAOsN,EAAKlC,UAGdkC,EAAKxO,QACPmF,EAAI2J,UAAYN,EAAKxO,OAGnBwO,EAAKO,YACP5J,EAAI4J,UAAYP,EAAKO,WAGnBP,EAAKQ,eACP7J,EAAI6J,aAAeR,EAAKQ,aAE3B,CAlDCC,CAAc9J,EAAKqJ,GAEd1rB,EAAI,EAAGA,EAAI2rB,EAAMxrB,SAAUH,EAC9B8rB,EAAOH,EAAM3rB,GAET0rB,EAAKU,UACPC,GAAahK,EAAKqJ,EAAKU,UAGrB7B,IACEmB,EAAKG,cACPxJ,EAAIiK,YAAcZ,EAAKG,aAGpB3tB,EAAcwtB,EAAKE,eACtBvJ,EAAI4D,UAAYyF,EAAKE,aAGvBvJ,EAAIkK,WAAWT,EAAM3pB,EAAGE,EAAGqpB,EAAKc,WAGlCnK,EAAIoK,SAASX,EAAM3pB,EAAGE,EAAGqpB,EAAKc,UAC9BE,GAAarK,EAAKlgB,EAAGE,EAAGypB,EAAMJ,GAE9BrpB,GAAK0f,EAAKG,WAGZG,EAAI0G,SACL,CAwBD,SAAS2D,GAAarK,EAAKlgB,EAAGE,EAAGypB,EAAMJ,GACrC,GAAIA,EAAKiB,eAAiBjB,EAAKkB,UAAW,CAQxC,MAAMC,EAAUxK,EAAI8F,YAAY2D,GAC1BpG,EAAOvjB,EAAI0qB,EAAQC,sBACnBtH,EAAQrjB,EAAI0qB,EAAQE,uBACpBxH,EAAMljB,EAAIwqB,EAAQG,wBAClBvH,EAASpjB,EAAIwqB,EAAQI,yBACrBC,EAAcxB,EAAKiB,eAAiBpH,EAAME,GAAU,EAAIA,EAE9DpD,EAAIiK,YAAcjK,EAAI2J,UACtB3J,EAAIwH,YACJxH,EAAI4D,UAAYyF,EAAKyB,iBAAmB,EACxC9K,EAAI4H,OAAOvE,EAAMwH,GACjB7K,EAAI6H,OAAO1E,EAAO0H,GAClB7K,EAAIkI,QACL,CACF,CAED,SAAS8B,GAAahK,EAAKqJ,GACzB,MAAM0B,EAAW/K,EAAI2J,UAErB3J,EAAI2J,UAAYN,EAAKxO,MACrBmF,EAAIgL,SAAS3B,EAAKhG,KAAMgG,EAAKnG,IAAKmG,EAAK/E,MAAO+E,EAAK5C,QACnDzG,EAAI2J,UAAYoB,CACjB,CAOM,SAASE,GAAmBjL,EAAK+H,GACtC,MAAM,EAACjoB,EAAC,EAAEE,EAAC,EAAEuN,EAAC,EAAE5B,EAAC,OAAEyb,GAAUW,EAG7B/H,EAAI0H,IAAI5nB,EAAIsnB,EAAO8D,QAASlrB,EAAIonB,EAAO8D,QAAS9D,EAAO8D,SAAUppB,EAASP,GAAI,GAG9Eye,EAAI6H,OAAO/nB,EAAGE,EAAI2L,EAAIyb,EAAO+D,YAG7BnL,EAAI0H,IAAI5nB,EAAIsnB,EAAO+D,WAAYnrB,EAAI2L,EAAIyb,EAAO+D,WAAY/D,EAAO+D,WAAY5pB,EAAIO,GAAS,GAG1Fke,EAAI6H,OAAO/nB,EAAIyN,EAAI6Z,EAAOgE,YAAaprB,EAAI2L,GAG3CqU,EAAI0H,IAAI5nB,EAAIyN,EAAI6Z,EAAOgE,YAAaprB,EAAI2L,EAAIyb,EAAOgE,YAAahE,EAAOgE,YAAatpB,EAAS,GAAG,GAGhGke,EAAI6H,OAAO/nB,EAAIyN,EAAGvN,EAAIonB,EAAOiE,UAG7BrL,EAAI0H,IAAI5nB,EAAIyN,EAAI6Z,EAAOiE,SAAUrrB,EAAIonB,EAAOiE,SAAUjE,EAAOiE,SAAU,GAAIvpB,GAAS,GAGpFke,EAAI6H,OAAO/nB,EAAIsnB,EAAO8D,QAASlrB,EAChC,CC/bD,MAAMsrB,GAAc,uCACdC,GAAa,wEAcZ,SAASC,GAAa1vB,EAAwBsF,GACnD,MAAMqqB,GAAW,GAAK3vB,GAAO4vB,MAAMJ,IACnC,IAAKG,GAA0B,WAAfA,EAAQ,GACtB,OAAc,IAAPrqB,EAKT,OAFAtF,GAAS2vB,EAAQ,GAETA,EAAQ,IACd,IAAK,KACH,OAAO3vB,EACT,IAAK,IACHA,GAAS,IAMb,OAAOsF,EAAOtF,CACf,CAUM,SAAS6vB,GAAkB7vB,EAAwC8vB,GACxE,MAAMxR,EAAM,CAAC,EACPyR,EAAWtvB,EAASqvB,GACpB/tB,EAAOguB,EAAW3vB,OAAO2B,KAAK+tB,GAASA,EACvCE,EAAOvvB,EAAST,GAClB+vB,EACEE,GAAQlvB,EAAef,EAAMiwB,GAAOjwB,EAAM8vB,EAAMG,KAChDA,GAAQjwB,EAAMiwB,GAChB,IAAMjwB,EAEV,IAAK,MAAMiwB,KAAQluB,EACjBuc,EAAI2R,IAAqBD,EAAKC,IAnBS,EAqBzC,OAAO3R,CACR,CAUM,SAAS4R,GAAOlwB,GACrB,OAAO6vB,GAAkB7vB,EAAO,CAAConB,IAAK,IAAKC,MAAO,IAAKC,OAAQ,IAAKC,KAAM,KAC3E,CASM,SAAS4I,GAAcnwB,GAC5B,OAAO6vB,GAAkB7vB,EAAO,CAAC,UAAW,WAAY,aAAc,eACvE,CAUM,SAASowB,GAAUpwB,GACxB,MAAMoE,EAAM8rB,GAAOlwB,GAKnB,OAHAoE,EAAIokB,MAAQpkB,EAAImjB,KAAOnjB,EAAIijB,MAC3BjjB,EAAIumB,OAASvmB,EAAIgjB,IAAMhjB,EAAIkjB,OAEpBljB,CACR,CAcM,SAASisB,GAAOjtB,EAA4BktB,GACjDltB,EAAUA,GAAW,CAAC,EACtBktB,EAAWA,GAAYhK,GAAS1C,KAEhC,IAAIte,EAAOvE,EAAeqC,EAAQkC,KAAMgrB,EAAShrB,MAE7B,kBAATA,IACTA,EAAOiY,SAASjY,EAAM,KAExB,IAAIwe,EAAQ/iB,EAAeqC,EAAQ0gB,MAAOwM,EAASxM,OAC/CA,KAAW,GAAKA,GAAO8L,MAAMH,MAC/Bc,QAAQC,KAAK,kCAAoC1M,EAAQ,KACzDA,OAAQ1S,GAGV,MAAMwS,EAAO,CACXC,OAAQ9iB,EAAeqC,EAAQygB,OAAQyM,EAASzM,QAChDE,WAAY2L,GAAa3uB,EAAeqC,EAAQ2gB,WAAYuM,EAASvM,YAAaze,GAClFA,OACAwe,QACA9E,OAAQje,EAAeqC,EAAQ4b,OAAQsR,EAAStR,QAChD8K,OAAQ,IAIV,OADAlG,EAAKkG,ODzHA,SAAsBlG,GAC3B,OAAKA,GAAQ7jB,EAAc6jB,EAAKte,OAASvF,EAAc6jB,EAAKC,QACnD,MAGDD,EAAKE,MAAQF,EAAKE,MAAQ,IAAM,KACrCF,EAAK5E,OAAS4E,EAAK5E,OAAS,IAAM,IACnC4E,EAAKte,KAAO,MACZse,EAAKC,MACR,CCgHe4M,CAAa7M,GACpBA,CACR,CAaM,SAAS8M,GAAQC,EAAwBpN,EAAkB/gB,EAAgBouB,GAChF,IACI/uB,EAAWO,EAAcpC,EADzB6wB,GAAY,EAGhB,IAAKhvB,EAAI,EAAGO,EAAOuuB,EAAO3uB,OAAQH,EAAIO,IAAQP,EAE5C,GADA7B,EAAQ2wB,EAAO9uB,QACDuP,IAAVpR,SAGYoR,IAAZmS,GAA0C,oBAAVvjB,IAClCA,EAAQA,EAAMujB,GACdsN,GAAY,QAEAzf,IAAV5O,GAAuBvC,EAAQD,KACjCA,EAAQA,EAAMwC,EAAQxC,EAAMgC,QAC5B6uB,GAAY,QAEAzf,IAAVpR,GAIF,OAHI4wB,IAASC,IACXD,EAAKC,WAAY,GAEZ7wB,CAGZ,CAwBM,SAAS8wB,GAA6CC,EAAkBxN,GAC7E,OAAOnjB,OAAO8M,OAAO9M,OAAOyC,OAAOkuB,GAAgBxN,EACpD,CCnMM,SAASyN,GAAgBC,GAAqF,IAA7EC,EAAW,UAAH,6CAAG,CAAC,IAAKC,EAAa,UAAH,6CAAGF,EAAQX,EAAQ,uCAAEc,EAAY,UAAH,6CAAG,IAAMH,EAAO,GAC1GhsB,EAAQqrB,KACXA,EAAWe,GAAS,YAAaJ,IAEnC,MAAMK,EAAQ,CACZ,CAACC,OAAOC,aAAc,SACtBC,YAAY,EACZC,QAAST,EACTU,YAAaR,EACb9K,UAAWiK,EACXsB,WAAYR,EACZ/L,SAAWvC,GAAUkO,GAAgB,CAAClO,KAAUmO,GAASC,EAAUC,EAAYb,IAEjF,OAAO,IAAIuB,MAAMP,EAAO,CAItBQ,eAAcA,CAAClvB,EAAQqtB,YACdrtB,EAAOqtB,UACPrtB,EAAOmvB,aACPd,EAAO,GAAGhB,IACV,GAMT/O,IAAGA,CAACte,EAAQqtB,IACH+B,GAAQpvB,EAAQqtB,GACrB,IA+QR,SAA8BA,EAAMiB,EAAUD,EAAQgB,GACpD,IAAIjyB,EACJ,IAAK,MAAMkyB,KAAUhB,EAEnB,GADAlxB,EAAQqxB,GAASc,GAAQD,EAAQjC,GAAOgB,GACpChsB,EAAQjF,GACV,OAAOoyB,GAAiBnC,EAAMjwB,GAC1BqyB,GAAkBpB,EAAQgB,EAAOhC,EAAMjwB,GACvCA,CAGT,CAzRasyB,CAAqBrC,EAAMiB,EAAUD,EAAQruB,KAOvD2vB,yBAAwBA,CAAC3vB,EAAQqtB,IACxBuC,QAAQD,yBAAyB3vB,EAAO8uB,QAAQ,GAAIzB,GAM7DwC,eAAcA,IACLD,QAAQC,eAAexB,EAAO,IAMvCzrB,IAAGA,CAAC5C,EAAQqtB,IACHyC,GAAqB9vB,GAAQ4f,SAASyN,GAM/C0C,QAAQ/vB,GACC8vB,GAAqB9vB,GAM9BkI,GAAAA,CAAIlI,EAAQqtB,EAAMjwB,GAChB,MAAM4yB,EAAUhwB,EAAOiwB,WAAajwB,EAAOiwB,SAAWzB,KAGtD,OAFAxuB,EAAOqtB,GAAQ2C,EAAQ3C,GAAQjwB,SACxB4C,EAAOmvB,OACP,CACR,GAEJ,CAUM,SAASe,GAAeb,EAAO1O,EAASwP,EAAUC,GACvD,MAAM1B,EAAQ,CACZG,YAAY,EACZwB,OAAQhB,EACRiB,SAAU3P,EACV4P,UAAWJ,EACXK,OAAQ,IAAIroB,IACZiY,aAAcA,GAAaiP,EAAOe,GAClCK,WAAanP,GAAQ4O,GAAeb,EAAO/N,EAAK6O,EAAUC,GAC1D3N,SAAWvC,GAAUgQ,GAAeb,EAAM5M,SAASvC,GAAQS,EAASwP,EAAUC,IAEhF,OAAO,IAAInB,MAAMP,EAAO,CAItBQ,eAAcA,CAAClvB,EAAQqtB,YACdrtB,EAAOqtB,UACPgC,EAAMhC,IACN,GAMT/O,IAAGA,CAACte,EAAQqtB,EAAMqD,IACTtB,GAAQpvB,EAAQqtB,GACrB,IA0ER,SAA6BrtB,EAAQqtB,EAAMqD,GACzC,MAAM,OAACL,EAAM,SAAEC,EAAQ,UAAEC,EAAWnQ,aAAcN,GAAe9f,EACjE,IAAI5C,EAAQizB,EAAOhD,GAGf/qB,EAAWlF,IAAU0iB,EAAY6Q,aAAatD,KAChDjwB,EAYJ,SAA4BiwB,EAAMjwB,EAAO4C,EAAQ0wB,GAC/C,MAAM,OAACL,EAAM,SAAEC,EAAQ,UAAEC,EAAS,OAAEC,GAAUxwB,EAC9C,GAAIwwB,EAAO5tB,IAAIyqB,GAEb,MAAM,IAAIuD,MAAM,uBAAyBtzB,MAAM+K,KAAKmoB,GAAQK,KAAK,MAAQ,KAAOxD,GAElFmD,EAAOpoB,IAAIilB,GACXjwB,EAAQA,EAAMkzB,EAAUC,GAAaG,GACrCF,EAAOM,OAAOzD,GACVmC,GAAiBnC,EAAMjwB,KAEzBA,EAAQqyB,GAAkBY,EAAOvB,QAASuB,EAAQhD,EAAMjwB,IAE1D,OAAOA,CACR,CA1BW2zB,CAAmB1D,EAAMjwB,EAAO4C,EAAQ0wB,IAE9CrzB,EAAQD,IAAUA,EAAMgC,SAC1BhC,EAyBJ,SAAuBiwB,EAAMjwB,EAAO4C,EAAQgxB,GAC1C,MAAM,OAACX,EAAM,SAAEC,EAAQ,UAAEC,EAAWnQ,aAAcN,GAAe9f,EAEjE,GAAIqC,EAAQiuB,EAAS1wB,QAAUoxB,EAAY3D,GACzCjwB,EAAQA,EAAMkzB,EAAS1wB,MAAQxC,EAAMgC,aAChC,GAAIvB,EAAST,EAAM,IAAK,CAE7B,MAAM6zB,EAAM7zB,EACNixB,EAASgC,EAAOvB,QAAQoC,QAAO3qB,GAAKA,IAAM0qB,IAChD7zB,EAAQ,GACR,IAAK,MAAMuF,KAAQsuB,EAAK,CACtB,MAAMxvB,EAAWguB,GAAkBpB,EAAQgC,EAAQhD,EAAM1qB,GACzDvF,EAAM0E,KAAKouB,GAAezuB,EAAU6uB,EAAUC,GAAaA,EAAUlD,GAAOvN,GAC7E,CACF,CACD,OAAO1iB,CACR,CAzCW+zB,CAAc9D,EAAMjwB,EAAO4C,EAAQ8f,EAAYkR,cAErDxB,GAAiBnC,EAAMjwB,KAEzBA,EAAQ8yB,GAAe9yB,EAAOkzB,EAAUC,GAAaA,EAAUlD,GAAOvN,IAExE,OAAO1iB,CACR,CA1Fag0B,CAAoBpxB,EAAQqtB,EAAMqD,KAO5Cf,yBAAwBA,CAAC3vB,EAAQqtB,IACxBrtB,EAAOogB,aAAaiR,QACvBzB,QAAQhtB,IAAIysB,EAAOhC,GAAQ,CAAClK,YAAY,EAAMmO,cAAc,QAAQ9iB,EACpEohB,QAAQD,yBAAyBN,EAAOhC,GAM9CwC,eAAcA,IACLD,QAAQC,eAAeR,GAMhCzsB,IAAGA,CAAC5C,EAAQqtB,IACHuC,QAAQhtB,IAAIysB,EAAOhC,GAM5B0C,QAAOA,IACEH,QAAQG,QAAQV,GAMzBnnB,IAAGA,CAAClI,EAAQqtB,EAAMjwB,KAChBiyB,EAAMhC,GAAQjwB,SACP4C,EAAOqtB,IACP,IAGZ,CAKM,SAASjN,GAAaiP,GAAuD,IAAhD3L,EAAW,UAAH,6CAAG,CAAC6N,YAAY,EAAMC,WAAW,GAC3E,MAAM,YAAClO,EAAcI,EAAS6N,WAAU,WAAE/N,EAAaE,EAAS8N,UAAS,SAAEC,EAAW/N,EAAS2N,SAAWhC,EAC1G,MAAO,CACLgC,QAASI,EACTF,WAAYjO,EACZkO,UAAWhO,EACXmN,aAAcruB,EAAWghB,GAAeA,EAAc,IAAMA,EAC5D0N,YAAa1uB,EAAWkhB,GAAcA,EAAa,IAAMA,EAE5D,CAED,MAAM+L,GAAUA,CAACD,EAAQ3M,IAAS2M,EAASA,EAASrtB,EAAY0gB,GAAQA,EAClE6M,GAAmBA,CAACnC,EAAMjwB,IAAUS,EAAST,IAAmB,aAATiwB,IACzB,OAAjC7vB,OAAOqyB,eAAezyB,IAAmBA,EAAMqe,cAAgBje,QAElE,SAAS4xB,GAAQpvB,EAAQqtB,EAAMS,GAC7B,GAAItwB,OAAOC,UAAUwD,eAAetD,KAAKqC,EAAQqtB,GAC/C,OAAOrtB,EAAOqtB,GAGhB,MAAMjwB,EAAQ0wB,IAGd,OADA9tB,EAAOqtB,GAAQjwB,EACRA,CACR,CAsDD,SAASs0B,GAAgBhE,EAAUL,EAAMjwB,GACvC,OAAOkF,EAAWorB,GAAYA,EAASL,EAAMjwB,GAASswB,CACvD,CAED,MAAM3N,GAAWA,CAAC1f,EAAKsxB,KAAmB,IAARtxB,EAAesxB,EAC9B,kBAARtxB,EAAmBkB,EAAiBowB,EAAQtxB,QAAOmO,EAE9D,SAASojB,GAAU1pB,EAAK2pB,EAAcxxB,EAAKyxB,EAAgB10B,GACzD,IAAK,MAAMu0B,KAAUE,EAAc,CACjC,MAAM3R,EAAQH,GAAS1f,EAAKsxB,GAC5B,GAAIzR,EAAO,CACThY,EAAIE,IAAI8X,GACR,MAAMwN,EAAWgE,GAAgBxR,EAAMuD,UAAWpjB,EAAKjD,GACvD,GAAIiF,EAAQqrB,IAAaA,IAAartB,GAAOqtB,IAAaoE,EAGxD,OAAOpE,CAEV,MAAM,IAAc,IAAVxN,GAAmB7d,EAAQyvB,IAAmBzxB,IAAQyxB,EAG/D,OAAO,IAEV,CACD,OAAO,CACR,CAED,SAASrC,GAAkBoC,EAAcpwB,EAAU4rB,EAAMjwB,GACvD,MAAMmxB,EAAa9sB,EAASstB,YACtBrB,EAAWgE,GAAgBjwB,EAASgiB,UAAW4J,EAAMjwB,GACrD20B,EAAY,IAAIF,KAAiBtD,GACjCrmB,EAAM,IAAIC,IAChBD,EAAIE,IAAIhL,GACR,IAAIiD,EAAM2xB,GAAiB9pB,EAAK6pB,EAAW1E,EAAMK,GAAYL,EAAMjwB,GACnE,OAAY,OAARiD,MAGAgC,EAAQqrB,IAAaA,IAAaL,IACpChtB,EAAM2xB,GAAiB9pB,EAAK6pB,EAAWrE,EAAUrtB,EAAKjD,GAC1C,OAARiD,KAIC+tB,GAAgB9wB,MAAM+K,KAAKH,GAAM,CAAC,IAAKqmB,EAAYb,GACxD,IAUJ,SAAsBjsB,EAAU4rB,EAAMjwB,GACpC,MAAMu0B,EAASlwB,EAASutB,aAClB3B,KAAQsE,IACZA,EAAOtE,GAAQ,CAAC,GAElB,MAAMrtB,EAAS2xB,EAAOtE,GACtB,GAAIhwB,EAAQ2C,IAAWnC,EAAST,GAE9B,OAAOA,EAET,OAAO4C,GAAU,CAAC,CACnB,CArBSiyB,CAAaxwB,EAAU4rB,EAAMjwB,KACtC,CAED,SAAS40B,GAAiB9pB,EAAK6pB,EAAW1xB,EAAKqtB,EAAU/qB,GACvD,KAAOtC,GACLA,EAAMuxB,GAAU1pB,EAAK6pB,EAAW1xB,EAAKqtB,EAAU/qB,GAEjD,OAAOtC,CACR,CA2BD,SAASouB,GAASpuB,EAAKguB,GACrB,IAAK,MAAMnO,KAASmO,EAAQ,CAC1B,IAAKnO,EACH,SAEF,MAAM9iB,EAAQ8iB,EAAM7f,GACpB,GAAIgC,EAAQjF,GACV,OAAOA,CAEV,CACF,CAED,SAAS0yB,GAAqB9vB,GAC5B,IAAIb,EAAOa,EAAOmvB,MAIlB,OAHKhwB,IACHA,EAAOa,EAAOmvB,MAKlB,SAAkCd,GAChC,MAAMnmB,EAAM,IAAIC,IAChB,IAAK,MAAM+X,KAASmO,EAClB,IAAK,MAAMhuB,KAAO7C,OAAO2B,KAAK+gB,GAAOgR,QAAO/wB,IAAMA,EAAEojB,WAAW,OAC7Drb,EAAIE,IAAI/H,GAGZ,OAAO/C,MAAM+K,KAAKH,EACnB,CAbyBgqB,CAAyBlyB,EAAO8uB,UAEjD3vB,CACR,CCrUD,MAAMgzB,GAAUp0B,OAAOo0B,SAAW,MAG5BC,GAAWA,CAACppB,EAAuB/J,IAAmCA,EAAI+J,EAAO5J,SAAW4J,EAAO/J,GAAGozB,MAAQrpB,EAAO/J,GACrHqzB,GAAgB7Q,GAAuC,MAAdA,EAAoB,IAAM,IAElE,SAAS8Q,GACdC,EACAC,EACAC,EACAloB,GAUA,MAAMyf,EAAWuI,EAAWH,KAAOI,EAAcD,EAC3C1xB,EAAU2xB,EACVE,EAAOD,EAAWL,KAAOI,EAAcC,EACvCE,EAAM9sB,EAAsBhF,EAASmpB,GACrC4I,EAAM/sB,EAAsB6sB,EAAM7xB,GAExC,IAAIgyB,EAAMF,GAAOA,EAAMC,GACnBE,EAAMF,GAAOD,EAAMC,GAGvBC,EAAMxuB,MAAMwuB,GAAO,EAAIA,EACvBC,EAAMzuB,MAAMyuB,GAAO,EAAIA,EAEvB,MAAMC,EAAKxoB,EAAIsoB,EACTG,EAAKzoB,EAAIuoB,EAEf,MAAO,CACL9I,SAAU,CACR7oB,EAAGN,EAAQM,EAAI4xB,GAAML,EAAKvxB,EAAI6oB,EAAS7oB,GACvCE,EAAGR,EAAQQ,EAAI0xB,GAAML,EAAKrxB,EAAI2oB,EAAS3oB,IAEzCqxB,KAAM,CACJvxB,EAAGN,EAAQM,EAAI6xB,GAAMN,EAAKvxB,EAAI6oB,EAAS7oB,GACvCE,EAAGR,EAAQQ,EAAI2xB,GAAMN,EAAKrxB,EAAI2oB,EAAS3oB,IAG5C,CAsEM,SAAS4xB,GAAoBlqB,GAAmD,IAA5ByY,EAAuB,UAAH,6CAAG,IAChF,MAAM0R,EAAYb,GAAa7Q,GACzB2R,EAAYpqB,EAAO5J,OACnBi0B,EAAmB/1B,MAAM81B,GAAW9J,KAAK,GACzCgK,EAAeh2B,MAAM81B,GAG3B,IAAIn0B,EAAGs0B,EAAkCC,EACrCC,EAAarB,GAASppB,EAAQ,GAElC,IAAK/J,EAAI,EAAGA,EAAIm0B,IAAan0B,EAI3B,GAHAs0B,EAAcC,EACdA,EAAeC,EACfA,EAAarB,GAASppB,EAAQ/J,EAAI,GAC7Bu0B,EAAL,CAIA,GAAIC,EAAY,CACd,MAAMC,EAAaD,EAAWhS,GAAa+R,EAAa/R,GAGxD4R,EAAOp0B,GAAoB,IAAfy0B,GAAoBD,EAAWN,GAAaK,EAAaL,IAAcO,EAAa,CACjG,CACDJ,EAAGr0B,GAAMs0B,EACJE,EACEjwB,EAAK6vB,EAAOp0B,EAAI,MAAQuE,EAAK6vB,EAAOp0B,IAAO,GACzCo0B,EAAOp0B,EAAI,GAAKo0B,EAAOp0B,IAAM,EAFpBo0B,EAAOp0B,EAAI,GADNo0B,EAAOp0B,EAR7B,EAjFL,SAAwB+J,EAAuBqqB,EAAkBC,GAC/D,MAAMF,EAAYpqB,EAAO5J,OAEzB,IAAIu0B,EAAgBC,EAAeC,EAAcC,EAA0BN,EACvEC,EAAarB,GAASppB,EAAQ,GAClC,IAAK,IAAI/J,EAAI,EAAGA,EAAIm0B,EAAY,IAAKn0B,EACnCu0B,EAAeC,EACfA,EAAarB,GAASppB,EAAQ/J,EAAI,GAC7Bu0B,GAAiBC,IAIlBhwB,EAAa4vB,EAAOp0B,GAAI,EAAGkzB,IAC7BmB,EAAGr0B,GAAKq0B,EAAGr0B,EAAI,GAAK,GAItB00B,EAASL,EAAGr0B,GAAKo0B,EAAOp0B,GACxB20B,EAAQN,EAAGr0B,EAAI,GAAKo0B,EAAOp0B,GAC3B60B,EAAmBhxB,KAAKmB,IAAI0vB,EAAQ,GAAK7wB,KAAKmB,IAAI2vB,EAAO,GACrDE,GAAoB,IAIxBD,EAAO,EAAI/wB,KAAK4C,KAAKouB,GACrBR,EAAGr0B,GAAK00B,EAASE,EAAOR,EAAOp0B,GAC/Bq0B,EAAGr0B,EAAI,GAAK20B,EAAQC,EAAOR,EAAOp0B,KAErC,CAmEC80B,CAAe/qB,EAAQqqB,EAAQC,GAjEjC,SAAyBtqB,EAAuBsqB,GAA0C,IAA5B7R,EAAuB,UAAH,6CAAG,IACnF,MAAM0R,EAAYb,GAAa7Q,GACzB2R,EAAYpqB,EAAO5J,OACzB,IAAI8f,EAAeqU,EAAkCC,EACjDC,EAAarB,GAASppB,EAAQ,GAElC,IAAK,IAAI/J,EAAI,EAAGA,EAAIm0B,IAAan0B,EAAG,CAIlC,GAHAs0B,EAAcC,EACdA,EAAeC,EACfA,EAAarB,GAASppB,EAAQ/J,EAAI,IAC7Bu0B,EACH,SAGF,MAAMQ,EAASR,EAAa/R,GACtBwS,EAAST,EAAaL,GACxBI,IACFrU,GAAS8U,EAAST,EAAY9R,IAAc,EAC5C+R,EAAa,MAAM/R,KAAeuS,EAAS9U,EAC3CsU,EAAa,MAAML,KAAec,EAAS/U,EAAQoU,EAAGr0B,IAEpDw0B,IACFvU,GAASuU,EAAWhS,GAAauS,GAAU,EAC3CR,EAAa,MAAM/R,KAAeuS,EAAS9U,EAC3CsU,EAAa,MAAML,KAAec,EAAS/U,EAAQoU,EAAGr0B,GAEzD,CACF,CAwCCi1B,CAAgBlrB,EAAQsqB,EAAI7R,EAC7B,CAED,SAAS0S,GAAgBC,EAAY1vB,EAAaC,GAChD,OAAO7B,KAAK6B,IAAI7B,KAAK4B,IAAI0vB,EAAIzvB,GAAMD,EACpC,CA2BM,SAAS2vB,GACdrrB,EACAxI,EACAmpB,EACA7F,EACArC,GAEA,IAAIxiB,EAAWO,EAAckqB,EAAoB4K,EAOjD,GAJI9zB,EAAQ+zB,WACVvrB,EAASA,EAAOkoB,QAAQkD,IAAQA,EAAG/B,QAGE,aAAnC7xB,EAAQg0B,uBACVtB,GAAoBlqB,EAAQyY,OACvB,CACL,IAAIgT,EAAO3Q,EAAO9a,EAAOA,EAAO5J,OAAS,GAAK4J,EAAO,GACrD,IAAK/J,EAAI,EAAGO,EAAOwJ,EAAO5J,OAAQH,EAAIO,IAAQP,EAC5CyqB,EAAQ1gB,EAAO/J,GACfq1B,EAAgB/B,GACdkC,EACA/K,EACA1gB,EAAOlG,KAAK4B,IAAIzF,EAAI,EAAGO,GAAQskB,EAAO,EAAI,IAAMtkB,GAChDgB,EAAQk0B,SAEVhL,EAAMY,KAAOgK,EAAcrK,SAAS7oB,EACpCsoB,EAAMc,KAAO8J,EAAcrK,SAAS3oB,EACpCooB,EAAMa,KAAO+J,EAAc3B,KAAKvxB,EAChCsoB,EAAMe,KAAO6J,EAAc3B,KAAKrxB,EAChCmzB,EAAO/K,CAEV,CAEGlpB,EAAQm0B,iBA3Dd,SAAyB3rB,EAAuB2gB,GAC9C,IAAI1qB,EAAGO,EAAMkqB,EAAOkL,EAAQC,EACxBC,EAAarL,GAAezgB,EAAO,GAAI2gB,GAC3C,IAAK1qB,EAAI,EAAGO,EAAOwJ,EAAO5J,OAAQH,EAAIO,IAAQP,EAC5C41B,EAAaD,EACbA,EAASE,EACTA,EAAa71B,EAAIO,EAAO,GAAKiqB,GAAezgB,EAAO/J,EAAI,GAAI0qB,GACtDiL,IAGLlL,EAAQ1gB,EAAO/J,GACX41B,IACFnL,EAAMY,KAAO6J,GAAgBzK,EAAMY,KAAMX,EAAKhF,KAAMgF,EAAKlF,OACzDiF,EAAMc,KAAO2J,GAAgBzK,EAAMc,KAAMb,EAAKnF,IAAKmF,EAAKjF,SAEtDoQ,IACFpL,EAAMa,KAAO4J,GAAgBzK,EAAMa,KAAMZ,EAAKhF,KAAMgF,EAAKlF,OACzDiF,EAAMe,KAAO0J,GAAgBzK,EAAMe,KAAMd,EAAKnF,IAAKmF,EAAKjF,SAG7D,CAwCGiQ,CAAgB3rB,EAAQ2gB,EAE3B,CC1NM,SAASoL,KACd,MAAyB,qBAAXxsB,QAA8C,qBAAbysB,QAChD,CAKM,SAASC,GAAeC,GAC7B,IAAIvD,EAASuD,EAAQC,WAIrB,OAHIxD,GAAgC,wBAAtBA,EAAOj0B,aACnBi0B,EAAUA,EAAsByD,MAE3BzD,CACR,CAOD,SAAS0D,GAAcC,EAA6BtV,EAAmBuV,GACrE,IAAIC,EAYJ,MAX0B,kBAAfF,GACTE,EAAgB7a,SAAS2a,EAAY,KAEJ,IAA7BA,EAAWh1B,QAAQ,OAErBk1B,EAAiBA,EAAgB,IAAOxV,EAAKmV,WAAWI,KAG1DC,EAAgBF,EAGXE,CACR,CAED,MAAMC,GAAoBC,GACxBA,EAAQC,cAAcC,YAAYH,iBAAiBC,EAAS,MAM9D,MAAMG,GAAY,CAAC,MAAO,QAAS,SAAU,QAC7C,SAASC,GAAmBC,EAA6B7U,EAAe8U,GACtE,MAAMC,EAAS,CAAC,EAChBD,EAASA,EAAS,IAAMA,EAAS,GACjC,IAAK,IAAI/2B,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMi3B,EAAML,GAAU52B,GACtBg3B,EAAOC,GAAO13B,WAAWu3B,EAAO7U,EAAQ,IAAMgV,EAAMF,KAAY,CACjE,CAGD,OAFAC,EAAOrQ,MAAQqQ,EAAOtR,KAAOsR,EAAOxR,MACpCwR,EAAOlO,OAASkO,EAAOzR,IAAMyR,EAAOvR,OAC7BuR,CACR,CA0CM,SAASE,GACdC,EACApX,GAEA,GAAI,WAAYoX,EACd,OAAOA,EAGT,MAAM,OAAC1O,EAAM,wBAAEH,GAA2BvI,EACpCkC,EAAQuU,GAAiB/N,GACzB2O,EAAgC,eAApBnV,EAAMoV,UAClBC,EAAWT,GAAmB5U,EAAO,WACrCsV,EAAUV,GAAmB5U,EAAO,SAAU,UAC9C,EAAC9f,EAAC,EAAEE,EAAC,IAAEm1B,GA7Cf,SACEvxB,EACAwiB,GAMA,MAAMgP,EAAWxxB,EAAiBwxB,QAC5B52B,EAAU42B,GAAWA,EAAQt3B,OAASs3B,EAAQ,GAAKxxB,GACnD,QAACyxB,EAAO,QAAEC,GAAW92B,EAC3B,IACIsB,EAAGE,EADHm1B,GAAM,EAEV,GArBmBI,EAACz1B,EAAWE,EAAWtB,KACzCoB,EAAI,GAAKE,EAAI,MAAQtB,IAAWA,EAAwB82B,YAoBrDD,CAAaF,EAASC,EAAS1xB,EAAElF,QACnCoB,EAAIu1B,EACJr1B,EAAIs1B,MACC,CACL,MAAMvN,EAAO3B,EAAOqP,wBACpB31B,EAAItB,EAAOk3B,QAAU3N,EAAK1E,KAC1BrjB,EAAIxB,EAAOm3B,QAAU5N,EAAK7E,IAC1BiS,GAAM,CACP,CACD,MAAO,CAACr1B,IAAGE,IAAGm1B,MACf,CAsBqBS,CAAkBd,EAAO1O,GACvCS,EAAUoO,EAAS5R,MAAQ8R,GAAOD,EAAQ7R,MAC1CyD,EAAUmO,EAAS/R,KAAOiS,GAAOD,EAAQhS,KAE/C,IAAI,MAACoB,EAAK,OAAEmC,GAAU/I,EAKtB,OAJIqX,IACFzQ,GAAS2Q,EAAS3Q,MAAQ4Q,EAAQ5Q,MAClCmC,GAAUwO,EAASxO,OAASyO,EAAQzO,QAE/B,CACL3mB,EAAG0B,KAAKiB,OAAO3C,EAAI+mB,GAAWvC,EAAQ8B,EAAO9B,MAAQ2B,GACrDjmB,EAAGwB,KAAKiB,OAAOzC,EAAI8mB,GAAWL,EAASL,EAAOK,OAASR,GAE1D,CA6BD,MAAM4P,GAAUh2B,GAAc2B,KAAKiB,MAAU,GAAJ5C,GAAU,GAG5C,SAASi2B,GACd1P,EACA2P,EACAC,EACAC,GAEA,MAAMrW,EAAQuU,GAAiB/N,GACzB8P,EAAU1B,GAAmB5U,EAAO,UACpCuK,EAAW4J,GAAcnU,EAAMuK,SAAU/D,EAAQ,gBAAkBzkB,EACnEw0B,EAAYpC,GAAcnU,EAAMuW,UAAW/P,EAAQ,iBAAmBzkB,EACtEy0B,EAxCR,SAA0BhQ,EAA2B9B,EAAemC,GAClE,IAAI0D,EAAkBgM,EAEtB,QAAcjpB,IAAVoX,QAAkCpX,IAAXuZ,EAAsB,CAC/C,MAAM4P,EAAY1C,GAAevN,GACjC,GAAKiQ,EAGE,CACL,MAAMtO,EAAOsO,EAAUZ,wBACjBa,EAAiBnC,GAAiBkC,GAClCE,EAAkB/B,GAAmB8B,EAAgB,SAAU,SAC/DE,EAAmBhC,GAAmB8B,EAAgB,WAC5DhS,EAAQyD,EAAKzD,MAAQkS,EAAiBlS,MAAQiS,EAAgBjS,MAC9DmC,EAASsB,EAAKtB,OAAS+P,EAAiB/P,OAAS8P,EAAgB9P,OACjE0D,EAAW4J,GAAcuC,EAAenM,SAAUkM,EAAW,eAC7DF,EAAYpC,GAAcuC,EAAeH,UAAWE,EAAW,eAChE,MAXC/R,EAAQ8B,EAAOqQ,YACfhQ,EAASL,EAAOsQ,YAWnB,CACD,MAAO,CACLpS,QACAmC,SACA0D,SAAUA,GAAYxoB,EACtBw0B,UAAWA,GAAax0B,EAE3B,CAeuBg1B,CAAiBvQ,EAAQ2P,EAASC,GACxD,IAAI,MAAC1R,EAAK,OAAEmC,GAAU2P,EAEtB,GAAwB,gBAApBxW,EAAMoV,UAA6B,CACrC,MAAME,EAAUV,GAAmB5U,EAAO,SAAU,SAC9CqV,EAAWT,GAAmB5U,EAAO,WAC3C0E,GAAS2Q,EAAS3Q,MAAQ4Q,EAAQ5Q,MAClCmC,GAAUwO,EAASxO,OAASyO,EAAQzO,MACrC,CACDnC,EAAQ9iB,KAAK6B,IAAI,EAAGihB,EAAQ4R,EAAQ5R,OACpCmC,EAASjlB,KAAK6B,IAAI,EAAG4yB,EAAcz0B,KAAKoB,MAAM0hB,EAAQ2R,GAAexP,EAASyP,EAAQzP,QACtFnC,EAAQuR,GAAOr0B,KAAK4B,IAAIkhB,EAAO6F,EAAUiM,EAAcjM,WACvD1D,EAASoP,GAAOr0B,KAAK4B,IAAIqjB,EAAQ0P,EAAWC,EAAcD,YACtD7R,IAAUmC,IAGZA,EAASoP,GAAOvR,EAAQ,IAU1B,YAPmCpX,IAAZ6oB,QAAsC7oB,IAAb8oB,IAE1BC,GAAeG,EAAc3P,QAAUA,EAAS2P,EAAc3P,SAClFA,EAAS2P,EAAc3P,OACvBnC,EAAQuR,GAAOr0B,KAAKoB,MAAM6jB,EAASwP,KAG9B,CAAC3R,QAAOmC,SAChB,CAQM,SAASmQ,GACdlZ,EACAmZ,EACAC,GAEA,MAAMC,EAAaF,GAAc,EAC3BG,EAAex1B,KAAKoB,MAAM8a,EAAM+I,OAASsQ,GACzCE,EAAcz1B,KAAKoB,MAAM8a,EAAM4G,MAAQyS,GAE7CrZ,EAAM+I,OAASuQ,EAAeD,EAC9BrZ,EAAM4G,MAAQ2S,EAAcF,EAE5B,MAAM3Q,EAAS1I,EAAM0I,OAUrB,OALIA,EAAOxG,QAAUkX,IAAgB1Q,EAAOxG,MAAM6G,SAAWL,EAAOxG,MAAM0E,SACxE8B,EAAOxG,MAAM6G,OAAS,GAAG/I,EAAM+I,WAC/BL,EAAOxG,MAAM0E,MAAQ,GAAG5G,EAAM4G,YAG5B5G,EAAMuI,0BAA4B8Q,GAC/B3Q,EAAOK,SAAWuQ,GAClB5Q,EAAO9B,QAAU2S,KACtBvZ,EAAMuI,wBAA0B8Q,EAChC3Q,EAAOK,OAASuQ,EAChB5Q,EAAO9B,MAAQ2S,EACfvZ,EAAMsC,IAAIkX,aAAaH,EAAY,EAAG,EAAGA,EAAY,EAAG,IACjD,EAGV,CAOM,MAAMI,GAAgC,WAC3C,IAAIC,GAAmB,EACvB,IACE,MAAMl4B,EAAU,CACd,WAAIm4B,GAEF,OADAD,GAAmB,GACZ,CACR,GAGHnwB,OAAOqwB,iBAAiB,OAAQ,KAAMp4B,GACtC+H,OAAOswB,oBAAoB,OAAQ,KAAMr4B,GACzC,MAAO0E,IAGT,OAAOwzB,CACR,CAhB4C,GA4BtC,SAASI,GACdpD,EACAjxB,GAEA,MAAMrH,EAvOD,SAAkB27B,EAAiBt0B,GACxC,OAAOgxB,GAAiBsD,GAAIC,iBAAiBv0B,EAC9C,CAqOew0B,CAASvD,EAASjxB,GAC1BsoB,EAAU3vB,GAASA,EAAM4vB,MAAM,qBACrC,OAAOD,GAAWA,EAAQ,QAAKve,CAChC,CC3RM,SAAS0qB,GAAa5pB,EAAWC,EAAW/E,EAAWmX,GAC5D,MAAO,CACLvgB,EAAGkO,EAAGlO,EAAIoJ,GAAK+E,EAAGnO,EAAIkO,EAAGlO,GACzBE,EAAGgO,EAAGhO,EAAIkJ,GAAK+E,EAAGjO,EAAIgO,EAAGhO,GAE5B,CAKM,SAAS63B,GACd7pB,EACAC,EACA/E,EAAWmX,GAEX,MAAO,CACLvgB,EAAGkO,EAAGlO,EAAIoJ,GAAK+E,EAAGnO,EAAIkO,EAAGlO,GACzBE,EAAY,WAATqgB,EAAoBnX,EAAI,GAAM8E,EAAGhO,EAAIiO,EAAGjO,EAC9B,UAATqgB,EAAmBnX,EAAI,EAAI8E,EAAGhO,EAAIiO,EAAGjO,EACnCkJ,EAAI,EAAI+E,EAAGjO,EAAIgO,EAAGhO,EAE3B,CAKM,SAAS83B,GAAqB9pB,EAAiBC,EAAiB/E,EAAWmX,GAChF,MAAM0X,EAAM,CAACj4B,EAAGkO,EAAGib,KAAMjpB,EAAGgO,EAAGmb,MACzB6O,EAAM,CAACl4B,EAAGmO,EAAG+a,KAAMhpB,EAAGiO,EAAGib,MACzBhoB,EAAI02B,GAAa5pB,EAAI+pB,EAAK7uB,GAC1B/H,EAAIy2B,GAAaG,EAAKC,EAAK9uB,GAC3BqD,EAAIqrB,GAAaI,EAAK/pB,EAAI/E,GAC1BqC,EAAIqsB,GAAa12B,EAAGC,EAAG+H,GACvBtF,EAAIg0B,GAAaz2B,EAAGoL,EAAGrD,GAC7B,OAAO0uB,GAAarsB,EAAG3H,EAAGsF,EAC3B,CCSM,SAAS+uB,GAAcC,EAAcC,EAAe7T,GACzD,OAAO4T,EA3CqB,SAASC,EAAe7T,GACpD,MAAO,CACLxkB,EAAEA,GACOq4B,EAAQA,EAAQ7T,EAAQxkB,EAEjCs4B,QAAAA,CAAS7qB,GACP+W,EAAQ/W,CACT,EACDqc,UAAUtiB,GACM,WAAVA,EACKA,EAEQ,UAAVA,EAAoB,OAAS,QAEtC+wB,MAAKA,CAACv4B,EAAGhE,IACAgE,EAAIhE,EAEbw8B,WAAUA,CAACx4B,EAAGy4B,IACLz4B,EAAIy4B,GAyBFC,CAAsBL,EAAO7T,GAnBnC,CACLxkB,EAAEA,GACOA,EAETs4B,QAAAA,CAAS7qB,GAAI,EAEbqc,UAAUtiB,GACDA,EAET+wB,MAAKA,CAACv4B,EAAGhE,IACAgE,EAAIhE,EAEbw8B,WAAUA,CAACx4B,EAAG24B,IACL34B,EAOZ,CAEM,SAAS44B,GAAsB1Y,EAA+B2Y,GACnE,IAAI/Y,EAA4BgZ,EACd,QAAdD,GAAqC,QAAdA,IACzB/Y,EAAQI,EAAIoG,OAAOxG,MACnBgZ,EAAW,CACThZ,EAAM8X,iBAAiB,aACvB9X,EAAMiZ,oBAAoB,cAG5BjZ,EAAMkZ,YAAY,YAAaH,EAAW,aACzC3Y,EAAiD+Y,kBAAoBH,EAEzE,CAEM,SAASI,GAAqBhZ,EAA+B4Y,QACjD1rB,IAAb0rB,WACK5Y,EAAkD+Y,kBACzD/Y,EAAIoG,OAAOxG,MAAMkZ,YAAY,YAAaF,EAAS,GAAIA,EAAS,IAEnE,CChED,SAASK,GAAW91B,GAClB,MAAiB,UAAbA,EACK,CACL+1B,QAASr0B,EACTs0B,QAASx0B,EACTy0B,UAAWx0B,GAGR,CACLs0B,QAAS3zB,EACT4zB,QAASA,CAACj4B,EAAGC,IAAMD,EAAIC,EACvBi4B,UAAWt5B,GAAKA,EAEnB,CAED,SAASu5B,GAAiB,GAAkC,IAAlC,MAACv0B,EAAK,IAAEC,EAAG,MAAE8C,EAAK,KAAE2a,EAAI,MAAE5C,GAAM,EACxD,MAAO,CACL9a,MAAOA,EAAQ+C,EACf9C,IAAKA,EAAM8C,EACX2a,KAAMA,IAASzd,EAAMD,EAAQ,GAAK+C,IAAU,EAC5C+X,QAEH,CA4CM,SAAS0Z,GAAcC,EAAS7xB,EAAQ+b,GAC7C,IAAKA,EACH,MAAO,CAAC8V,GAGV,MAAM,SAACp2B,EAAU2B,MAAO00B,EAAYz0B,IAAK00B,GAAYhW,EAC/C5b,EAAQH,EAAO5J,QACf,QAACq7B,EAAO,QAAED,EAAO,UAAEE,GAAaH,GAAW91B,IAC3C,MAAC2B,EAAK,IAAEC,EAAG,KAAEyd,EAAI,MAAE5C,GAlD3B,SAAoB2Z,EAAS7xB,EAAQ+b,GACnC,MAAM,SAACtgB,EAAU2B,MAAO00B,EAAYz0B,IAAK00B,GAAYhW,GAC/C,QAACyV,EAAO,UAAEE,GAAaH,GAAW91B,GAClC0E,EAAQH,EAAO5J,OAErB,IACIH,EAAGO,GADH,MAAC4G,EAAK,IAAEC,EAAG,KAAEyd,GAAQ+W,EAGzB,GAAI/W,EAAM,CAGR,IAFA1d,GAAS+C,EACT9C,GAAO8C,EACFlK,EAAI,EAAGO,EAAO2J,EAAOlK,EAAIO,GACvBg7B,EAAQE,EAAU1xB,EAAO5C,EAAQ+C,GAAO1E,IAAYq2B,EAAYC,KADjC97B,EAIpCmH,IACAC,IAEFD,GAAS+C,EACT9C,GAAO8C,CACR,CAKD,OAHI9C,EAAMD,IACRC,GAAO8C,GAEF,CAAC/C,QAAOC,MAAKyd,OAAM5C,MAAO2Z,EAAQ3Z,MAC1C,CAwBmC8Z,CAAWH,EAAS7xB,EAAQ+b,GAExDkR,EAAS,GACf,IAEI74B,EAAOssB,EAAOuR,EAFdC,GAAS,EACTC,EAAW,KAGf,MAEMC,EAAcA,IAAMF,GAFEV,EAAQM,EAAYG,EAAW79B,IAA6C,IAAnCq9B,EAAQK,EAAYG,GAGnFI,EAAaA,KAAOH,GAF6B,IAA7BT,EAAQM,EAAU39B,IAAgBo9B,EAAQO,EAAUE,EAAW79B,GAIzF,IAAK,IAAI6B,EAAImH,EAAOquB,EAAOruB,EAAOnH,GAAKoH,IAAOpH,EAC5CyqB,EAAQ1gB,EAAO/J,EAAIkK,GAEfugB,EAAM2I,OAIVj1B,EAAQs9B,EAAUhR,EAAMjlB,IAEpBrH,IAAU69B,IAIdC,EAASV,EAAQp9B,EAAO09B,EAAYC,GAEnB,OAAbI,GAAqBC,MACvBD,EAA0C,IAA/BV,EAAQr9B,EAAO09B,GAAoB77B,EAAIw1B,GAGnC,OAAb0G,GAAqBE,MACvBpF,EAAOn0B,KAAK64B,GAAiB,CAACv0B,MAAO+0B,EAAU90B,IAAKpH,EAAG6kB,OAAM3a,QAAO+X,WACpEia,EAAW,MAEb1G,EAAOx1B,EACPg8B,EAAY79B,IAOd,OAJiB,OAAb+9B,GACFlF,EAAOn0B,KAAK64B,GAAiB,CAACv0B,MAAO+0B,EAAU90B,MAAKyd,OAAM3a,QAAO+X,WAG5D+U,CACR,CAYM,SAASqF,GAAevQ,EAAMhG,GACnC,MAAMkR,EAAS,GACTsF,EAAWxQ,EAAKwQ,SAEtB,IAAK,IAAIt8B,EAAI,EAAGA,EAAIs8B,EAASn8B,OAAQH,IAAK,CACxC,MAAMu8B,EAAMZ,GAAcW,EAASt8B,GAAI8rB,EAAK/hB,OAAQ+b,GAChDyW,EAAIp8B,QACN62B,EAAOn0B,QAAQ05B,EAElB,CACD,OAAOvF,CACR,CAiHD,SAASwF,GAAc1Q,EAAMwQ,EAAUvyB,EAAQ0yB,GAC7C,OAAKA,GAAmBA,EAAejL,YAAeznB,EAaxD,SAAyB+hB,EAAMwQ,EAAUvyB,EAAQ0yB,GAC/C,MAAMC,EAAe5Q,EAAK6Q,OAAOjU,aAC3BkU,EAAYC,GAAU/Q,EAAKvqB,UAC1Bu7B,cAAep8B,EAAca,SAAS,SAAC+zB,IAAaxJ,EACrD5hB,EAAQH,EAAO5J,OACf62B,EAAS,GACf,IAAI+F,EAAYH,EACZz1B,EAAQm1B,EAAS,GAAGn1B,MACpBnH,EAAImH,EAER,SAAS61B,EAAS11B,EAAGrB,EAAG8H,EAAGkvB,GACzB,MAAMC,EAAM5H,GAAY,EAAI,EAC5B,GAAIhuB,IAAMrB,EAAV,CAKA,IADAqB,GAAK4C,EACEH,EAAOzC,EAAI4C,GAAOkpB,MACvB9rB,GAAK41B,EAEP,KAAOnzB,EAAO9D,EAAIiE,GAAOkpB,MACvBntB,GAAKi3B,EAEH51B,EAAI4C,IAAUjE,EAAIiE,IACpB8sB,EAAOn0B,KAAK,CAACsE,MAAOG,EAAI4C,EAAO9C,IAAKnB,EAAIiE,EAAO2a,KAAM9W,EAAGkU,MAAOgb,IAC/DF,EAAYE,EACZ91B,EAAQlB,EAAIiE,EAZb,CAcF,CAED,IAAK,MAAM0xB,KAAWU,EAAU,CAC9Bn1B,EAAQmuB,EAAWnuB,EAAQy0B,EAAQz0B,MACnC,IACI8a,EADAuT,EAAOzrB,EAAO5C,EAAQ+C,GAE1B,IAAKlK,EAAImH,EAAQ,EAAGnH,GAAK47B,EAAQx0B,IAAKpH,IAAK,CACzC,MAAMm1B,EAAKprB,EAAO/J,EAAIkK,GACtB+X,EAAQ4a,GAAUJ,EAAejL,WAAWvC,GAAcyN,EAAc,CACtEp+B,KAAM,UACN6+B,GAAI3H,EACJnlB,GAAI8kB,EACJiI,aAAcp9B,EAAI,GAAKkK,EACvBmzB,YAAar9B,EAAIkK,EACjBxJ,mBAEE48B,GAAarb,EAAO8a,IACtBC,EAAS71B,EAAOnH,EAAI,EAAG47B,EAAQ/W,KAAMkY,GAEvCvH,EAAOL,EACP4H,EAAY9a,CACb,CACG9a,EAAQnH,EAAI,GACdg9B,EAAS71B,EAAOnH,EAAI,EAAG47B,EAAQ/W,KAAMkY,EAExC,CAED,OAAO/F,CACR,CAlEQuG,CAAgBzR,EAAMwQ,EAAUvyB,EAAQ0yB,GAFtCH,CAGV,CAmED,SAASO,GAAUt7B,GACjB,MAAO,CACL+f,gBAAiB/f,EAAQ+f,gBACzBkc,eAAgBj8B,EAAQi8B,eACxBC,WAAYl8B,EAAQk8B,WACpBC,iBAAkBn8B,EAAQm8B,iBAC1BC,gBAAiBp8B,EAAQo8B,gBACzBrT,YAAa/oB,EAAQ+oB,YACrB/I,YAAahgB,EAAQggB,YAExB,CAED,SAAS+b,GAAarb,EAAO8a,GAC3B,OAAOA,GAAa7d,KAAKC,UAAU8C,KAAW/C,KAAKC,UAAU4d,EAC9D,CClVM,MAAMa,GACXphB,WAAAA,GACEG,KAAKkhB,SAAW,KAChBlhB,KAAKmhB,QAAU,IAAIjf,IACnBlC,KAAKohB,UAAW,EAChBphB,KAAKqhB,eAAYzuB,CAClB,CAKD0uB,OAAAA,CAAQle,EAAOme,EAAOC,EAAM7/B,GAC1B,MAAM8/B,EAAYF,EAAMt1B,UAAUtK,GAC5B+/B,EAAWH,EAAMvZ,SAEvByZ,EAAUt1B,SAAQrJ,GAAMA,EAAG,CACzBsgB,QACAue,QAASJ,EAAMI,QACfD,WACAE,YAAa16B,KAAK4B,IAAI04B,EAAOD,EAAM/2B,MAAOk3B,MAE7C,CAKDG,QAAAA,GACM7hB,KAAKkhB,WAGTlhB,KAAKohB,UAAW,EAEhBphB,KAAKkhB,SAAWx0B,GAAiB3K,KAAK4K,QAAQ,KAC5CqT,KAAK8hB,UACL9hB,KAAKkhB,SAAW,KAEZlhB,KAAKohB,UACPphB,KAAK6hB,UACN,IAEJ,CAKDC,OAAAA,GAA2B,IAAnBN,EAAO,UAAH,6CAAGO,KAAKC,MACdC,EAAY,EAEhBjiB,KAAKmhB,QAAQh1B,SAAQ,CAACo1B,EAAOne,KAC3B,IAAKme,EAAMW,UAAYX,EAAMl1B,MAAM7I,OACjC,OAEF,MAAM6I,EAAQk1B,EAAMl1B,MACpB,IAEItF,EAFA1D,EAAIgJ,EAAM7I,OAAS,EACnB2+B,GAAO,EAGX,KAAO9+B,GAAK,IAAKA,EACf0D,EAAOsF,EAAMhJ,GAET0D,EAAKq7B,SACHr7B,EAAKs7B,OAASd,EAAMvZ,WAGtBuZ,EAAMvZ,SAAWjhB,EAAKs7B,QAExBt7B,EAAKu7B,KAAKd,GACVW,GAAO,IAIP91B,EAAMhJ,GAAKgJ,EAAMA,EAAM7I,OAAS,GAChC6I,EAAMk2B,OAINJ,IACF/e,EAAM+e,OACNniB,KAAKshB,QAAQle,EAAOme,EAAOC,EAAM,aAG9Bn1B,EAAM7I,SACT+9B,EAAMW,SAAU,EAChBliB,KAAKshB,QAAQle,EAAOme,EAAOC,EAAM,YACjCD,EAAMI,SAAU,GAGlBM,GAAa51B,EAAM7I,MAAM,IAG3Bwc,KAAKqhB,UAAYG,EAEC,IAAdS,IACFjiB,KAAKohB,UAAW,EAEnB,CAKDoB,SAAAA,CAAUpf,GACR,MAAMqf,EAASziB,KAAKmhB,QACpB,IAAII,EAAQkB,EAAO/f,IAAIU,GAavB,OAZKme,IACHA,EAAQ,CACNW,SAAS,EACTP,SAAS,EACTt1B,MAAO,GACPJ,UAAW,CACTy2B,SAAU,GACVC,SAAU,KAGdF,EAAOn2B,IAAI8W,EAAOme,IAEbA,CACR,CAODqB,MAAAA,CAAOxf,EAAOoX,EAAOqI,GACnB7iB,KAAKwiB,UAAUpf,GAAOnX,UAAUuuB,GAAOt0B,KAAK28B,EAC7C,CAODr2B,GAAAA,CAAI4W,EAAO/W,GACJA,GAAUA,EAAM7I,QAGrBwc,KAAKwiB,UAAUpf,GAAO/W,MAAMnG,QAAQmG,EACrC,CAMDrF,GAAAA,CAAIoc,GACF,OAAOpD,KAAKwiB,UAAUpf,GAAO/W,MAAM7I,OAAS,CAC7C,CAMDgH,KAAAA,CAAM4Y,GACJ,MAAMme,EAAQvhB,KAAKmhB,QAAQze,IAAIU,GAC1Bme,IAGLA,EAAMW,SAAU,EAChBX,EAAM/2B,MAAQu3B,KAAKC,MACnBT,EAAMvZ,SAAWuZ,EAAMl1B,MAAMy2B,QAAO,CAACC,EAAKC,IAAQ97B,KAAK6B,IAAIg6B,EAAKC,EAAIC,YAAY,GAChFjjB,KAAK6hB,WACN,CAEDK,OAAAA,CAAQ9e,GACN,IAAKpD,KAAKohB,SACR,OAAO,EAET,MAAMG,EAAQvhB,KAAKmhB,QAAQze,IAAIU,GAC/B,SAAKme,GAAUA,EAAMW,SAAYX,EAAMl1B,MAAM7I,OAI9C,CAMD0/B,IAAAA,CAAK9f,GACH,MAAMme,EAAQvhB,KAAKmhB,QAAQze,IAAIU,GAC/B,IAAKme,IAAUA,EAAMl1B,MAAM7I,OACzB,OAEF,MAAM6I,EAAQk1B,EAAMl1B,MACpB,IAAIhJ,EAAIgJ,EAAM7I,OAAS,EAEvB,KAAOH,GAAK,IAAKA,EACfgJ,EAAMhJ,GAAG8/B,SAEX5B,EAAMl1B,MAAQ,GACd2T,KAAKshB,QAAQle,EAAOme,EAAOQ,KAAKC,MAAO,WACxC,CAMDoB,MAAAA,CAAOhgB,GACL,OAAOpD,KAAKmhB,QAAQjM,OAAO9R,EAC5B,EAIH,OAA+B,IAAI6d,GCjNnC,MAAMhiB,GAAc,cACdokB,GAAgB,CACpBC,QAAOA,CAAC72B,EAAM2S,EAAImkB,IACTA,EAAS,GAAMnkB,EAAK3S,EAO7B8T,KAAAA,CAAM9T,EAAM2S,EAAImkB,GACd,MAAMC,EAAKC,GAAah3B,GAAQwS,IAC1BwB,EAAK+iB,EAAGrjB,OAASsjB,GAAarkB,GAAMH,IAC1C,OAAOwB,GAAMA,EAAGN,MACZM,EAAGH,IAAIkjB,EAAID,GAAQhxB,YACnB6M,CACL,EACDskB,OAAMA,CAACj3B,EAAM2S,EAAImkB,IACR92B,GAAQ2S,EAAK3S,GAAQ82B,GAIjB,MAAMI,GACnB9jB,WAAAA,CAAY+jB,EAAKx/B,EAAQqtB,EAAMrS,GAC7B,MAAMykB,EAAez/B,EAAOqtB,GAE5BrS,EAAK8S,GAAQ,CAAC0R,EAAIxkB,GAAIA,EAAIykB,EAAcD,EAAIn3B,OAC5C,MAAMA,EAAOylB,GAAQ,CAAC0R,EAAIn3B,KAAMo3B,EAAczkB,IAE9CY,KAAKoiB,SAAU,EACfpiB,KAAK8jB,IAAMF,EAAI9gC,IAAMugC,GAAcO,EAAIjiC,aAAe8K,GACtDuT,KAAK+jB,QAAU/0B,GAAQ40B,EAAI3b,SAAWjZ,GAAQC,OAC9C+Q,KAAKgkB,OAAS98B,KAAKoB,MAAMy5B,KAAKC,OAAS4B,EAAI7b,OAAS,IACpD/H,KAAKijB,UAAYjjB,KAAKqiB,OAASn7B,KAAKoB,MAAMs7B,EAAI5b,UAC9ChI,KAAKikB,QAAUL,EAAI1b,KACnBlI,KAAKkkB,QAAU9/B,EACf4b,KAAKmkB,MAAQ1S,EACbzR,KAAKokB,MAAQ33B,EACbuT,KAAKqkB,IAAMjlB,EACXY,KAAKskB,eAAY1xB,CAClB,CAEDwV,MAAAA,GACE,OAAOpI,KAAKoiB,OACb,CAEDmC,MAAAA,CAAOX,EAAKxkB,EAAIoiB,GACd,GAAIxhB,KAAKoiB,QAAS,CAChBpiB,KAAKshB,SAAQ,GAEb,MAAMuC,EAAe7jB,KAAKkkB,QAAQlkB,KAAKmkB,OACjCK,EAAUhD,EAAOxhB,KAAKgkB,OACtBlgB,EAAS9D,KAAKijB,UAAYuB,EAChCxkB,KAAKgkB,OAASxC,EACdxhB,KAAKijB,UAAY/7B,KAAKoB,MAAMpB,KAAK6B,IAAI+a,EAAQ8f,EAAI5b,WACjDhI,KAAKqiB,QAAUmC,EACfxkB,KAAKikB,QAAUL,EAAI1b,KACnBlI,KAAKqkB,IAAMnS,GAAQ,CAAC0R,EAAIxkB,GAAIA,EAAIykB,EAAcD,EAAIn3B,OAClDuT,KAAKokB,MAAQlS,GAAQ,CAAC0R,EAAIn3B,KAAMo3B,EAAczkB,GAC/C,CACF,CAED+jB,MAAAA,GACMnjB,KAAKoiB,UAEPpiB,KAAKsiB,KAAKP,KAAKC,OACfhiB,KAAKoiB,SAAU,EACfpiB,KAAKshB,SAAQ,GAEhB,CAEDgB,IAAAA,CAAKd,GACH,MAAMgD,EAAUhD,EAAOxhB,KAAKgkB,OACtBhc,EAAWhI,KAAKijB,UAChBxR,EAAOzR,KAAKmkB,MACZ13B,EAAOuT,KAAKokB,MACZlc,EAAOlI,KAAKikB,MACZ7kB,EAAKY,KAAKqkB,IAChB,IAAId,EAIJ,GAFAvjB,KAAKoiB,QAAU31B,IAAS2S,IAAO8I,GAASsc,EAAUxc,IAE7ChI,KAAKoiB,QAGR,OAFApiB,KAAKkkB,QAAQzS,GAAQrS,OACrBY,KAAKshB,SAAQ,GAIXkD,EAAU,EACZxkB,KAAKkkB,QAAQzS,GAAQhlB,GAIvB82B,EAASiB,EAAWxc,EAAY,EAChCub,EAASrb,GAAQqb,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAASvjB,KAAK+jB,QAAQ78B,KAAK4B,IAAI,EAAG5B,KAAK6B,IAAI,EAAGw6B,KAE9CvjB,KAAKkkB,QAAQzS,GAAQzR,KAAK8jB,IAAIr3B,EAAM2S,EAAImkB,GACzC,CAEDkB,IAAAA,GACE,MAAMC,EAAW1kB,KAAKskB,YAActkB,KAAKskB,UAAY,IACrD,OAAO,IAAIK,SAAQ,CAACC,EAAKC,KACvBH,EAASx+B,KAAK,CAAC0+B,MAAKC,OAAK,GAE5B,CAEDvD,OAAAA,CAAQwD,GACN,MAAMC,EAASD,EAAW,MAAQ,MAC5BJ,EAAW1kB,KAAKskB,WAAa,GACnC,IAAK,IAAIjhC,EAAI,EAAGA,EAAIqhC,EAASlhC,OAAQH,IACnCqhC,EAASrhC,GAAG0hC,IAEf,EChHY,MAAMC,GACnBnlB,WAAAA,CAAYuD,EAAO6hB,GACjBjlB,KAAKggB,OAAS5c,EACdpD,KAAKklB,YAAc,IAAIhjB,IACvBlC,KAAKmlB,UAAUF,EAChB,CAEDE,SAAAA,CAAUF,GACR,IAAKhjC,EAASgjC,GACZ,OAGF,MAAMG,EAAmBxjC,OAAO2B,KAAKukB,GAASpD,WACxC2gB,EAAgBrlB,KAAKklB,YAE3BtjC,OAAO0jC,oBAAoBL,GAAQ94B,SAAQ1H,IACzC,MAAMm/B,EAAMqB,EAAOxgC,GACnB,IAAKxC,EAAS2hC,GACZ,OAEF,MAAMkB,EAAW,CAAC,EAClB,IAAK,MAAMS,KAAUH,EACnBN,EAASS,GAAU3B,EAAI2B,IAGxB9jC,EAAQmiC,EAAIzb,aAAeyb,EAAIzb,YAAc,CAAC1jB,IAAM0H,SAASslB,IACxDA,IAAShtB,GAAQ4gC,EAAcr+B,IAAIyqB,IACrC4T,EAAc/4B,IAAImlB,EAAMqT,EACzB,GACD,GAEL,CAMDU,eAAAA,CAAgBphC,EAAQ4e,GACtB,MAAMyiB,EAAaziB,EAAOpe,QACpBA,EAsGV,SAA8BR,EAAQqhC,GACpC,IAAKA,EACH,OAEF,IAAI7gC,EAAUR,EAAOQ,QACrB,IAAKA,EAEH,YADAR,EAAOQ,QAAU6gC,GAGf7gC,EAAQ8gC,UAGVthC,EAAOQ,QAAUA,EAAUhD,OAAO8M,OAAO,CAAC,EAAG9J,EAAS,CAAC8gC,SAAS,EAAOC,YAAa,CAAC,KAEvF,OAAO/gC,CACR,CArHmBghC,CAAqBxhC,EAAQqhC,GAC7C,IAAK7gC,EACH,MAAO,GAGT,MAAM2jB,EAAavI,KAAK6lB,kBAAkBjhC,EAAS6gC,GAYnD,OAXIA,EAAWC,SAmFnB,SAAkBnd,EAAYJ,GAC5B,MAAM+Z,EAAU,GACV3+B,EAAO3B,OAAO2B,KAAK4kB,GACzB,IAAK,IAAI9kB,EAAI,EAAGA,EAAIE,EAAKC,OAAQH,IAAK,CACpC,MAAMyiC,EAAOvd,EAAWhlB,EAAKF,IACzByiC,GAAQA,EAAK1d,UACf8Z,EAAQh8B,KAAK4/B,EAAKrB,OAErB,CAED,OAAOE,QAAQoB,IAAI7D,EACpB,CA1FK8D,CAAS5hC,EAAOQ,QAAQ+gC,YAAaF,GAAYQ,MAAK,KACpD7hC,EAAOQ,QAAU6gC,CAAU,IAC1B,SAKEld,CACR,CAKDsd,iBAAAA,CAAkBzhC,EAAQ4e,GACxB,MAAMqiB,EAAgBrlB,KAAKklB,YACrB3c,EAAa,GACb2Z,EAAU99B,EAAOuhC,cAAgBvhC,EAAOuhC,YAAc,CAAC,GACvDrU,EAAQ1vB,OAAO2B,KAAKyf,GACpBwe,EAAOO,KAAKC,MAClB,IAAI3+B,EAEJ,IAAKA,EAAIiuB,EAAM9tB,OAAS,EAAGH,GAAK,IAAKA,EAAG,CACtC,MAAMouB,EAAOH,EAAMjuB,GACnB,GAAuB,MAAnBouB,EAAKlrB,OAAO,GACd,SAGF,GAAa,YAATkrB,EAAoB,CACtBlJ,EAAWriB,QAAQ8Z,KAAKwlB,gBAAgBphC,EAAQ4e,IAChD,QACD,CACD,MAAMxhB,EAAQwhB,EAAOyO,GACrB,IAAI/M,EAAYwd,EAAQzQ,GACxB,MAAMmS,EAAMyB,EAAc3iB,IAAI+O,GAE9B,GAAI/M,EAAW,CACb,GAAIkf,GAAOlf,EAAU0D,SAAU,CAE7B1D,EAAU6f,OAAOX,EAAKpiC,EAAOggC,GAC7B,SAEA9c,EAAUye,QAEb,CACIS,GAAQA,EAAI5b,UAMjBka,EAAQzQ,GAAQ/M,EAAY,IAAIif,GAAUC,EAAKx/B,EAAQqtB,EAAMjwB,GAC7D+mB,EAAWriB,KAAKwe,IALdtgB,EAAOqtB,GAAQjwB,CAMlB,CACD,OAAO+mB,CACR,CASDgc,MAAAA,CAAOngC,EAAQ4e,GACb,GAA8B,IAA1BhD,KAAKklB,YAAYp+B,KAGnB,YADAlF,OAAO8M,OAAOtK,EAAQ4e,GAIxB,MAAMuF,EAAavI,KAAK6lB,kBAAkBzhC,EAAQ4e,GAElD,OAAIuF,EAAW/kB,QACb0iC,GAAS15B,IAAIwT,KAAKggB,OAAQzX,IACnB,QAFT,CAID,ECvHH,SAAS4d,GAAU3f,EAAO4f,GACxB,MAAMrX,EAAOvI,GAASA,EAAM5hB,SAAW,CAAC,EAClCxB,EAAU2rB,EAAK3rB,QACf0F,OAAmB8J,IAAbmc,EAAKjmB,IAAoBs9B,EAAkB,EACjDr9B,OAAmB6J,IAAbmc,EAAKhmB,IAAoBq9B,EAAkB,EACvD,MAAO,CACL57B,MAAOpH,EAAU2F,EAAMD,EACvB2B,IAAKrH,EAAU0F,EAAMC,EAExB,CAsCD,SAASs9B,GAAwBjjB,EAAOkjB,GACtC,MAAM/iC,EAAO,GACPgjC,EAAWnjB,EAAMojB,uBAAuBF,GAC9C,IAAIjjC,EAAGO,EAEP,IAAKP,EAAI,EAAGO,EAAO2iC,EAAS/iC,OAAQH,EAAIO,IAAQP,EAC9CE,EAAK2C,KAAKqgC,EAASljC,GAAGW,OAExB,OAAOT,CACR,CAED,SAASkjC,GAAWC,EAAOllC,EAAOmlC,GAAuB,IAAd/hC,EAAU,UAAH,6CAAG,CAAC,EACpD,MAAMrB,EAAOmjC,EAAMnjC,KACbqjC,EAA8B,WAAjBhiC,EAAQmhB,KAC3B,IAAI1iB,EAAGO,EAAMG,EAAc8iC,EAE3B,GAAc,OAAVrlC,EAAJ,CAIA,IAAK6B,EAAI,EAAGO,EAAOL,EAAKC,OAAQH,EAAIO,IAAQP,EAAG,CAE7C,GADAU,GAAgBR,EAAKF,GACjBU,IAAiB4iC,EAAS,CAC5B,GAAI/hC,EAAQmhC,IACV,SAEF,KACD,CACDc,EAAaH,EAAM1jB,OAAOjf,GACtB3B,EAASykC,KAAgBD,GAAyB,IAAVplC,GAAeoG,EAAKpG,KAAWoG,EAAKi/B,MAC9ErlC,GAASqlC,EAEZ,CACD,OAAOrlC,CAfN,CAgBF,CAgBD,SAASslC,GAAUtgB,EAAOrZ,GACxB,MAAM45B,EAAUvgB,GAASA,EAAM5hB,QAAQmiC,QACvC,OAAOA,QAAwBn0B,IAAZm0B,QAAwCn0B,IAAfzF,EAAKu5B,KAClD,CAcD,SAASM,GAAiBC,EAAQC,EAAUC,GAC1C,MAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,CAAC,GAC1D,OAAOE,EAASD,KAAgBC,EAASD,GAAc,CAAC,EACzD,CAED,SAASE,GAAoBX,EAAOY,EAAQC,EAAU5lC,GACpD,IAAK,MAAMwL,KAAQm6B,EAAOE,wBAAwB7lC,GAAMyB,UAAW,CACjE,MAAM5B,EAAQklC,EAAMv5B,EAAKnJ,OACzB,GAAIujC,GAAa/lC,EAAQ,IAAQ+lC,GAAY/lC,EAAQ,EACnD,OAAO2L,EAAKnJ,KAEf,CAED,OAAO,IACR,CAED,SAASyjC,GAAaC,EAAYC,GAChC,MAAM,MAACvkB,EAAOwkB,YAAaz6B,GAAQu6B,EAC7BT,EAAS7jB,EAAMykB,UAAYzkB,EAAMykB,QAAU,CAAC,IAC5C,OAACp6B,EAAM,OAAE65B,EAAQtjC,MAAOD,GAAgBoJ,EACxC26B,EAAQr6B,EAAOE,KACfo6B,EAAQT,EAAO35B,KACflJ,EAlCR,SAAqBujC,EAAYC,EAAY96B,GAC3C,MAAO,GAAG66B,EAAW1mC,MAAM2mC,EAAW3mC,MAAM6L,EAAKu5B,OAASv5B,EAAKxL,MAChE,CAgCaumC,CAAYz6B,EAAQ65B,EAAQn6B,GAClCvJ,EAAO+jC,EAAOnkC,OACpB,IAAIkjC,EAEJ,IAAK,IAAIrjC,EAAI,EAAGA,EAAIO,IAAQP,EAAG,CAC7B,MAAM0D,EAAO4gC,EAAOtkC,IACb,CAACykC,GAAQ9jC,EAAO,CAAC+jC,GAAQvmC,GAASuF,EAEzC2/B,GADmB3/B,EAAK8gC,UAAY9gC,EAAK8gC,QAAU,CAAC,IACjCE,GAASf,GAAiBC,EAAQxiC,EAAKT,GAC1D0iC,EAAM3iC,GAAgBvC,EAEtBklC,EAAMyB,KAAOd,GAAoBX,EAAOY,GAAQ,EAAMn6B,EAAKxL,MAC3D+kC,EAAM0B,QAAUf,GAAoBX,EAAOY,GAAQ,EAAOn6B,EAAKxL,KAChE,CACF,CAED,SAAS0mC,GAAgBjlB,EAAOzV,GAC9B,MAAM8Y,EAASrD,EAAMqD,OACrB,OAAO7kB,OAAO2B,KAAKkjB,GAAQ6O,QAAO7wB,GAAOgiB,EAAOhiB,GAAKkJ,OAASA,IAAM26B,OACrE,CA4BD,SAASC,GAAYp7B,EAAMd,GAEzB,MAAMtI,EAAeoJ,EAAKu6B,WAAW1jC,MAC/B2J,EAAOR,EAAKm6B,QAAUn6B,EAAKm6B,OAAO35B,KACxC,GAAKA,EAAL,CAIAtB,EAAQA,GAASc,EAAKO,QACtB,IAAK,MAAMi6B,KAAUt7B,EAAO,CAC1B,MAAM46B,EAASU,EAAOE,QACtB,IAAKZ,QAA2Br0B,IAAjBq0B,EAAOt5B,SAAsDiF,IAA/Bq0B,EAAOt5B,GAAM5J,GACxD,cAEKkjC,EAAOt5B,GAAM5J,EACrB,CATA,CAUF,CAED,MAAMykC,GAAsBziB,GAAkB,UAATA,GAA6B,SAATA,EACnD0iB,GAAmBA,CAACC,EAAQC,IAAWA,EAASD,EAAS9mC,OAAO8M,OAAO,CAAC,EAAGg6B,GAIlE,MAAME,GAKnBC,gBAAkB,CAAC,EAKnBA,0BAA4B,KAK5BA,uBAAyB,KAMzBhpB,WAAAA,CAAYuD,EAAOrf,GACjBic,KAAKoD,MAAQA,EACbpD,KAAK2J,KAAOvG,EAAMsC,IAClB1F,KAAKhc,MAAQD,EACbic,KAAK8oB,gBAAkB,CAAC,EACxB9oB,KAAK4nB,YAAc5nB,KAAK+oB,UACxB/oB,KAAKgpB,MAAQhpB,KAAK4nB,YAAYjmC,KAC9Bqe,KAAKpb,aAAUgO,EAEfoN,KAAKipB,UAAW,EAChBjpB,KAAKkpB,WAAQt2B,EACboN,KAAKmpB,iBAAcv2B,EACnBoN,KAAKopB,oBAAiBx2B,EACtBoN,KAAKqpB,gBAAaz2B,EAClBoN,KAAKspB,gBAAa12B,EAClBoN,KAAKupB,qBAAsB,EAC3BvpB,KAAKwpB,oBAAqB,EAC1BxpB,KAAKypB,cAAW72B,EAChBoN,KAAK0pB,UAAY,GACjB1pB,KAAK2pB,8BAAgCA,mBACrC3pB,KAAK4pB,2BAA6BA,gBAElC5pB,KAAK6pB,YACN,CAEDA,UAAAA,GACE,MAAM18B,EAAO6S,KAAK4nB,YAClB5nB,KAAKmlB,YACLnlB,KAAK8pB,aACL38B,EAAK48B,SAAWjD,GAAU35B,EAAKm6B,OAAQn6B,GACvC6S,KAAKgqB,cAEDhqB,KAAKpb,QAAQ8oB,OAAS1N,KAAKoD,MAAM6mB,gBAAgB,WACnDlY,QAAQC,KAAK,qKAEhB,CAEDkY,WAAAA,CAAYnmC,GACNic,KAAKhc,QAAUD,GACjBwkC,GAAYvoB,KAAK4nB,aAEnB5nB,KAAKhc,MAAQD,CACd,CAED+lC,UAAAA,GACE,MAAM1mB,EAAQpD,KAAKoD,MACbjW,EAAO6S,KAAK4nB,YACZuC,EAAUnqB,KAAKoqB,aAEfC,EAAWA,CAAC18B,EAAMnI,EAAGE,EAAG8M,IAAe,MAAT7E,EAAenI,EAAa,MAATmI,EAAe6E,EAAI9M,EAEpE4kC,EAAMn9B,EAAKo9B,QAAUhoC,EAAe4nC,EAAQI,QAASlC,GAAgBjlB,EAAO,MAC5EonB,EAAMr9B,EAAKs9B,QAAUloC,EAAe4nC,EAAQM,QAASpC,GAAgBjlB,EAAO,MAC5EsnB,EAAMv9B,EAAKw9B,QAAUpoC,EAAe4nC,EAAQQ,QAAStC,GAAgBjlB,EAAO,MAC5EyC,EAAY1Y,EAAK0Y,UACjB+kB,EAAMz9B,EAAK09B,QAAUR,EAASxkB,EAAWykB,EAAKE,EAAKE,GACnDI,EAAM39B,EAAK49B,QAAUV,EAASxkB,EAAW2kB,EAAKF,EAAKI,GACzDv9B,EAAKc,OAAS+R,KAAKgrB,cAAcV,GACjCn9B,EAAKe,OAAS8R,KAAKgrB,cAAcR,GACjCr9B,EAAK89B,OAASjrB,KAAKgrB,cAAcN,GACjCv9B,EAAKM,OAASuS,KAAKgrB,cAAcJ,GACjCz9B,EAAKm6B,OAAStnB,KAAKgrB,cAAcF,EAClC,CAEDV,UAAAA,GACE,OAAOpqB,KAAKoD,MAAM+H,KAAKtG,SAAS7E,KAAKhc,MACtC,CAED+kC,OAAAA,GACE,OAAO/oB,KAAKoD,MAAM8nB,eAAelrB,KAAKhc,MACvC,CAMDgnC,aAAAA,CAAcG,GACZ,OAAOnrB,KAAKoD,MAAMqD,OAAO0kB,EAC1B,CAKDC,cAAAA,CAAe5kB,GACb,MAAMrZ,EAAO6S,KAAK4nB,YAClB,OAAOphB,IAAUrZ,EAAKM,OAClBN,EAAKm6B,OACLn6B,EAAKM,MACV,CAED49B,KAAAA,GACErrB,KAAK8hB,QAAQ,QACd,CAKDwJ,QAAAA,GACE,MAAMn+B,EAAO6S,KAAK4nB,YACd5nB,KAAKkpB,OACPr9B,GAAoBmU,KAAKkpB,MAAOlpB,MAE9B7S,EAAK48B,UACPxB,GAAYp7B,EAEf,CAKDo+B,UAAAA,GACE,MAAMpB,EAAUnqB,KAAKoqB,aACfjf,EAAOgf,EAAQhf,OAASgf,EAAQhf,KAAO,IACvC+d,EAAQlpB,KAAKkpB,MAMnB,GAAIjnC,EAASkpB,GACXnL,KAAKkpB,MAxQX,SAAkC/d,GAChC,MAAM5nB,EAAO3B,OAAO2B,KAAK4nB,GACnBqgB,EAAQ,IAAI9pC,MAAM6B,EAAKC,QAC7B,IAAIH,EAAGO,EAAMa,EACb,IAAKpB,EAAI,EAAGO,EAAOL,EAAKC,OAAQH,EAAIO,IAAQP,EAC1CoB,EAAMlB,EAAKF,GACXmoC,EAAMnoC,GAAK,CACTmC,EAAGf,EACHiB,EAAGylB,EAAK1mB,IAGZ,OAAO+mC,CACR,CA4PkBC,CAAyBtgB,QACjC,GAAI+d,IAAU/d,EAAM,CACzB,GAAI+d,EAAO,CAETr9B,GAAoBq9B,EAAOlpB,MAE3B,MAAM7S,EAAO6S,KAAK4nB,YAClBW,GAAYp7B,GACZA,EAAKO,QAAU,EAChB,CACGyd,GAAQvpB,OAAO8pC,aAAavgB,KtB7PGrf,EsB8PTkU,MtB9PEpX,EsB8PRuiB,GtB7Pdnf,SACRpD,EAAMoD,SAASC,UAAU/F,KAAK4F,IAIhClK,OAAO+pC,eAAe/iC,EAAO,WAAY,CACvC8sB,cAAc,EACdnO,YAAY,EACZ/lB,MAAO,CACLyK,UAAW,CAACH,MAIhBF,GAAYO,SAAS1H,IACnB,MAAMsgC,EAAS,UAAY1+B,EAAY5B,GACjCmnC,EAAOhjC,EAAMnE,GAEnB7C,OAAO+pC,eAAe/iC,EAAOnE,EAAK,CAChCixB,cAAc,EACdnO,YAAY,EACZ/lB,KAAAA,GAAe,2BAANuB,EAAI,yBAAJA,EAAI,gBACX,MAAM6hC,EAAMgH,EAAK3oC,MAAM+c,KAAMjd,GAQ7B,OANA6F,EAAMoD,SAASC,UAAUE,SAAS0/B,IACF,oBAAnBA,EAAO9G,IAChB8G,EAAO9G,MAAWhiC,EACnB,IAGI6hC,CACR,GACD,MsBgOA5kB,KAAK0pB,UAAY,GACjB1pB,KAAKkpB,MAAQ/d,CACd,CtBlQE,IAA2BviB,EAAOkD,CsBmQtC,CAEDk+B,WAAAA,GACE,MAAM78B,EAAO6S,KAAK4nB,YAElB5nB,KAAKurB,aAEDvrB,KAAK2pB,qBACPx8B,EAAKg9B,QAAU,IAAInqB,KAAK2pB,mBAE3B,CAEDmC,qBAAAA,CAAsBC,GACpB,MAAM5+B,EAAO6S,KAAK4nB,YACZuC,EAAUnqB,KAAKoqB,aACrB,IAAI4B,GAAe,EAEnBhsB,KAAKurB,aAGL,MAAMU,EAAa9+B,EAAK48B,SACxB58B,EAAK48B,SAAWjD,GAAU35B,EAAKm6B,OAAQn6B,GAGnCA,EAAKu5B,QAAUyD,EAAQzD,QACzBsF,GAAe,EAEfzD,GAAYp7B,GACZA,EAAKu5B,MAAQyD,EAAQzD,OAKvB1mB,KAAKksB,gBAAgBH,IAGjBC,GAAgBC,IAAe9+B,EAAK48B,WACtCtC,GAAaznB,KAAM7S,EAAKO,QAE3B,CAMDy3B,SAAAA,GACE,MAAMF,EAASjlB,KAAKoD,MAAM6hB,OACpBkH,EAAYlH,EAAOmH,iBAAiBpsB,KAAKgpB,OACzCvW,EAASwS,EAAOoH,gBAAgBrsB,KAAKoqB,aAAc+B,GAAW,GACpEnsB,KAAKpb,QAAUqgC,EAAOqH,eAAe7Z,EAAQzS,KAAK+L,cAClD/L,KAAKipB,SAAWjpB,KAAKpb,QAAQyhB,QAC7BrG,KAAK8oB,gBAAkB,CAAC,CACzB,CAMDyD,KAAAA,CAAM/hC,EAAO+C,GACX,MAAOq6B,YAAaz6B,EAAM+7B,MAAO/d,GAAQnL,MACnC,OAACvS,EAAM,SAAEs8B,GAAY58B,EACrB26B,EAAQr6B,EAAOE,KAErB,IAEItK,EAAG2/B,EAAK2E,EAFR6E,EAAmB,IAAVhiC,GAAe+C,IAAU4d,EAAK3nB,QAAgB2J,EAAKK,QAC5DqrB,EAAOruB,EAAQ,GAAK2C,EAAKO,QAAQlD,EAAQ,GAG7C,IAAsB,IAAlBwV,KAAKipB,SACP97B,EAAKO,QAAUyd,EACfhe,EAAKK,SAAU,EACfm6B,EAASxc,MACJ,CAEHwc,EADElmC,EAAQ0pB,EAAK3gB,IACNwV,KAAKysB,eAAet/B,EAAMge,EAAM3gB,EAAO+C,GACvCtL,EAASkpB,EAAK3gB,IACdwV,KAAK0sB,gBAAgBv/B,EAAMge,EAAM3gB,EAAO+C,GAExCyS,KAAK2sB,mBAAmBx/B,EAAMge,EAAM3gB,EAAO+C,GAGtD,MAAMq/B,EAA6BA,IAAqB,OAAf5J,EAAI8E,IAAoBjP,GAAQmK,EAAI8E,GAASjP,EAAKiP,GAC3F,IAAKzkC,EAAI,EAAGA,EAAIkK,IAASlK,EACvB8J,EAAKO,QAAQrK,EAAImH,GAASw4B,EAAM2E,EAAOtkC,GACnCmpC,IACEI,MACFJ,GAAS,GAEX3T,EAAOmK,GAGX71B,EAAKK,QAAUg/B,CAChB,CAEGzC,GACFtC,GAAaznB,KAAM2nB,EAEtB,CAaDgF,kBAAAA,CAAmBx/B,EAAMge,EAAM3gB,EAAO+C,GACpC,MAAM,OAACE,EAAM,OAAE65B,GAAUn6B,EACnB26B,EAAQr6B,EAAOE,KACfo6B,EAAQT,EAAO35B,KACfk/B,EAASp/B,EAAOq/B,YAChBC,EAAct/B,IAAW65B,EACzBK,EAAS,IAAIjmC,MAAM6L,GACzB,IAAIlK,EAAGO,EAAMI,EAEb,IAAKX,EAAI,EAAGO,EAAO2J,EAAOlK,EAAIO,IAAQP,EACpCW,EAAQX,EAAImH,EACZm9B,EAAOtkC,GAAK,CACV,CAACykC,GAAQiF,GAAet/B,EAAO8+B,MAAMM,EAAO7oC,GAAQA,GACpD,CAAC+jC,GAAQT,EAAOiF,MAAMphB,EAAKnnB,GAAQA,IAGvC,OAAO2jC,CACR,CAaD8E,cAAAA,CAAet/B,EAAMge,EAAM3gB,EAAO+C,GAChC,MAAM,OAACU,EAAM,OAAEC,GAAUf,EACnBw6B,EAAS,IAAIjmC,MAAM6L,GACzB,IAAIlK,EAAGO,EAAMI,EAAO+C,EAEpB,IAAK1D,EAAI,EAAGO,EAAO2J,EAAOlK,EAAIO,IAAQP,EACpCW,EAAQX,EAAImH,EACZzD,EAAOokB,EAAKnnB,GACZ2jC,EAAOtkC,GAAK,CACVmC,EAAGyI,EAAOs+B,MAAMxlC,EAAK,GAAI/C,GACzB0B,EAAGwI,EAAOq+B,MAAMxlC,EAAK,GAAI/C,IAG7B,OAAO2jC,CACR,CAaD+E,eAAAA,CAAgBv/B,EAAMge,EAAM3gB,EAAO+C,GACjC,MAAM,OAACU,EAAM,OAAEC,GAAUf,GACnB,SAAC6/B,EAAW,IAAG,SAAEC,EAAW,KAAOjtB,KAAKipB,SACxCtB,EAAS,IAAIjmC,MAAM6L,GACzB,IAAIlK,EAAGO,EAAMI,EAAO+C,EAEpB,IAAK1D,EAAI,EAAGO,EAAO2J,EAAOlK,EAAIO,IAAQP,EACpCW,EAAQX,EAAImH,EACZzD,EAAOokB,EAAKnnB,GACZ2jC,EAAOtkC,GAAK,CACVmC,EAAGyI,EAAOs+B,MAAM5mC,EAAiBoB,EAAMimC,GAAWhpC,GAClD0B,EAAGwI,EAAOq+B,MAAM5mC,EAAiBoB,EAAMkmC,GAAWjpC,IAGtD,OAAO2jC,CACR,CAKDuF,SAAAA,CAAUlpC,GACR,OAAOgc,KAAK4nB,YAAYl6B,QAAQ1J,EACjC,CAKDmpC,cAAAA,CAAenpC,GACb,OAAOgc,KAAK4nB,YAAYzc,KAAKnnB,EAC9B,CAKDyiC,UAAAA,CAAWjgB,EAAOmhB,EAAQ5hB,GACxB,MAAM3C,EAAQpD,KAAKoD,MACbjW,EAAO6S,KAAK4nB,YACZpmC,EAAQmmC,EAAOnhB,EAAM7Y,MAK3B,OAAO84B,GAJO,CACZljC,KAAM8iC,GAAwBjjB,GAAO,GACrCJ,OAAQ2kB,EAAOE,QAAQrhB,EAAM7Y,OAENnM,EAAO2L,EAAKnJ,MAAO,CAAC+hB,QAC9C,CAKDqnB,qBAAAA,CAAsBnlC,EAAOue,EAAOmhB,EAAQjB,GAC1C,MAAM2G,EAAc1F,EAAOnhB,EAAM7Y,MACjC,IAAInM,EAAwB,OAAhB6rC,EAAuBC,IAAMD,EACzC,MAAMrqB,EAAS0jB,GAASiB,EAAOE,QAAQrhB,EAAM7Y,MACzC+4B,GAAS1jB,IACX0jB,EAAM1jB,OAASA,EACfxhB,EAAQilC,GAAWC,EAAO2G,EAAartB,KAAK4nB,YAAY5jC,QAE1DiE,EAAMa,IAAM5B,KAAK4B,IAAIb,EAAMa,IAAKtH,GAChCyG,EAAMc,IAAM7B,KAAK6B,IAAId,EAAMc,IAAKvH,EACjC,CAKD+rC,SAAAA,CAAU/mB,EAAOgnB,GACf,MAAMrgC,EAAO6S,KAAK4nB,YACZl6B,EAAUP,EAAKO,QACf8+B,EAASr/B,EAAKK,SAAWgZ,IAAUrZ,EAAKM,OACxC7J,EAAO8J,EAAQlK,OACfiqC,EAAaztB,KAAKorB,eAAe5kB,GACjCkgB,EA3YUgH,EAACF,EAAUrgC,EAAMiW,IAAUoqB,IAAargC,EAAKwgC,QAAUxgC,EAAK48B,UAC3E,CAACxmC,KAAM8iC,GAAwBjjB,GAAO,GAAOJ,OAAQ,MA0YxC0qB,CAAYF,EAAUrgC,EAAM6S,KAAKoD,OACzCnb,EAAQ,CAACa,IAAK3G,OAAOmF,kBAAmByB,IAAK5G,OAAOyrC,oBACnD9kC,IAAK+kC,EAAU9kC,IAAK+kC,GA9e/B,SAAuBtnB,GACrB,MAAM,IAAC1d,EAAG,IAAEC,EAAG,WAAE6E,EAAU,WAAEC,GAAc2Y,EAAM1Y,gBACjD,MAAO,CACLhF,IAAK8E,EAAa9E,EAAM3G,OAAOyrC,kBAC/B7kC,IAAK8E,EAAa9E,EAAM5G,OAAOmF,kBAElC,CAwe0CwG,CAAc2/B,GACrD,IAAIpqC,EAAGskC,EAEP,SAASoG,IACPpG,EAASj6B,EAAQrK,GACjB,MAAMwjC,EAAac,EAAO8F,EAAW9/B,MACrC,OAAQvL,EAASulC,EAAOnhB,EAAM7Y,QAAUkgC,EAAWhH,GAAciH,EAAWjH,CAC7E,CAED,IAAKxjC,EAAI,EAAGA,EAAIO,IACVmqC,MAGJ/tB,KAAKotB,sBAAsBnlC,EAAOue,EAAOmhB,EAAQjB,IAC7C8F,MALkBnpC,GAUxB,GAAImpC,EAEF,IAAKnpC,EAAIO,EAAO,EAAGP,GAAK,IAAKA,EAC3B,IAAI0qC,IAAJ,CAGA/tB,KAAKotB,sBAAsBnlC,EAAOue,EAAOmhB,EAAQjB,GACjD,KAFC,CAKL,OAAOz+B,CACR,CAED+lC,kBAAAA,CAAmBxnB,GACjB,MAAMmhB,EAAS3nB,KAAK4nB,YAAYl6B,QAC1BsV,EAAS,GACf,IAAI3f,EAAGO,EAAMpC,EAEb,IAAK6B,EAAI,EAAGO,EAAO+jC,EAAOnkC,OAAQH,EAAIO,IAAQP,EAC5C7B,EAAQmmC,EAAOtkC,GAAGmjB,EAAM7Y,MACpBvL,EAASZ,IACXwhB,EAAO9c,KAAK1E,GAGhB,OAAOwhB,CACR,CAMDirB,cAAAA,GACE,OAAO,CACR,CAKDC,gBAAAA,CAAiBlqC,GACf,MAAMmJ,EAAO6S,KAAK4nB,YACZn6B,EAASN,EAAKM,OACd65B,EAASn6B,EAAKm6B,OACdK,EAAS3nB,KAAKktB,UAAUlpC,GAC9B,MAAO,CACLmqC,MAAO1gC,EAAS,GAAKA,EAAO2gC,iBAAiBzG,EAAOl6B,EAAOE,OAAS,GACpEnM,MAAO8lC,EAAS,GAAKA,EAAO8G,iBAAiBzG,EAAOL,EAAO35B,OAAS,GAEvE,CAKDm0B,OAAAA,CAAQ/b,GACN,MAAM5Y,EAAO6S,KAAK4nB,YAClB5nB,KAAKukB,OAAOxe,GAAQ,WACpB5Y,EAAKkhC,MAxoBT,SAAgB7sC,GACd,IAAIoN,EAAG4D,EAAG3L,EAAGuK,EAWb,OATInP,EAAST,IACXoN,EAAIpN,EAAMonB,IACVpW,EAAIhR,EAAMqnB,MACVhiB,EAAIrF,EAAMsnB,OACV1X,EAAI5P,EAAMunB,MAEVna,EAAI4D,EAAI3L,EAAIuK,EAAI5P,EAGX,CACLonB,IAAKha,EACLia,MAAOrW,EACPsW,OAAQjiB,EACRkiB,KAAM3X,EACNk9B,UAAoB,IAAV9sC,EAEb,CAqnBgB+sC,CAAOhsC,EAAeyd,KAAKpb,QAAQspB,KAvpBpD,SAAqBjgB,EAAQC,EAAQk4B,GACnC,IAAwB,IAApBA,EACF,OAAO,EAET,MAAM5gC,EAAI2gC,GAAUl4B,EAAQm4B,GACtB1gC,EAAIygC,GAAUj4B,EAAQk4B,GAE5B,MAAO,CACLxd,IAAKljB,EAAE+E,IACPoe,MAAOrjB,EAAEiF,IACTqe,OAAQpjB,EAAE8E,MACVue,KAAMvjB,EAAEgF,MAEX,CA0oByDgkC,CAAYrhC,EAAKc,OAAQd,EAAKe,OAAQ8R,KAAKiuB,mBAClG,CAKD1J,MAAAA,CAAOxe,GAAO,CAEdoc,IAAAA,GACE,MAAMzc,EAAM1F,KAAK2J,KACXvG,EAAQpD,KAAKoD,MACbjW,EAAO6S,KAAK4nB,YACZ1iB,EAAW/X,EAAKge,MAAQ,GACxB4C,EAAO3K,EAAMqrB,UACbrmB,EAAS,GACT5d,EAAQwV,KAAKqpB,YAAc,EAC3B97B,EAAQyS,KAAKspB,YAAepkB,EAAS1hB,OAASgH,EAC9Cmc,EAA0B3G,KAAKpb,QAAQ+hB,wBAC7C,IAAItjB,EAMJ,IAJI8J,EAAKg9B,SACPh9B,EAAKg9B,QAAQhI,KAAKzc,EAAKqI,EAAMvjB,EAAO+C,GAGjClK,EAAImH,EAAOnH,EAAImH,EAAQ+C,IAASlK,EAAG,CACtC,MAAMy2B,EAAU5U,EAAS7hB,GACrBy2B,EAAQ6T,SAGR7T,EAAQ1R,QAAUzB,EACpByB,EAAOliB,KAAK4zB,GAEZA,EAAQqI,KAAKzc,EAAKqI,GAErB,CAED,IAAK1qB,EAAI,EAAGA,EAAI+kB,EAAO5kB,SAAUH,EAC/B+kB,EAAO/kB,GAAG8+B,KAAKzc,EAAKqI,EAEvB,CASDsP,QAAAA,CAASr5B,EAAOokB,GACd,MAAMrC,EAAOqC,EAAS,SAAW,UACjC,YAAiBxV,IAAV5O,GAAuBgc,KAAK4nB,YAAYuC,QAC3CnqB,KAAK0uB,6BAA6B3oB,GAClC/F,KAAK2uB,0BAA0B3qC,GAAS,EAAG+hB,EAChD,CAKDgG,UAAAA,CAAW/nB,EAAOokB,EAAQrC,GACxB,MAAMokB,EAAUnqB,KAAKoqB,aACrB,IAAIrlB,EACJ,GAAI/gB,GAAS,GAAKA,EAAQgc,KAAK4nB,YAAYzc,KAAK3nB,OAAQ,CACtD,MAAMs2B,EAAU9Z,KAAK4nB,YAAYzc,KAAKnnB,GACtC+gB,EAAU+U,EAAQ2P,WACf3P,EAAQ2P,SAxjBjB,SAA2B1T,EAAQ/xB,EAAO81B,GACxC,OAAOxH,GAAcyD,EAAQ,CAC3B3N,QAAQ,EACRwmB,UAAW5qC,EACX2jC,YAAQ/0B,EACRi8B,SAAKj8B,EACLknB,UACA91B,QACA+hB,KAAM,UACNpkB,KAAM,QAET,CA6iB2BmtC,CAAkB9uB,KAAK+L,aAAc/nB,EAAO81B,IAClE/U,EAAQ4iB,OAAS3nB,KAAKktB,UAAUlpC,GAChC+gB,EAAQ8pB,IAAM1E,EAAQhf,KAAKnnB,GAC3B+gB,EAAQ/gB,MAAQ+gB,EAAQ6pB,UAAY5qC,OAEpC+gB,EAAU/E,KAAKypB,WACZzpB,KAAKypB,SA3kBd,SAA8B1T,EAAQ/xB,GACpC,OAAOsuB,GAAcyD,EACnB,CACE3N,QAAQ,EACR+hB,aAASv3B,EACT7O,aAAcC,EACdA,QACA+hB,KAAM,UACNpkB,KAAM,WAGX,CAgkBwBotC,CAAqB/uB,KAAKoD,MAAM2I,aAAc/L,KAAKhc,QACtE+gB,EAAQolB,QAAUA,EAClBplB,EAAQ/gB,MAAQ+gB,EAAQhhB,aAAeic,KAAKhc,MAK9C,OAFA+gB,EAAQqD,SAAWA,EACnBrD,EAAQgB,KAAOA,EACRhB,CACR,CAMD2pB,4BAAAA,CAA6B3oB,GAC3B,OAAO/F,KAAKgvB,uBAAuBhvB,KAAK2pB,mBAAmBroC,GAAIykB,EAChE,CAOD4oB,yBAAAA,CAA0B3qC,EAAO+hB,GAC/B,OAAO/F,KAAKgvB,uBAAuBhvB,KAAK4pB,gBAAgBtoC,GAAIykB,EAAM/hB,EACnE,CAKDgrC,sBAAAA,CAAuBC,GAAsC,IAAzBlpB,EAAO,UAAH,6CAAG,UAAW/hB,EAAK,uCACzD,MAAMokB,EAAkB,WAATrC,EACT+M,EAAQ9S,KAAK8oB,gBACbxmB,EAAW2sB,EAAc,IAAMlpB,EAC/B2iB,EAAS5V,EAAMxQ,GACf4sB,EAAUlvB,KAAKupB,qBAAuB9iC,EAAQzC,GACpD,GAAI0kC,EACF,OAAOD,GAAiBC,EAAQwG,GAElC,MAAMjK,EAASjlB,KAAKoD,MAAM6hB,OACpBkH,EAAYlH,EAAOkK,wBAAwBnvB,KAAKgpB,MAAOiG,GACvDvc,EAAWtK,EAAS,CAAC,GAAG6mB,SAAoB,QAASA,EAAa,IAAM,CAACA,EAAa,IACtFxc,EAASwS,EAAOoH,gBAAgBrsB,KAAKoqB,aAAc+B,GACnD5tB,EAAQ3c,OAAO2B,KAAKukB,GAAS5C,SAAS+pB,IAItCjsB,EAASiiB,EAAOmK,oBAAoB3c,EAAQlU,GADlCwG,IAAM/E,KAAK+L,WAAW/nB,EAAOokB,IACqBsK,GAalE,OAXI1P,EAAO0iB,UAGT1iB,EAAO0iB,QAAUwJ,EAKjBpc,EAAMxQ,GAAY1gB,OAAOytC,OAAO5G,GAAiBzlB,EAAQksB,KAGpDlsB,CACR,CAMDssB,kBAAAA,CAAmBtrC,EAAOurC,EAAYnnB,GACpC,MAAMhF,EAAQpD,KAAKoD,MACb0P,EAAQ9S,KAAK8oB,gBACbxmB,EAAW,aAAaitB,IACxB7G,EAAS5V,EAAMxQ,GACrB,GAAIomB,EACF,OAAOA,EAET,IAAI9jC,EACJ,IAAgC,IAA5Bwe,EAAMxe,QAAQ8f,UAAqB,CACrC,MAAMugB,EAASjlB,KAAKoD,MAAM6hB,OACpBkH,EAAYlH,EAAOuK,0BAA0BxvB,KAAKgpB,MAAOuG,GACzD9c,EAASwS,EAAOoH,gBAAgBrsB,KAAKoqB,aAAc+B,GACzDvnC,EAAUqgC,EAAOqH,eAAe7Z,EAAQzS,KAAK+L,WAAW/nB,EAAOokB,EAAQmnB,GACxE,CACD,MAAMhnB,EAAa,IAAIyc,GAAW5hB,EAAOxe,GAAWA,EAAQ2jB,YAI5D,OAHI3jB,GAAWA,EAAQquB,aACrBH,EAAMxQ,GAAY1gB,OAAOytC,OAAO9mB,IAE3BA,CACR,CAMDknB,gBAAAA,CAAiB7qC,GACf,GAAKA,EAAQ8gC,QAGb,OAAO1lB,KAAKopB,iBAAmBppB,KAAKopB,eAAiBxnC,OAAO8M,OAAO,CAAC,EAAG9J,GACxE,CAMD8qC,cAAAA,CAAe3pB,EAAM4pB,GACnB,OAAQA,GAAiBnH,GAAmBziB,IAAS/F,KAAKoD,MAAMwsB,mBACjE,CAKDC,iBAAAA,CAAkBrlC,EAAOub,GACvB,MAAM+pB,EAAY9vB,KAAK2uB,0BAA0BnkC,EAAOub,GAClDgqB,EAA0B/vB,KAAKopB,eAC/BuG,EAAgB3vB,KAAKyvB,iBAAiBK,GACtCJ,EAAiB1vB,KAAK0vB,eAAe3pB,EAAM4pB,IAAmBA,IAAkBI,EAEtF,OADA/vB,KAAKgwB,oBAAoBL,EAAe5pB,EAAM+pB,GACvC,CAACH,gBAAeD,iBACxB,CAMDO,aAAAA,CAAcnW,EAAS91B,EAAOmkB,EAAYpC,GACpCyiB,GAAmBziB,GACrBnkB,OAAO8M,OAAOorB,EAAS3R,GAEvBnI,KAAKsvB,mBAAmBtrC,EAAO+hB,GAAMwe,OAAOzK,EAAS3R,EAExD,CAMD6nB,mBAAAA,CAAoBL,EAAe5pB,EAAM0f,GACnCkK,IAAkBnH,GAAmBziB,IACvC/F,KAAKsvB,wBAAmB18B,EAAWmT,GAAMwe,OAAOoL,EAAelK,EAElE,CAKDyK,SAAAA,CAAUpW,EAAS91B,EAAO+hB,EAAMqC,GAC9B0R,EAAQ1R,OAASA,EACjB,MAAMxjB,EAAUob,KAAKqd,SAASr5B,EAAOokB,GACrCpI,KAAKsvB,mBAAmBtrC,EAAO+hB,EAAMqC,GAAQmc,OAAOzK,EAAS,CAG3Dl1B,SAAWwjB,GAAUpI,KAAKyvB,iBAAiB7qC,IAAaA,GAE3D,CAEDurC,gBAAAA,CAAiBrW,EAAS/1B,EAAcC,GACtCgc,KAAKkwB,UAAUpW,EAAS91B,EAAO,UAAU,EAC1C,CAEDosC,aAAAA,CAActW,EAAS/1B,EAAcC,GACnCgc,KAAKkwB,UAAUpW,EAAS91B,EAAO,UAAU,EAC1C,CAKDqsC,wBAAAA,GACE,MAAMvW,EAAU9Z,KAAK4nB,YAAYuC,QAE7BrQ,GACF9Z,KAAKkwB,UAAUpW,OAASlnB,EAAW,UAAU,EAEhD,CAKD09B,qBAAAA,GACE,MAAMxW,EAAU9Z,KAAK4nB,YAAYuC,QAE7BrQ,GACF9Z,KAAKkwB,UAAUpW,OAASlnB,EAAW,UAAU,EAEhD,CAKDs5B,eAAAA,CAAgBH,GACd,MAAM5gB,EAAOnL,KAAKkpB,MACZhkB,EAAWlF,KAAK4nB,YAAYzc,KAGlC,IAAK,MAAO4Z,EAAQwL,EAAMC,KAASxwB,KAAK0pB,UACtC1pB,KAAK+kB,GAAQwL,EAAMC,GAErBxwB,KAAK0pB,UAAY,GAEjB,MAAM+G,EAAUvrB,EAAS1hB,OACnBktC,EAAUvlB,EAAK3nB,OACf+J,EAAQrG,KAAK4B,IAAI4nC,EAASD,GAE5BljC,GAKFyS,KAAKusB,MAAM,EAAGh/B,GAGZmjC,EAAUD,EACZzwB,KAAK2wB,gBAAgBF,EAASC,EAAUD,EAAS1E,GACxC2E,EAAUD,GACnBzwB,KAAK4wB,gBAAgBF,EAASD,EAAUC,EAE3C,CAKDC,eAAAA,CAAgBnmC,EAAO+C,GAAgC,IAAzBw+B,IAAmB,UAAH,+CAC5C,MAAM5+B,EAAO6S,KAAK4nB,YACZzc,EAAOhe,EAAKge,KACZ1gB,EAAMD,EAAQ+C,EACpB,IAAIlK,EAEJ,MAAMwtC,EAAQxb,IAEZ,IADAA,EAAI7xB,QAAU+J,EACTlK,EAAIgyB,EAAI7xB,OAAS,EAAGH,GAAKoH,EAAKpH,IACjCgyB,EAAIhyB,GAAKgyB,EAAIhyB,EAAIkK,EAClB,EAIH,IAFAsjC,EAAK1lB,GAEA9nB,EAAImH,EAAOnH,EAAIoH,IAAOpH,EACzB8nB,EAAK9nB,GAAK,IAAI2c,KAAK4pB,gBAGjB5pB,KAAKipB,UACP4H,EAAK1jC,EAAKO,SAEZsS,KAAKusB,MAAM/hC,EAAO+C,GAEdw+B,GACF/rB,KAAK8wB,eAAe3lB,EAAM3gB,EAAO+C,EAAO,QAE3C,CAEDujC,cAAAA,CAAehX,EAAStvB,EAAO+C,EAAOwY,GAAO,CAK7C6qB,eAAAA,CAAgBpmC,EAAO+C,GACrB,MAAMJ,EAAO6S,KAAK4nB,YAClB,GAAI5nB,KAAKipB,SAAU,CACjB,MAAM8H,EAAU5jC,EAAKO,QAAQxB,OAAO1B,EAAO+C,GACvCJ,EAAK48B,UACPxB,GAAYp7B,EAAM4jC,EAErB,CACD5jC,EAAKge,KAAKjf,OAAO1B,EAAO+C,EACzB,CAKDyjC,KAAAA,CAAMjuC,GACJ,GAAIid,KAAKipB,SACPjpB,KAAK0pB,UAAUxjC,KAAKnD,OACf,CACL,MAAOgiC,EAAQwL,EAAMC,GAAQztC,EAC7Bid,KAAK+kB,GAAQwL,EAAMC,EACpB,CACDxwB,KAAKoD,MAAM6tB,aAAa/qC,KAAK,CAAC8Z,KAAKhc,SAAUjB,GAC9C,CAEDmuC,WAAAA,GACE,MAAM3jC,EAAQ4jC,UAAU3tC,OACxBwc,KAAKgxB,MAAM,CAAC,kBAAmBhxB,KAAKoqB,aAAajf,KAAK3nB,OAAS+J,EAAOA,GACvE,CAED6jC,UAAAA,GACEpxB,KAAKgxB,MAAM,CAAC,kBAAmBhxB,KAAK4nB,YAAYzc,KAAK3nB,OAAS,EAAI,GACnE,CAED6tC,YAAAA,GACErxB,KAAKgxB,MAAM,CAAC,kBAAoB,EAAG,GACpC,CAEDM,aAAAA,CAAc9mC,EAAO+C,GACfA,GACFyS,KAAKgxB,MAAM,CAAC,kBAAmBxmC,EAAO+C,IAExC,MAAMgkC,EAAWJ,UAAU3tC,OAAS,EAChC+tC,GACFvxB,KAAKgxB,MAAM,CAAC,kBAAmBxmC,EAAO+mC,GAEzC,CAEDC,cAAAA,GACExxB,KAAKgxB,MAAM,CAAC,kBAAoB,EAAEG,UAAU3tC,QAC7C,EC1gCH,SAASiuC,GAAqBtkC,GAC5B,MAAMqZ,EAAQrZ,EAAKM,OACbuV,EAnBR,SAA2BwD,EAAO7kB,GAChC,IAAK6kB,EAAMkrB,OAAOC,KAAM,CACtB,MAAMC,EAAeprB,EAAMghB,wBAAwB7lC,GACnD,IAAIqhB,EAAS,GAEb,IAAK,IAAI3f,EAAI,EAAGO,EAAOguC,EAAapuC,OAAQH,EAAIO,EAAMP,IACpD2f,EAASA,EAAO6uB,OAAOD,EAAavuC,GAAGqkC,WAAWsG,mBAAmBxnB,IAEvEA,EAAMkrB,OAAOC,KAAOvlC,GAAa4W,EAAO8uB,MAAK,CAAClrC,EAAGC,IAAMD,EAAIC,IAC5D,CACD,OAAO2f,EAAMkrB,OAAOC,IACrB,CAQgBI,CAAkBvrB,EAAOrZ,EAAKxL,MAC7C,IACI0B,EAAGO,EAAMouC,EAAMnZ,EADf/vB,EAAM0d,EAAMyrB,QAEhB,MAAMC,EAAmBA,KACV,QAATF,IAA4B,QAAVA,IAIlBvrC,EAAQoyB,KAEV/vB,EAAM5B,KAAK4B,IAAIA,EAAK5B,KAAKa,IAAIiqC,EAAOnZ,IAAS/vB,IAE/C+vB,EAAOmZ,EAAI,EAGb,IAAK3uC,EAAI,EAAGO,EAAOof,EAAOxf,OAAQH,EAAIO,IAAQP,EAC5C2uC,EAAOxrB,EAAMzY,iBAAiBiV,EAAO3f,IACrC6uC,IAIF,IADArZ,OAAOjmB,EACFvP,EAAI,EAAGO,EAAO4iB,EAAMrD,MAAM3f,OAAQH,EAAIO,IAAQP,EACjD2uC,EAAOxrB,EAAM2rB,gBAAgB9uC,GAC7B6uC,IAGF,OAAOppC,CACR,CA2FD,SAASspC,GAAWC,EAAOtrC,EAAMugC,EAAQjkC,GAMvC,OALI5B,EAAQ4wC,GA5Bd,SAAuBA,EAAOtrC,EAAMugC,EAAQjkC,GAC1C,MAAMivC,EAAahL,EAAOiF,MAAM8F,EAAM,GAAIhvC,GACpCkvC,EAAWjL,EAAOiF,MAAM8F,EAAM,GAAIhvC,GAClCyF,EAAM5B,KAAK4B,IAAIwpC,EAAYC,GAC3BxpC,EAAM7B,KAAK6B,IAAIupC,EAAYC,GACjC,IAAIC,EAAW1pC,EACX2pC,EAAS1pC,EAET7B,KAAKa,IAAIe,GAAO5B,KAAKa,IAAIgB,KAC3BypC,EAAWzpC,EACX0pC,EAAS3pC,GAKX/B,EAAKugC,EAAO35B,MAAQ8kC,EAEpB1rC,EAAK2rC,QAAU,CACbF,WACAC,SACAjoC,MAAO8nC,EACP7nC,IAAK8nC,EACLzpC,MACAC,MAEH,CAIG4pC,CAAcN,EAAOtrC,EAAMugC,EAAQjkC,GAEnC0D,EAAKugC,EAAO35B,MAAQ25B,EAAOiF,MAAM8F,EAAOhvC,GAEnC0D,CACR,CAED,SAAS6rC,GAAsBzlC,EAAMge,EAAM3gB,EAAO+C,GAChD,MAAME,EAASN,EAAKM,OACd65B,EAASn6B,EAAKm6B,OACduF,EAASp/B,EAAOq/B,YAChBC,EAAct/B,IAAW65B,EACzBK,EAAS,GACf,IAAItkC,EAAGO,EAAMmD,EAAMsrC,EAEnB,IAAKhvC,EAAImH,EAAO5G,EAAO4G,EAAQ+C,EAAOlK,EAAIO,IAAQP,EAChDgvC,EAAQlnB,EAAK9nB,GACb0D,EAAO,CAAC,EACRA,EAAK0G,EAAOE,MAAQo/B,GAAet/B,EAAO8+B,MAAMM,EAAOxpC,GAAIA,GAC3DskC,EAAOzhC,KAAKksC,GAAWC,EAAOtrC,EAAMugC,EAAQjkC,IAE9C,OAAOskC,CACR,CAED,SAASkL,GAAWC,GAClB,OAAOA,QAA8BlgC,IAApBkgC,EAAON,eAA4C5/B,IAAlBkgC,EAAOL,MAC1D,CA8BD,SAASM,GAAiB5qB,EAAYvjB,EAAS8hC,EAAO1iC,GACpD,IAAIgvC,EAAOpuC,EAAQquC,cACnB,MAAMrO,EAAM,CAAC,EAEb,IAAKoO,EAEH,YADA7qB,EAAW8qB,cAAgBrO,GAI7B,IAAa,IAAToO,EAEF,YADA7qB,EAAW8qB,cAAgB,CAACrqB,KAAK,EAAMC,OAAO,EAAMC,QAAQ,EAAMC,MAAM,IAI1E,MAAM,MAACve,EAAK,IAAEC,EAAG,QAAErH,EAAO,IAAEwlB,EAAG,OAAEE,GAnCnC,SAAqBX,GACnB,IAAI/kB,EAASoH,EAAOC,EAAKme,EAAKE,EAiB9B,OAhBIX,EAAW+qB,YACb9vC,EAAU+kB,EAAWyjB,KAAOzjB,EAAW3iB,EACvCgF,EAAQ,OACRC,EAAM,UAENrH,EAAU+kB,EAAWyjB,KAAOzjB,EAAWziB,EACvC8E,EAAQ,SACRC,EAAM,OAEJrH,GACFwlB,EAAM,MACNE,EAAS,UAETF,EAAM,QACNE,EAAS,OAEJ,CAACte,QAAOC,MAAKrH,UAASwlB,MAAKE,SACnC,CAgB4CqqB,CAAYhrB,GAE1C,WAAT6qB,GAAqBtM,IACvBve,EAAWirB,oBAAqB,GAC3B1M,EAAMyB,MAAQ,KAAOnkC,EACxBgvC,EAAOpqB,GACG8d,EAAM0B,SAAW,KAAOpkC,EAClCgvC,EAAOlqB,GAEP8b,EAAIyO,GAAUvqB,EAAQte,EAAOC,EAAKrH,KAAY,EAC9C4vC,EAAOpqB,IAIXgc,EAAIyO,GAAUL,EAAMxoC,EAAOC,EAAKrH,KAAY,EAC5C+kB,EAAW8qB,cAAgBrO,CAC5B,CAED,SAASyO,GAAUL,EAAMpsC,EAAGC,EAAGzD,GAU/B,IAAckwC,EAAMxvC,EAAIyvC,EAHtB,OANInwC,GASkBmwC,EARC1sC,EACrBmsC,EAAOQ,GADPR,GAQUM,EAREN,MAQIlvC,EARE8C,GASC2sC,EAAKD,IAASC,EAAKzvC,EAAKwvC,EARrBzsC,EAAGD,IAEzBosC,EAAOQ,GAASR,EAAMpsC,EAAGC,GAEpBmsC,CACR,CAMD,SAASQ,GAASjuC,EAAGiF,EAAOC,GAC1B,MAAa,UAANlF,EAAgBiF,EAAc,QAANjF,EAAckF,EAAMlF,CACpD,CAED,SAASkuC,GAAiBtrB,EAAY,EAAiB7I,GAAO,IAAxB,cAACo0B,GAAc,EACnDvrB,EAAWurB,cAAkC,SAAlBA,EACb,IAAVp0B,EAAc,IAAO,EACrBo0B,CACL,CAEc,MAAMC,WAAsB/K,GAEzCC,UAAY,MAKZA,gBAAkB,CAChBc,oBAAoB,EACpBC,gBAAiB,MAEjBgK,mBAAoB,GACpBC,cAAe,GACfC,SAAS,EAETvrB,WAAY,CACVxG,QAAS,CACPpgB,KAAM,SACNwmB,WAAY,CAAC,IAAK,IAAK,OAAQ,QAAS,aAQ9C0gB,iBAAmB,CACjBpiB,OAAQ,CACNstB,QAAS,CACPpyC,KAAM,WACNsnB,QAAQ,EACRI,KAAM,CACJJ,QAAQ,IAGZ+qB,QAAS,CACPryC,KAAM,SACNunB,aAAa,KAWnByjB,kBAAAA,CAAmBx/B,EAAMge,EAAM3gB,EAAO+C,GACpC,OAAOqlC,GAAsBzlC,EAAMge,EAAM3gB,EAAO+C,EACjD,CAODk/B,cAAAA,CAAet/B,EAAMge,EAAM3gB,EAAO+C,GAChC,OAAOqlC,GAAsBzlC,EAAMge,EAAM3gB,EAAO+C,EACjD,CAODm/B,eAAAA,CAAgBv/B,EAAMge,EAAM3gB,EAAO+C,GACjC,MAAM,OAACE,EAAM,OAAE65B,GAAUn6B,GACnB,SAAC6/B,EAAW,IAAG,SAAEC,EAAW,KAAOjtB,KAAKipB,SACxCgL,EAA2B,MAAhBxmC,EAAOE,KAAeq/B,EAAWC,EAC5CiH,EAA2B,MAAhB5M,EAAO35B,KAAeq/B,EAAWC,EAC5CtF,EAAS,GACf,IAAItkC,EAAGO,EAAMmD,EAAMnB,EACnB,IAAKvC,EAAImH,EAAO5G,EAAO4G,EAAQ+C,EAAOlK,EAAIO,IAAQP,EAChDuC,EAAMulB,EAAK9nB,GACX0D,EAAO,CAAC,EACRA,EAAK0G,EAAOE,MAAQF,EAAO8+B,MAAM5mC,EAAiBC,EAAKquC,GAAW5wC,GAClEskC,EAAOzhC,KAAKksC,GAAWzsC,EAAiBC,EAAKsuC,GAAWntC,EAAMugC,EAAQjkC,IAExE,OAAOskC,CACR,CAKDyF,qBAAAA,CAAsBnlC,EAAOue,EAAOmhB,EAAQjB,GAC1CyN,MAAM/G,sBAAsBnlC,EAAOue,EAAOmhB,EAAQjB,GAClD,MAAMoM,EAASnL,EAAO+K,QAClBI,GAAUtsB,IAAUxG,KAAK4nB,YAAYN,SAEvCr/B,EAAMa,IAAM5B,KAAK4B,IAAIb,EAAMa,IAAKgqC,EAAOhqC,KACvCb,EAAMc,IAAM7B,KAAK6B,IAAId,EAAMc,IAAK+pC,EAAO/pC,KAE1C,CAMDklC,cAAAA,GACE,OAAO,CACR,CAKDC,gBAAAA,CAAiBlqC,GACf,MAAMmJ,EAAO6S,KAAK4nB,aACZ,OAACn6B,EAAM,OAAE65B,GAAUn6B,EACnBw6B,EAAS3nB,KAAKktB,UAAUlpC,GACxB8uC,EAASnL,EAAO+K,QAChBlxC,EAAQqxC,GAAWC,GACrB,IAAMA,EAAOtoC,MAAQ,KAAOsoC,EAAOroC,IAAM,IACzC,GAAK68B,EAAO8G,iBAAiBzG,EAAOL,EAAO35B,OAE/C,MAAO,CACLwgC,MAAO,GAAK1gC,EAAO2gC,iBAAiBzG,EAAOl6B,EAAOE,OAClDnM,QAEH,CAEDqoC,UAAAA,GACE7pB,KAAKupB,qBAAsB,EAE3B4K,MAAMtK,aAEO7pB,KAAK4nB,YACblB,MAAQ1mB,KAAKoqB,aAAa1D,KAChC,CAEDnC,MAAAA,CAAOxe,GACL,MAAM5Y,EAAO6S,KAAK4nB,YAClB5nB,KAAK8wB,eAAe3jC,EAAKge,KAAM,EAAGhe,EAAKge,KAAK3nB,OAAQuiB,EACrD,CAED+qB,cAAAA,CAAesD,EAAM5pC,EAAO+C,EAAOwY,GACjC,MAAMslB,EAAiB,UAATtlB,GACR,MAAC/hB,EAAO4jC,aAAa,OAACN,IAAWtnB,KACjC4rB,EAAOtE,EAAO+M,eACdnB,EAAa5L,EAAOgN,eACpBC,EAAQv0B,KAAKw0B,aACb,cAAC7E,EAAa,eAAED,GAAkB1vB,KAAK6vB,kBAAkBrlC,EAAOub,GAEtE,IAAK,IAAI1iB,EAAImH,EAAOnH,EAAImH,EAAQ+C,EAAOlK,IAAK,CAC1C,MAAMskC,EAAS3nB,KAAKktB,UAAU7pC,GACxBoxC,EAAUpJ,GAAS9pC,EAAcomC,EAAOL,EAAO35B,OAAS,CAACi+B,OAAM8I,KAAM9I,GAAQ5rB,KAAK20B,yBAAyBtxC,GAC3GuxC,EAAU50B,KAAK60B,yBAAyBxxC,EAAGkxC,GAC3C7N,GAASiB,EAAOE,SAAW,CAAC,GAAGP,EAAO35B,MAEtCwa,EAAa,CACjB+qB,aACAtH,KAAM6I,EAAQ7I,KACdwH,oBAAqB1M,GAASmM,GAAWlL,EAAO+K,UAAa1uC,IAAU0iC,EAAMyB,MAAQnkC,IAAU0iC,EAAM0B,QACrG5iC,EAAG0tC,EAAauB,EAAQC,KAAOE,EAAQE,OACvCpvC,EAAGwtC,EAAa0B,EAAQE,OAASL,EAAQC,KACzCvoB,OAAQ+mB,EAAa0B,EAAQ9tC,KAAOI,KAAKa,IAAI0sC,EAAQ3tC,MACrDkjB,MAAOkpB,EAAahsC,KAAKa,IAAI0sC,EAAQ3tC,MAAQ8tC,EAAQ9tC,MAGnD4oC,IACFvnB,EAAWvjB,QAAU+qC,GAAiB3vB,KAAK2uB,0BAA0BtrC,EAAG+wC,EAAK/wC,GAAG+kB,OAAS,SAAWrC,IAEtG,MAAMnhB,EAAUujB,EAAWvjB,SAAWwvC,EAAK/wC,GAAGuB,QAC9CmuC,GAAiB5qB,EAAYvjB,EAAS8hC,EAAO1iC,GAC7CyvC,GAAiBtrB,EAAYvjB,EAAS2vC,EAAMj1B,OAC5CU,KAAKiwB,cAAcmE,EAAK/wC,GAAIA,EAAG8kB,EAAYpC,EAC5C,CACF,CASDgvB,UAAAA,CAAWtpC,EAAMmjC,GACf,MAAM,OAACnhC,GAAUuS,KAAK4nB,YAChBrB,EAAW94B,EAAO+5B,wBAAwBxnB,KAAKgpB,OAClD1T,QAAOnoB,GAAQA,EAAKu6B,WAAW9iC,QAAQkvC,UACpC/M,EAAUt5B,EAAO7I,QAAQmiC,QACzBE,EAAS,GAET+N,EAAY7nC,IAChB,MAAMw6B,EAASx6B,EAAKu6B,WAAWwF,UAAU0B,GACnC1tB,EAAMymB,GAAUA,EAAOx6B,EAAKm6B,OAAO35B,MAEzC,GAAIpM,EAAc2f,IAAQxY,MAAMwY,GAC9B,OAAO,CACR,EAGH,IAAK,MAAM/T,KAAQo5B,EACjB,SAAkB3zB,IAAdg8B,IAA2BoG,EAAS7nC,QASxB,IAAZ45B,IAAqD,IAAhCE,EAAOviC,QAAQyI,EAAKu5B,aAClC9zB,IAAZm0B,QAAwCn0B,IAAfzF,EAAKu5B,QAC3BO,EAAO/gC,KAAKiH,EAAKu5B,OAEfv5B,EAAKnJ,QAAUyH,GACjB,MAWJ,OAJKw7B,EAAOzjC,QACVyjC,EAAO/gC,UAAK0M,GAGPq0B,CACR,CAMDgO,cAAAA,CAAejxC,GACb,OAAOgc,KAAK+0B,gBAAWniC,EAAW5O,GAAOR,MAC1C,CAUD0xC,cAAAA,CAAenxC,EAAcgjB,EAAM6nB,GACjC,MAAM3H,EAASjnB,KAAK+0B,WAAWhxC,EAAc6qC,GACvC5qC,OAAkB4O,IAATmU,EACXkgB,EAAOviC,QAAQqiB,IACd,EAEL,OAAmB,IAAZ/iB,EACHijC,EAAOzjC,OAAS,EAChBQ,CACL,CAKDwwC,SAAAA,GACE,MAAMzlB,EAAO/O,KAAKpb,QACZuI,EAAO6S,KAAK4nB,YACZn6B,EAASN,EAAKM,OACd0nC,EAAS,GACf,IAAI9xC,EAAGO,EAEP,IAAKP,EAAI,EAAGO,EAAOuJ,EAAKge,KAAK3nB,OAAQH,EAAIO,IAAQP,EAC/C8xC,EAAOjvC,KAAKuH,EAAOM,iBAAiBiS,KAAKktB,UAAU7pC,GAAGoK,EAAOE,MAAOtK,IAGtE,MAAM+xC,EAAermB,EAAKqmB,aAG1B,MAAO,CACLtsC,IAHUssC,GAAgB3D,GAAqBtkC,GAI/CgoC,SACA3qC,MAAOiD,EAAO4nC,YACd5qC,IAAKgD,EAAO6nC,UACZC,WAAYv1B,KAAKi1B,iBACjBzuB,MAAO/Y,EACPqmC,QAAS/kB,EAAK+kB,QAEdx0B,MAAO81B,EAAe,EAAIrmB,EAAK6kB,mBAAqB7kB,EAAK8kB,cAE5D,CAMDc,wBAAAA,CAAyB3wC,GACvB,MAAO4jC,aAAa,OAACN,EAAM,SAAEyC,GAAWnlC,SAAUgnC,KAAM4J,EAAS,aAAEC,IAAiBz1B,KAC9E01B,EAAaF,GAAa,EAC1B7N,EAAS3nB,KAAKktB,UAAUlpC,GACxB8uC,EAASnL,EAAO+K,QAChBiD,EAAW9C,GAAWC,GAC5B,IAGI4B,EAAM5tC,EAHNtF,EAAQmmC,EAAOL,EAAO35B,MACtBnD,EAAQ,EACRhH,EAASumC,EAAW/pB,KAAKymB,WAAWa,EAAQK,EAAQoC,GAAYvoC,EAGhEgC,IAAWhC,IACbgJ,EAAQhH,EAAShC,EACjBgC,EAAShC,GAGPm0C,IACFn0C,EAAQsxC,EAAON,SACfhvC,EAASsvC,EAAOL,OAASK,EAAON,SAElB,IAAVhxC,GAAeoG,EAAKpG,KAAWoG,EAAKkrC,EAAOL,UAC7CjoC,EAAQ,GAEVA,GAAShJ,GAGX,MAAM8wC,EAAc/wC,EAAci0C,IAAeG,EAAuBnrC,EAAZgrC,EAC5D,IAAI5J,EAAOtE,EAAOv5B,iBAAiBukC,GAWnC,GAREoC,EADE10B,KAAKoD,MAAMwyB,kBAAkB5xC,GACxBsjC,EAAOv5B,iBAAiBvD,EAAQhH,GAGhCooC,EAGT9kC,EAAO4tC,EAAO9I,EAEV1kC,KAAKa,IAAIjB,GAAQ2uC,EAAc,CACjC3uC,EArZN,SAAiBA,EAAMwgC,EAAQoO,GAC7B,OAAa,IAAT5uC,EACKc,EAAKd,IAENwgC,EAAOgN,eAAiB,GAAK,IAAMhN,EAAOx+B,KAAO4sC,EAAa,GAAK,EAC5E,CAgZYG,CAAQ/uC,EAAMwgC,EAAQoO,GAAcD,EACvCj0C,IAAUk0C,IACZ9J,GAAQ9kC,EAAO,GAEjB,MAAMgvC,EAAaxO,EAAOyO,mBAAmB,GACvCC,EAAW1O,EAAOyO,mBAAmB,GACrCjtC,EAAM5B,KAAK4B,IAAIgtC,EAAYE,GAC3BjtC,EAAM7B,KAAK6B,IAAI+sC,EAAYE,GACjCpK,EAAO1kC,KAAK6B,IAAI7B,KAAK4B,IAAI8iC,EAAM7iC,GAAMD,GACrC4rC,EAAO9I,EAAO9kC,CACf,CAED,GAAI8kC,IAAStE,EAAOv5B,iBAAiB2nC,GAAa,CAChD,MAAMO,EAAWruC,EAAKd,GAAQwgC,EAAO4O,qBAAqBR,GAAc,EACxE9J,GAAQqK,EACRnvC,GAAQmvC,CACT,CAED,MAAO,CACLnvC,OACA8kC,OACA8I,OACAI,OAAQJ,EAAO5tC,EAAO,EAEzB,CAKD+tC,wBAAAA,CAAyB7wC,EAAOuwC,GAC9B,MAAM/tB,EAAQ+tB,EAAM/tB,MACd5hB,EAAUob,KAAKpb,QACfowC,EAAWpwC,EAAQowC,SACnBmB,EAAkB5zC,EAAeqC,EAAQuxC,gBAAiBC,KAChE,IAAItB,EAAQhuC,EACZ,GAAIytC,EAAMT,QAAS,CACjB,MAAMyB,EAAaP,EAAWh1B,KAAKi1B,eAAejxC,GAASuwC,EAAMgB,WAC3DttC,EAAiC,SAAzBrD,EAAQwwC,aA/gB5B,SAAmCpxC,EAAOuwC,EAAO3vC,EAAS2wC,GACxD,MAAMJ,EAASZ,EAAMY,OACfnD,EAAOmD,EAAOnxC,GACpB,IAAI60B,EAAO70B,EAAQ,EAAImxC,EAAOnxC,EAAQ,GAAK,KACvC+yB,EAAO/yB,EAAQmxC,EAAO3xC,OAAS,EAAI2xC,EAAOnxC,EAAQ,GAAK,KAC3D,MAAMqyC,EAAUzxC,EAAQgvC,mBAEX,OAAT/a,IAGFA,EAAOmZ,GAAiB,OAATjb,EAAgBwd,EAAM9pC,IAAM8pC,EAAM/pC,MAAQusB,EAAOib,IAGrD,OAATjb,IAEFA,EAAOib,EAAOA,EAAOnZ,GAGvB,MAAMruB,EAAQwnC,GAAQA,EAAO9qC,KAAK4B,IAAI+vB,EAAM9B,IAAS,EAAIsf,EAGzD,MAAO,CACLC,MAHWpvC,KAAKa,IAAIgvB,EAAO8B,GAAQ,EAAIwd,EAGzBd,EACdj2B,MAAO1a,EAAQivC,cACfrpC,QAEH,CAsfS+rC,CAA0BvyC,EAAOuwC,EAAO3vC,EAAS2wC,GA5iB3D,SAAkCvxC,EAAOuwC,EAAO3vC,EAAS2wC,GACvD,MAAMiB,EAAY5xC,EAAQwwC,aAC1B,IAAItuC,EAAMwY,EAaV,OAXI/d,EAAci1C,IAChB1vC,EAAOytC,EAAMzrC,IAAMlE,EAAQgvC,mBAC3Bt0B,EAAQ1a,EAAQivC,gBAKhB/sC,EAAO0vC,EAAYjB,EACnBj2B,EAAQ,GAGH,CACLg3B,MAAOxvC,EAAOyuC,EACdj2B,QACA9U,MAAO+pC,EAAMY,OAAOnxC,GAAU8C,EAAO,EAExC,CAyhBS2vC,CAAyBzyC,EAAOuwC,EAAO3vC,EAAS2wC,GAE9CmB,EAAa12B,KAAKk1B,eAAel1B,KAAKhc,MAAOgc,KAAK4nB,YAAYlB,MAAOsO,EAAWhxC,OAAQ4O,GAC9FkiC,EAAS7sC,EAAMuC,MAASvC,EAAMquC,MAAQI,EAAezuC,EAAMquC,MAAQ,EACnExvC,EAAOI,KAAK4B,IAAIqtC,EAAiBluC,EAAMquC,MAAQruC,EAAMqX,YAGrDw1B,EAAStuB,EAAMzY,iBAAiBiS,KAAKktB,UAAUlpC,GAAOwiB,EAAM7Y,MAAO3J,GACnE8C,EAAOI,KAAK4B,IAAIqtC,EAAiB5B,EAAMzrC,IAAMyrC,EAAMj1B,OAGrD,MAAO,CACLssB,KAAMkJ,EAAShuC,EAAO,EACtB4tC,KAAMI,EAAShuC,EAAO,EACtBguC,SACAhuC,OAEH,CAEDq7B,IAAAA,GACE,MAAMh1B,EAAO6S,KAAK4nB,YACZN,EAASn6B,EAAKm6B,OACdqP,EAAQxpC,EAAKge,KACbvnB,EAAO+yC,EAAMnzC,OACnB,IAAIH,EAAI,EAER,KAAOA,EAAIO,IAAQP,EACsB,OAAnC2c,KAAKktB,UAAU7pC,GAAGikC,EAAO35B,OAC3BgpC,EAAMtzC,GAAG8+B,KAAKniB,KAAK2J,KAGxB,ECpmBY,MAAMitB,WAA2BhO,GAE9CC,UAAY,WAKZA,gBAAkB,CAChBc,oBAAoB,EACpBC,gBAAiB,MACjBllB,UAAW,CAETmyB,eAAe,EAEfC,cAAc,GAEhBvuB,WAAY,CACVxG,QAAS,CACPpgB,KAAM,SACNwmB,WAAY,CAAC,gBAAiB,WAAY,cAAe,cAAe,aAAc,IAAK,IAAK,SAAU,cAAe,aAI7H4uB,OAAQ,MAGRlqB,SAAU,EAGVmqB,cAAe,IAGflqB,OAAQ,OAGRmqB,QAAS,EAETpxB,UAAW,KAGbgjB,mBAAqB,CACnBnhB,YAAcX,GAAkB,YAATA,EACvBa,WAAab,GAAkB,YAATA,GAMxB8hB,iBAAmB,CACjBlN,YAAa,EAGbrV,QAAS,CACP4wB,OAAQ,CACNrK,OAAQ,CACNsK,cAAAA,CAAe/zB,GACb,MAAM+H,EAAO/H,EAAM+H,KACnB,GAAIA,EAAK0hB,OAAOrpC,QAAU2nB,EAAKtG,SAASrhB,OAAQ,CAC9C,MAAOqpC,QAAQ,WAACjgB,EAAU,MAAErM,IAAU6C,EAAM8zB,OAAOtyC,QAEnD,OAAOumB,EAAK0hB,OAAO1oC,KAAI,CAACgqC,EAAO9qC,KAC7B,MACMiiB,EADOlC,EAAM8nB,eAAe,GACfxD,WAAWrK,SAASh6B,GAEvC,MAAO,CACL6mB,KAAMikB,EACN9e,UAAW/J,EAAMX,gBACjBgL,YAAarK,EAAMV,YACnBwyB,UAAW72B,EACX+I,UAAWhE,EAAMqI,YACjBf,WAAYA,EACZ+gB,QAASvqB,EAAMwyB,kBAAkBvyC,GAGjCW,MAAOX,EACR,GAEJ,CACD,MAAO,EACR,GAGH+iB,OAAAA,CAAQ9c,EAAG+tC,EAAYH,GACrBA,EAAO9zB,MAAMk0B,qBAAqBD,EAAWrzC,OAC7CkzC,EAAO9zB,MAAMmhB,QACd,KAKP1kB,WAAAA,CAAYuD,EAAOrf,GACjBowC,MAAM/wB,EAAOrf,GAEbic,KAAKupB,qBAAsB,EAC3BvpB,KAAKu3B,iBAAc3kC,EACnBoN,KAAKw3B,iBAAc5kC,EACnBoN,KAAK+a,aAAUnoB,EACfoN,KAAKgb,aAAUpoB,CAChB,CAEDk3B,UAAAA,GAAc,CAKdyC,KAAAA,CAAM/hC,EAAO+C,GACX,MAAM4d,EAAOnL,KAAKoqB,aAAajf,KACzBhe,EAAO6S,KAAK4nB,YAElB,IAAsB,IAAlB5nB,KAAKipB,SACP97B,EAAKO,QAAUyd,MACV,CACL,IAOI9nB,EAAGO,EAPH6zC,EAAUp0C,IAAO8nB,EAAK9nB,GAE1B,GAAIpB,EAASkpB,EAAK3gB,IAAS,CACzB,MAAM,IAAC/F,EAAM,SAAWub,KAAKipB,SAC7BwO,EAAUp0C,IAAOsC,EAAiBwlB,EAAK9nB,GAAIoB,EAC5C,CAGD,IAAKpB,EAAImH,EAAO5G,EAAO4G,EAAQ+C,EAAOlK,EAAIO,IAAQP,EAChD8J,EAAKO,QAAQrK,GAAKo0C,EAAOp0C,EAE5B,CACF,CAKDq0C,YAAAA,GACE,OAAO1uC,EAAUgX,KAAKpb,QAAQioB,SAAW,GAC1C,CAKD8qB,iBAAAA,GACE,OAAO3uC,EAAUgX,KAAKpb,QAAQoyC,cAC/B,CAMDY,mBAAAA,GACE,IAAI9uC,EAAM3B,EACN4B,GAAO5B,EAEX,IAAK,IAAI9D,EAAI,EAAGA,EAAI2c,KAAKoD,MAAM+H,KAAKtG,SAASrhB,SAAUH,EACrD,GAAI2c,KAAKoD,MAAMy0B,iBAAiBx0C,IAAM2c,KAAKoD,MAAM8nB,eAAe7nC,GAAG1B,OAASqe,KAAKgpB,MAAO,CACtF,MAAMtB,EAAa1nB,KAAKoD,MAAM8nB,eAAe7nC,GAAGqkC,WAC1C7a,EAAW6a,EAAWgQ,eACtBV,EAAgBtP,EAAWiQ,oBAEjC7uC,EAAM5B,KAAK4B,IAAIA,EAAK+jB,GACpB9jB,EAAM7B,KAAK6B,IAAIA,EAAK8jB,EAAWmqB,EAChC,CAGH,MAAO,CACLnqB,SAAU/jB,EACVkuC,cAAejuC,EAAMD,EAExB,CAKDy7B,MAAAA,CAAOxe,GACL,MAAM3C,EAAQpD,KAAKoD,OACb,UAACqrB,GAAarrB,EACdjW,EAAO6S,KAAK4nB,YACZkQ,EAAO3qC,EAAKge,KACZ8rB,EAAUj3B,KAAK+3B,oBAAsB/3B,KAAKg4B,aAAaF,GAAQ93B,KAAKpb,QAAQqyC,QAC5EgB,EAAU/wC,KAAK6B,KAAK7B,KAAK4B,IAAI2lC,EAAUzkB,MAAOykB,EAAUtiB,QAAU8qB,GAAW,EAAG,GAChFF,EAAS7vC,KAAK4B,K1B9HKtH,E0B8HYwe,KAAKpb,QAAQmyC,O1B9HDr0C,E0B8HSu1C,E1B7H3C,kBAAVz2C,GAAsBA,EAAMmB,SAAS,KAC1CC,WAAWpB,GAAS,KACjBA,EAAQkB,G0B2HyD,G1B9H5CF,IAAChB,EAAwBkB,E0B+HjD,MAAMw1C,EAAcl4B,KAAKm4B,eAAen4B,KAAKhc,QAKvC,cAACgzC,EAAa,SAAEnqB,GAAY7M,KAAK43B,uBACjC,OAACQ,EAAM,OAAEC,EAAM,QAAEtd,EAAO,QAAEC,GAjNpC,SAA2BnO,EAAUmqB,EAAeD,GAClD,IAAIqB,EAAS,EACTC,EAAS,EACTtd,EAAU,EACVC,EAAU,EAEd,GAAIgc,EAAgB7vC,EAAK,CACvB,MAAMmxC,EAAazrB,EACb0rB,EAAWD,EAAatB,EACxBwB,EAAStxC,KAAK6I,IAAIuoC,GAClBG,EAASvxC,KAAK4H,IAAIwpC,GAClBI,EAAOxxC,KAAK6I,IAAIwoC,GAChBI,EAAOzxC,KAAK4H,IAAIypC,GAChBK,EAAUA,CAAC7uC,EAAOnD,EAAGC,IAAM0D,EAAcR,EAAOuuC,EAAYC,GAAU,GAAQ,EAAIrxC,KAAK6B,IAAInC,EAAGA,EAAImwC,EAAQlwC,EAAGA,EAAIkwC,GACjH8B,EAAUA,CAAC9uC,EAAOnD,EAAGC,IAAM0D,EAAcR,EAAOuuC,EAAYC,GAAU,IAAS,EAAIrxC,KAAK4B,IAAIlC,EAAGA,EAAImwC,EAAQlwC,EAAGA,EAAIkwC,GAClH+B,EAAOF,EAAQ,EAAGJ,EAAQE,GAC1BK,EAAOH,EAAQpxC,EAASixC,EAAQE,GAChCK,EAAOH,EAAQ5xC,EAAIuxC,EAAQE,GAC3BO,EAAOJ,EAAQ5xC,EAAKO,EAASixC,EAAQE,GAC3CP,GAAUU,EAAOE,GAAQ,EACzBX,GAAUU,EAAOE,GAAQ,EACzBle,IAAY+d,EAAOE,GAAQ,EAC3Bhe,IAAY+d,EAAOE,GAAQ,CAC5B,CACD,MAAO,CAACb,SAAQC,SAAQtd,UAASC,UAClC,CAwL8Cke,CAAkBrsB,EAAUmqB,EAAeD,GAChFlnB,GAAY4e,EAAUzkB,MAAQitB,GAAWmB,EACzCvc,GAAa4S,EAAUtiB,OAAS8qB,GAAWoB,EAC3Cc,EAAYjyC,KAAK6B,IAAI7B,KAAK4B,IAAI+mB,EAAUgM,GAAa,EAAG,GACxD2b,EAAc/0C,EAAYud,KAAKpb,QAAQkoB,OAAQqsB,GAE/CC,GAAgB5B,EADFtwC,KAAK6B,IAAIyuC,EAAcT,EAAQ,IACA/2B,KAAKq5B,gCACxDr5B,KAAK+a,QAAUA,EAAUyc,EACzBx3B,KAAKgb,QAAUA,EAAUwc,EAEzBrqC,EAAKmsC,MAAQt5B,KAAKu5B,iBAElBv5B,KAAKw3B,YAAcA,EAAc4B,EAAep5B,KAAKw5B,qBAAqBx5B,KAAKhc,OAC/Egc,KAAKu3B,YAAcrwC,KAAK6B,IAAIiX,KAAKw3B,YAAc4B,EAAelB,EAAa,GAE3El4B,KAAK8wB,eAAegH,EAAM,EAAGA,EAAKt0C,OAAQuiB,EAC3C,CAKD0zB,cAAAA,CAAep2C,EAAGgoC,GAChB,MAAMtc,EAAO/O,KAAKpb,QACZuI,EAAO6S,KAAK4nB,YACZoP,EAAgBh3B,KAAK23B,oBAC3B,OAAItM,GAAUtc,EAAKrK,UAAUmyB,gBAAmB72B,KAAKoD,MAAMwyB,kBAAkBvyC,IAA0B,OAApB8J,EAAKO,QAAQrK,IAAe8J,EAAKge,KAAK9nB,GAAGsqC,OACnH,EAEF3tB,KAAK05B,uBAAuBvsC,EAAKO,QAAQrK,GAAK2zC,EAAgB7vC,EACtE,CAED2pC,cAAAA,CAAegH,EAAMttC,EAAO+C,EAAOwY,GACjC,MAAMslB,EAAiB,UAATtlB,EACR3C,EAAQpD,KAAKoD,MACbqrB,EAAYrrB,EAAMqrB,UAElBkL,EADOv2B,EAAMxe,QACQ8f,UACrBk1B,GAAWnL,EAAU1lB,KAAO0lB,EAAU5lB,OAAS,EAC/CgxB,GAAWpL,EAAU7lB,IAAM6lB,EAAU3lB,QAAU,EAC/CguB,EAAezL,GAASsO,EAAc7C,aACtCS,EAAcT,EAAe,EAAI92B,KAAKu3B,YACtCC,EAAcV,EAAe,EAAI92B,KAAKw3B,aACtC,cAAC7H,EAAa,eAAED,GAAkB1vB,KAAK6vB,kBAAkBrlC,EAAOub,GACtE,IACI1iB,EADAi1C,EAAat4B,KAAK03B,eAGtB,IAAKr0C,EAAI,EAAGA,EAAImH,IAASnH,EACvBi1C,GAAct4B,KAAKy5B,eAAep2C,EAAGgoC,GAGvC,IAAKhoC,EAAImH,EAAOnH,EAAImH,EAAQ+C,IAASlK,EAAG,CACtC,MAAM2zC,EAAgBh3B,KAAKy5B,eAAep2C,EAAGgoC,GACvCje,EAAM0qB,EAAKz0C,GACX8kB,EAAa,CACjB3iB,EAAGo0C,EAAU55B,KAAK+a,QAClBr1B,EAAGm0C,EAAU75B,KAAKgb,QAClBsd,aACAC,SAAUD,EAAatB,EACvBA,gBACAQ,cACAD,eAEE7H,IACFvnB,EAAWvjB,QAAU+qC,GAAiB3vB,KAAK2uB,0BAA0BtrC,EAAG+pB,EAAIhF,OAAS,SAAWrC,IAElGuyB,GAActB,EAEdh3B,KAAKiwB,cAAc7iB,EAAK/pB,EAAG8kB,EAAYpC,EACxC,CACF,CAEDwzB,cAAAA,GACE,MAAMpsC,EAAO6S,KAAK4nB,YACZkS,EAAW3sC,EAAKge,KACtB,IACI9nB,EADAi2C,EAAQ,EAGZ,IAAKj2C,EAAI,EAAGA,EAAIy2C,EAASt2C,OAAQH,IAAK,CACpC,MAAM7B,EAAQ2L,EAAKO,QAAQrK,GACb,OAAV7B,GAAmBkH,MAAMlH,KAAUwe,KAAKoD,MAAMwyB,kBAAkBvyC,IAAOy2C,EAASz2C,GAAGsqC,SACrF2L,GAASpyC,KAAKa,IAAIvG,GAErB,CAED,OAAO83C,CACR,CAEDI,sBAAAA,CAAuBl4C,GACrB,MAAM83C,EAAQt5B,KAAK4nB,YAAY0R,MAC/B,OAAIA,EAAQ,IAAM5wC,MAAMlH,GACf2F,GAAOD,KAAKa,IAAIvG,GAAS83C,GAE3B,CACR,CAEDpL,gBAAAA,CAAiBlqC,GACf,MAAMmJ,EAAO6S,KAAK4nB,YACZxkB,EAAQpD,KAAKoD,MACbypB,EAASzpB,EAAM+H,KAAK0hB,QAAU,GAC9BrrC,EAAQ2gB,GAAahV,EAAKO,QAAQ1J,GAAQof,EAAMxe,QAAQyd,QAE9D,MAAO,CACL8rB,MAAOtB,EAAO7oC,IAAU,GACxBxC,QAEH,CAEDu2C,iBAAAA,CAAkBD,GAChB,IAAI/uC,EAAM,EACV,MAAMqa,EAAQpD,KAAKoD,MACnB,IAAI/f,EAAGO,EAAMuJ,EAAMu6B,EAAY9iC,EAE/B,IAAKkzC,EAEH,IAAKz0C,EAAI,EAAGO,EAAOwf,EAAM+H,KAAKtG,SAASrhB,OAAQH,EAAIO,IAAQP,EACzD,GAAI+f,EAAMy0B,iBAAiBx0C,GAAI,CAC7B8J,EAAOiW,EAAM8nB,eAAe7nC,GAC5By0C,EAAO3qC,EAAKge,KACZuc,EAAav6B,EAAKu6B,WAClB,KACD,CAIL,IAAKoQ,EACH,OAAO,EAGT,IAAKz0C,EAAI,EAAGO,EAAOk0C,EAAKt0C,OAAQH,EAAIO,IAAQP,EAC1CuB,EAAU8iC,EAAWiH,0BAA0BtrC,GACnB,UAAxBuB,EAAQm1C,cACVhxC,EAAM7B,KAAK6B,IAAIA,EAAKnE,EAAQ+oB,aAAe,EAAG/oB,EAAQo1C,kBAAoB,IAG9E,OAAOjxC,CACR,CAEDivC,YAAAA,CAAaF,GACX,IAAI/uC,EAAM,EAEV,IAAK,IAAI1F,EAAI,EAAGO,EAAOk0C,EAAKt0C,OAAQH,EAAIO,IAAQP,EAAG,CACjD,MAAMuB,EAAUob,KAAK2uB,0BAA0BtrC,GAC/C0F,EAAM7B,KAAK6B,IAAIA,EAAKnE,EAAQqkB,QAAU,EAAGrkB,EAAQq1C,aAAe,EACjE,CACD,OAAOlxC,CACR,CAMDywC,oBAAAA,CAAqBz1C,GACnB,IAAIm2C,EAAmB,EAEvB,IAAK,IAAI72C,EAAI,EAAGA,EAAIU,IAAgBV,EAC9B2c,KAAKoD,MAAMy0B,iBAAiBx0C,KAC9B62C,GAAoBl6B,KAAKm4B,eAAe90C,IAI5C,OAAO62C,CACR,CAKD/B,cAAAA,CAAep0C,GACb,OAAOmD,KAAK6B,IAAIxG,EAAeyd,KAAKoD,MAAM+H,KAAKtG,SAAS9gB,GAAcyc,OAAQ,GAAI,EACnF,CAMD64B,6BAAAA,GACE,OAAOr5B,KAAKw5B,qBAAqBx5B,KAAKoD,MAAM+H,KAAKtG,SAASrhB,SAAW,CACtE,ECrYY,MAAM22C,WAAuBvR,GAE1CC,UAAY,OAKZA,gBAAkB,CAChBc,mBAAoB,OACpBC,gBAAiB,QAEjBljB,UAAU,EACViS,UAAU,GAMZkQ,iBAAmB,CACjBpiB,OAAQ,CACNstB,QAAS,CACPpyC,KAAM,YAERqyC,QAAS,CACPryC,KAAM,YAKZkoC,UAAAA,GACE7pB,KAAKupB,qBAAsB,EAC3BvpB,KAAKwpB,oBAAqB,EAC1B2K,MAAMtK,YACP,CAEDtF,MAAAA,CAAOxe,GACL,MAAM5Y,EAAO6S,KAAK4nB,aACXuC,QAAShb,EAAMhE,KAAM/d,EAAS,GAAE,SAAEgtC,GAAYjtC,EAE/CE,EAAqB2S,KAAKoD,MAAMwsB,oBACtC,IAAI,MAACplC,EAAK,MAAE+C,GAASL,GAAiCC,EAAMC,EAAQC,GAEpE2S,KAAKqpB,WAAa7+B,EAClBwV,KAAKspB,WAAa/7B,EAEdS,GAAoBb,KACtB3C,EAAQ,EACR+C,EAAQH,EAAO5J,QAIjB2rB,EAAK6Q,OAAShgB,KAAKoD,MACnB+L,EAAKgR,cAAgBngB,KAAKhc,MAC1BmrB,EAAKkrB,aAAeD,EAASC,WAC7BlrB,EAAK/hB,OAASA,EAEd,MAAMxI,EAAUob,KAAK0uB,6BAA6B3oB,GAC7C/F,KAAKpb,QAAQ8hB,WAChB9hB,EAAQ+oB,YAAc,GAExB/oB,EAAQq6B,QAAUjf,KAAKpb,QAAQq6B,QAC/Bjf,KAAKiwB,cAAc9gB,OAAMvc,EAAW,CAClC0nC,UAAWjtC,EACXzI,WACCmhB,GAGH/F,KAAK8wB,eAAe1jC,EAAQ5C,EAAO+C,EAAOwY,EAC3C,CAED+qB,cAAAA,CAAe1jC,EAAQ5C,EAAO+C,EAAOwY,GACnC,MAAMslB,EAAiB,UAATtlB,GACR,OAACtY,EAAM,OAAE65B,EAAM,SAAEyC,EAAQ,SAAEqQ,GAAYp6B,KAAK4nB,aAC5C,cAAC+H,EAAa,eAAED,GAAkB1vB,KAAK6vB,kBAAkBrlC,EAAOub,GAChE+hB,EAAQr6B,EAAOE,KACfo6B,EAAQT,EAAO35B,MACf,SAACgrB,EAAQ,QAAEsG,GAAWjf,KAAKpb,QAC3B21C,EAAe/xC,EAASmwB,GAAYA,EAAWx2B,OAAOmF,kBACtDkzC,EAAex6B,KAAKoD,MAAMwsB,qBAAuBvE,GAAkB,SAATtlB,EAC1Dtb,EAAMD,EAAQ+C,EACdktC,EAAcrtC,EAAO5J,OAC3B,IAAIk3C,EAAalwC,EAAQ,GAAKwV,KAAKktB,UAAU1iC,EAAQ,GAErD,IAAK,IAAInH,EAAI,EAAGA,EAAIo3C,IAAep3C,EAAG,CACpC,MAAMyqB,EAAQ1gB,EAAO/J,GACf8kB,EAAaqyB,EAAe1sB,EAAQ,CAAC,EAE3C,GAAIzqB,EAAImH,GAASnH,GAAKoH,EAAK,CACzB0d,EAAWsO,MAAO,EAClB,QACD,CAED,MAAMkR,EAAS3nB,KAAKktB,UAAU7pC,GACxBs3C,EAAWp5C,EAAcomC,EAAOI,IAChC3P,EAASjQ,EAAW2f,GAASr6B,EAAOM,iBAAiB45B,EAAOG,GAAQzkC,GACpEg1B,EAASlQ,EAAW4f,GAASsD,GAASsP,EAAWrT,EAAO+M,eAAiB/M,EAAOv5B,iBAAiBg8B,EAAW/pB,KAAKymB,WAAWa,EAAQK,EAAQoC,GAAYpC,EAAOI,GAAQ1kC,GAE7K8kB,EAAWsO,KAAO/tB,MAAM0vB,IAAW1vB,MAAM2vB,IAAWsiB,EACpDxyB,EAAW+a,KAAO7/B,EAAI,GAAM6D,KAAKa,IAAI4/B,EAAOG,GAAS4S,EAAW5S,IAAWyS,EACvEtb,IACF9W,EAAWwf,OAASA,EACpBxf,EAAW0mB,IAAMuL,EAASjvB,KAAK9nB,IAG7BqsC,IACFvnB,EAAWvjB,QAAU+qC,GAAiB3vB,KAAK2uB,0BAA0BtrC,EAAGyqB,EAAM1F,OAAS,SAAWrC,IAG/Fy0B,GACHx6B,KAAKiwB,cAAcniB,EAAOzqB,EAAG8kB,EAAYpC,GAG3C20B,EAAa/S,CACd,CACF,CAKDsG,cAAAA,GACE,MAAM9gC,EAAO6S,KAAK4nB,YACZuC,EAAUh9B,EAAKg9B,QACftgB,EAASsgB,EAAQvlC,SAAWulC,EAAQvlC,QAAQ+oB,aAAe,EAC3DxC,EAAOhe,EAAKge,MAAQ,GAC1B,IAAKA,EAAK3nB,OACR,OAAOqmB,EAET,MAAM+M,EAAazL,EAAK,GAAGrkB,KAAKkZ,KAAK2uB,0BAA0B,IACzDiM,EAAYzvB,EAAKA,EAAK3nB,OAAS,GAAGsD,KAAKkZ,KAAK2uB,0BAA0BxjB,EAAK3nB,OAAS,IAC1F,OAAO0D,KAAK6B,IAAI8gB,EAAQ+M,EAAYgkB,GAAa,CAClD,CAEDzY,IAAAA,GACE,MAAMh1B,EAAO6S,KAAK4nB,YAClBz6B,EAAKg9B,QAAQ0Q,oBAAoB76B,KAAKoD,MAAMqrB,UAAWthC,EAAKM,OAAOE,MACnEwmC,MAAMhS,MACP,EC1IY,MAAM2Y,WAAsBlE,GAEzC/N,UAAY,MAKZA,gBAAkB,CAEhBkO,OAAQ,EAGRlqB,SAAU,EAGVmqB,cAAe,IAGflqB,OAAQ,QChBG,MAAMiuB,WAA0BnS,GAE7CC,UAAY,UAKZA,gBAAkB,CAChBc,oBAAoB,EACpBC,gBAAiB,QACjBljB,UAAU,EACVgH,MAAM,GAMRmb,iBAAmB,CAEjB/iB,YAAa,CACXC,KAAM,SAGRU,OAAQ,CACNjhB,EAAG,CACD7D,KAAM,UAER+D,EAAG,CACD/D,KAAM,YAQZusC,gBAAAA,CAAiBlqC,GACf,MAAMmJ,EAAO6S,KAAK4nB,YACZiF,EAAS7sB,KAAKoD,MAAM+H,KAAK0hB,QAAU,IACnC,OAAC5+B,EAAM,OAAEC,GAAUf,EACnBw6B,EAAS3nB,KAAKktB,UAAUlpC,GACxBwB,EAAIyI,EAAOmgC,iBAAiBzG,EAAOniC,GACnCE,EAAIwI,EAAOkgC,iBAAiBzG,EAAOjiC,GAEzC,MAAO,CACLyoC,MAAOtB,EAAO7oC,IAAU,GACxBxC,MAAO,IAAMgE,EAAI,KAAOE,EAAI,IAE/B,CAED6+B,MAAAA,CAAOxe,GACL,MAAM5Y,EAAO6S,KAAK4nB,aACXzc,KAAM/d,EAAS,IAAMD,EAEtBE,EAAqB2S,KAAKoD,MAAMwsB,oBACtC,IAAI,MAACplC,EAAK,MAAE+C,GAASL,GAAiCC,EAAMC,EAAQC,GAUpE,GARA2S,KAAKqpB,WAAa7+B,EAClBwV,KAAKspB,WAAa/7B,EAEdS,GAAoBb,KACtB3C,EAAQ,EACR+C,EAAQH,EAAO5J,QAGbwc,KAAKpb,QAAQ8hB,SAAU,CAEzB,MAAOyjB,QAAShb,EAAI,SAAEirB,GAAYjtC,EAGlCgiB,EAAK6Q,OAAShgB,KAAKoD,MACnB+L,EAAKgR,cAAgBngB,KAAKhc,MAC1BmrB,EAAKkrB,aAAeD,EAASC,WAC7BlrB,EAAK/hB,OAASA,EAEd,MAAMxI,EAAUob,KAAK0uB,6BAA6B3oB,GAClDnhB,EAAQq6B,QAAUjf,KAAKpb,QAAQq6B,QAC/Bjf,KAAKiwB,cAAc9gB,OAAMvc,EAAW,CAClC0nC,UAAWjtC,EACXzI,WACCmhB,EACJ,CAGD/F,KAAK8wB,eAAe1jC,EAAQ5C,EAAO+C,EAAOwY,EAC3C,CAEDikB,WAAAA,GACE,MAAM,SAACtjB,GAAY1G,KAAKpb,SAEnBob,KAAK2pB,oBAAsBjjB,IAC9B1G,KAAK2pB,mBAAqB3pB,KAAKoD,MAAM43B,SAASC,WAAW,SAG3D9G,MAAMnK,aACP,CAED8G,cAAAA,CAAe1jC,EAAQ5C,EAAO+C,EAAOwY,GACnC,MAAMslB,EAAiB,UAATtlB,GACR,OAACtY,EAAM,OAAE65B,EAAM,SAAEyC,EAAQ,SAAEqQ,GAAYp6B,KAAK4nB,YAC5CkI,EAAY9vB,KAAK2uB,0BAA0BnkC,EAAOub,GAClD4pB,EAAgB3vB,KAAKyvB,iBAAiBK,GACtCJ,EAAiB1vB,KAAK0vB,eAAe3pB,EAAM4pB,GAC3C7H,EAAQr6B,EAAOE,KACfo6B,EAAQT,EAAO35B,MACf,SAACgrB,EAAQ,QAAEsG,GAAWjf,KAAKpb,QAC3B21C,EAAe/xC,EAASmwB,GAAYA,EAAWx2B,OAAOmF,kBACtDkzC,EAAex6B,KAAKoD,MAAMwsB,qBAAuBvE,GAAkB,SAATtlB,EAChE,IAAI20B,EAAalwC,EAAQ,GAAKwV,KAAKktB,UAAU1iC,EAAQ,GAErD,IAAK,IAAInH,EAAImH,EAAOnH,EAAImH,EAAQ+C,IAASlK,EAAG,CAC1C,MAAMyqB,EAAQ1gB,EAAO/J,GACfskC,EAAS3nB,KAAKktB,UAAU7pC,GACxB8kB,EAAaqyB,EAAe1sB,EAAQ,CAAC,EACrC6sB,EAAWp5C,EAAcomC,EAAOI,IAChC3P,EAASjQ,EAAW2f,GAASr6B,EAAOM,iBAAiB45B,EAAOG,GAAQzkC,GACpEg1B,EAASlQ,EAAW4f,GAASsD,GAASsP,EAAWrT,EAAO+M,eAAiB/M,EAAOv5B,iBAAiBg8B,EAAW/pB,KAAKymB,WAAWa,EAAQK,EAAQoC,GAAYpC,EAAOI,GAAQ1kC,GAE7K8kB,EAAWsO,KAAO/tB,MAAM0vB,IAAW1vB,MAAM2vB,IAAWsiB,EACpDxyB,EAAW+a,KAAO7/B,EAAI,GAAM6D,KAAKa,IAAI4/B,EAAOG,GAAS4S,EAAW5S,IAAWyS,EACvEtb,IACF9W,EAAWwf,OAASA,EACpBxf,EAAW0mB,IAAMuL,EAASjvB,KAAK9nB,IAG7BqsC,IACFvnB,EAAWvjB,QAAU+qC,GAAiB3vB,KAAK2uB,0BAA0BtrC,EAAGyqB,EAAM1F,OAAS,SAAWrC,IAG/Fy0B,GACHx6B,KAAKiwB,cAAcniB,EAAOzqB,EAAG8kB,EAAYpC,GAG3C20B,EAAa/S,CACd,CAED3nB,KAAKgwB,oBAAoBL,EAAe5pB,EAAM+pB,EAC/C,CAKD7B,cAAAA,GACE,MAAM9gC,EAAO6S,KAAK4nB,YACZzc,EAAOhe,EAAKge,MAAQ,GAE1B,IAAKnL,KAAKpb,QAAQ8hB,SAAU,CAC1B,IAAI3d,EAAM,EACV,IAAK,IAAI1F,EAAI8nB,EAAK3nB,OAAS,EAAGH,GAAK,IAAKA,EACtC0F,EAAM7B,KAAK6B,IAAIA,EAAKoiB,EAAK9nB,GAAGyD,KAAKkZ,KAAK2uB,0BAA0BtrC,IAAM,GAExE,OAAO0F,EAAM,GAAKA,CACnB,CAED,MAAMohC,EAAUh9B,EAAKg9B,QACftgB,EAASsgB,EAAQvlC,SAAWulC,EAAQvlC,QAAQ+oB,aAAe,EAEjE,IAAKxC,EAAK3nB,OACR,OAAOqmB,EAGT,MAAM+M,EAAazL,EAAK,GAAGrkB,KAAKkZ,KAAK2uB,0BAA0B,IACzDiM,EAAYzvB,EAAKA,EAAK3nB,OAAS,GAAGsD,KAAKkZ,KAAK2uB,0BAA0BxjB,EAAK3nB,OAAS,IAC1F,OAAO0D,KAAK6B,IAAI8gB,EAAQ+M,EAAYgkB,GAAa,CAClD,ECzGH,SAASM,KACP,MAAM,IAAIlmB,MAAM,kFACjB,CAQD,MAAMmmB,GAYJ,eAAOt0B,CACLu0B,GAEAx5C,OAAO8M,OAAOysC,GAAgBt5C,UAAWu5C,EAC1C,CAIDv7B,WAAAA,CAAYjb,GACVob,KAAKpb,QAAUA,GAAW,CAAC,CAC5B,CAGDy2C,IAAAA,GAAQ,CAERC,OAAAA,GACE,OAAOJ,IACR,CAED3O,KAAAA,GACE,OAAO2O,IACR,CAEDp4B,MAAAA,GACE,OAAOo4B,IACR,CAED1uC,GAAAA,GACE,OAAO0uC,IACR,CAEDK,IAAAA,GACE,OAAOL,IACR,CAEDM,OAAAA,GACE,OAAON,IACR,CAEDO,KAAAA,GACE,OAAOP,IACR,EAGH,OACSC,GC9GT,SAASO,GAAaC,EAAShuC,EAAMnM,EAAOwkB,GAC1C,MAAM,WAAC0hB,EAAU,KAAEvc,EAAI,QAAE3d,GAAWmuC,EAC9BluC,EAASi6B,EAAWE,YAAYn6B,OACtC,GAAIA,GAAUE,IAASF,EAAOE,MAAiB,MAATA,GAAgBH,GAAW2d,EAAK3nB,OAAQ,CAC5E,MAAMo4C,EAAenuC,EAAOouC,eAAiBlwC,EAAgBH,EAC7D,IAAKwa,EACH,OAAO41B,EAAazwB,EAAMxd,EAAMnM,GAC3B,GAAIkmC,EAAW0B,eAAgB,CAIpC,MAAMjM,EAAKhS,EAAK,GACVljB,EAA+B,oBAAhBk1B,EAAG2e,UAA2B3e,EAAG2e,SAASnuC,GAC/D,GAAI1F,EAAO,CACT,MAAMuC,EAAQoxC,EAAazwB,EAAMxd,EAAMnM,EAAQyG,GACzCwC,EAAMmxC,EAAazwB,EAAMxd,EAAMnM,EAAQyG,GAC7C,MAAO,CAACsD,GAAIf,EAAMe,GAAID,GAAIb,EAAIa,GAC/B,CACF,CACF,CAED,MAAO,CAACC,GAAI,EAAGD,GAAI6f,EAAK3nB,OAAS,EAClC,CAUD,SAASu4C,GAAyB34B,EAAOzV,EAAMquC,EAAUC,EAASj2B,GAChE,MAAMugB,EAAWnjB,EAAM84B,+BACjB16C,EAAQw6C,EAASruC,GACvB,IAAK,IAAItK,EAAI,EAAGO,EAAO2iC,EAAS/iC,OAAQH,EAAIO,IAAQP,EAAG,CACrD,MAAM,MAACW,EAAK,KAAEmnB,GAAQob,EAASljC,IACzB,GAACkI,EAAE,GAAED,GAAMowC,GAAanV,EAASljC,GAAIsK,EAAMnM,EAAOwkB,GACxD,IAAK,IAAIrH,EAAIpT,EAAIoT,GAAKrT,IAAMqT,EAAG,CAC7B,MAAMmb,EAAU3O,EAAKxM,GAChBmb,EAAQrD,MACXwlB,EAAQniB,EAAS91B,EAAO2a,EAE3B,CACF,CACF,CA2BD,SAASw9B,GAAkB/4B,EAAO44B,EAAUruC,EAAMyuC,EAAkBn2B,GAClE,MAAM5Z,EAAQ,GAEd,IAAK4Z,IAAqB7C,EAAMi5B,cAAcL,GAC5C,OAAO3vC,EAaT,OADA0vC,GAAyB34B,EAAOzV,EAAMquC,GATf,SAASliB,EAAS/1B,EAAcC,IAChDiiB,GAAqB4H,GAAeiM,EAAS1W,EAAMqrB,UAAW,KAG/D3U,EAAQwiB,QAAQN,EAASx2C,EAAGw2C,EAASt2C,EAAG02C,IAC1C/vC,EAAMnG,KAAK,CAAC4zB,UAAS/1B,eAAcC,aAIyB,GACzDqI,CACR,CAoCD,SAASkwC,GAAyBn5B,EAAO44B,EAAUruC,EAAMqY,EAAWo2B,EAAkBn2B,GACpF,IAAI5Z,EAAQ,GACZ,MAAMmwC,EA5ER,SAAkC7uC,GAChC,MAAM8uC,GAA8B,IAAvB9uC,EAAKjJ,QAAQ,KACpBg4C,GAA8B,IAAvB/uC,EAAKjJ,QAAQ,KAE1B,OAAO,SAASyF,EAAKC,GACnB,MAAMuyC,EAASF,EAAOv1C,KAAKa,IAAIoC,EAAI3E,EAAI4E,EAAI5E,GAAK,EAC1Co3C,EAASF,EAAOx1C,KAAKa,IAAIoC,EAAIzE,EAAI0E,EAAI1E,GAAK,EAChD,OAAOwB,KAAK4C,KAAK5C,KAAKmB,IAAIs0C,EAAQ,GAAKz1C,KAAKmB,IAAIu0C,EAAQ,IAE3D,CAmEwBC,CAAyBlvC,GAChD,IAAImvC,EAAc36C,OAAOmF,kBAyBzB,OADAy0C,GAAyB34B,EAAOzV,EAAMquC,GAtBtC,SAAwBliB,EAAS/1B,EAAcC,GAC7C,MAAMs4C,EAAUxiB,EAAQwiB,QAAQN,EAASx2C,EAAGw2C,EAASt2C,EAAG02C,GACxD,GAAIp2B,IAAcs2B,EAChB,OAGF,MAAMxH,EAAShb,EAAQijB,eAAeX,GAEtC,OADsBn2B,GAAoB7C,EAAMi5B,cAAcvH,MACzCwH,EACnB,OAGF,MAAMryC,EAAWuyC,EAAeR,EAAUlH,GACtC7qC,EAAW6yC,GACbzwC,EAAQ,CAAC,CAACytB,UAAS/1B,eAAcC,UACjC84C,EAAc7yC,GACLA,IAAa6yC,GAEtBzwC,EAAMnG,KAAK,CAAC4zB,UAAS/1B,eAAcC,SAEtC,IAGMqI,CACR,CAYD,SAAS2wC,GAAgB55B,EAAO44B,EAAUruC,EAAMqY,EAAWo2B,EAAkBn2B,GAC3E,OAAKA,GAAqB7C,EAAMi5B,cAAcL,GAI9B,MAATruC,GAAiBqY,EAEpBu2B,GAAyBn5B,EAAO44B,EAAUruC,EAAMqY,EAAWo2B,EAAkBn2B,GA1EnF,SAA+B7C,EAAO44B,EAAUruC,EAAMyuC,GACpD,IAAI/vC,EAAQ,GAYZ,OADA0vC,GAAyB34B,EAAOzV,EAAMquC,GATtC,SAAwBliB,EAAS/1B,EAAcC,GAC7C,MAAM,WAACs0C,EAAU,SAAEC,GAAYze,EAAQmjB,SAAS,CAAC,aAAc,YAAab,IACtE,MAACryC,GAASP,EAAkBswB,EAAS,CAACt0B,EAAGw2C,EAASx2C,EAAGE,EAAGs2C,EAASt2C,IAEnE6E,EAAcR,EAAOuuC,EAAYC,IACnClsC,EAAMnG,KAAK,CAAC4zB,UAAS/1B,eAAcC,SAEtC,IAGMqI,CACR,CA2DK6wC,CAAsB95B,EAAO44B,EAAUruC,EAAMyuC,GAJxC,EAMV,CAWD,SAASe,GAAa/5B,EAAO44B,EAAUruC,EAAMqY,EAAWo2B,GACtD,MAAM/vC,EAAQ,GACR+wC,EAAuB,MAATzvC,EAAe,WAAa,WAChD,IAAI0vC,GAAiB,EAWrB,OATAtB,GAAyB34B,EAAOzV,EAAMquC,GAAU,CAACliB,EAAS/1B,EAAcC,KAClE81B,EAAQsjB,GAAapB,EAASruC,GAAOyuC,KACvC/vC,EAAMnG,KAAK,CAAC4zB,UAAS/1B,eAAcC,UACnCq5C,EAAiBA,GAAkBvjB,EAAQwiB,QAAQN,EAASx2C,EAAGw2C,EAASt2C,EAAG02C,GAC5E,IAKCp2B,IAAcq3B,EACT,GAEFhxC,CACR,CAMD,OAAe,CAEb0vC,4BAGAuB,MAAO,CAYLt5C,KAAAA,CAAMof,EAAO9Z,EAAG1E,EAASw3C,GACvB,MAAMJ,EAAWzhB,GAAoBjxB,EAAG8Z,GAElCzV,EAAO/I,EAAQ+I,MAAQ,IACvBsY,EAAmBrhB,EAAQqhB,mBAAoB,EAC/C5Z,EAAQzH,EAAQohB,UAClBm2B,GAAkB/4B,EAAO44B,EAAUruC,EAAMyuC,EAAkBn2B,GAC3D+2B,GAAgB55B,EAAO44B,EAAUruC,GAAM,EAAOyuC,EAAkBn2B,GAC9Df,EAAW,GAEjB,OAAK7Y,EAAM7I,QAIX4f,EAAM84B,+BAA+B/vC,SAASgB,IAC5C,MAAMnJ,EAAQqI,EAAM,GAAGrI,MACjB81B,EAAU3sB,EAAKge,KAAKnnB,GAGtB81B,IAAYA,EAAQrD,MACtBvR,EAAShf,KAAK,CAAC4zB,UAAS/1B,aAAcoJ,EAAKnJ,MAAOA,SACnD,IAGIkhB,GAbE,EAcV,EAYDilB,OAAAA,CAAQ/mB,EAAO9Z,EAAG1E,EAASw3C,GACzB,MAAMJ,EAAWzhB,GAAoBjxB,EAAG8Z,GAClCzV,EAAO/I,EAAQ+I,MAAQ,KACvBsY,EAAmBrhB,EAAQqhB,mBAAoB,EACrD,IAAI5Z,EAAQzH,EAAQohB,UAChBm2B,GAAkB/4B,EAAO44B,EAAUruC,EAAMyuC,EAAkBn2B,GAC7D+2B,GAAgB55B,EAAO44B,EAAUruC,GAAM,EAAOyuC,EAAkBn2B,GAElE,GAAI5Z,EAAM7I,OAAS,EAAG,CACpB,MAAMO,EAAesI,EAAM,GAAGtI,aACxBonB,EAAO/H,EAAM8nB,eAAennC,GAAconB,KAChD9e,EAAQ,GACR,IAAK,IAAIhJ,EAAI,EAAGA,EAAI8nB,EAAK3nB,SAAUH,EACjCgJ,EAAMnG,KAAK,CAAC4zB,QAAS3O,EAAK9nB,GAAIU,eAAcC,MAAOX,GAEtD,CAED,OAAOgJ,CACR,EAYDyhB,MAAKA,CAAC1K,EAAO9Z,EAAG1E,EAASw3C,IAIhBD,GAAkB/4B,EAHRmX,GAAoBjxB,EAAG8Z,GAC3Bxe,EAAQ+I,MAAQ,KAEmByuC,EADvBx3C,EAAQqhB,mBAAoB,GAavDs3B,OAAAA,CAAQn6B,EAAO9Z,EAAG1E,EAASw3C,GACzB,MAAMJ,EAAWzhB,GAAoBjxB,EAAG8Z,GAClCzV,EAAO/I,EAAQ+I,MAAQ,KACvBsY,EAAmBrhB,EAAQqhB,mBAAoB,EACrD,OAAO+2B,GAAgB55B,EAAO44B,EAAUruC,EAAM/I,EAAQohB,UAAWo2B,EAAkBn2B,EACpF,EAWDzgB,EAACA,CAAC4d,EAAO9Z,EAAG1E,EAASw3C,IAEZe,GAAa/5B,EADHmX,GAAoBjxB,EAAG8Z,GACH,IAAKxe,EAAQohB,UAAWo2B,GAY/D12C,EAACA,CAAC0d,EAAO9Z,EAAG1E,EAASw3C,IAEZe,GAAa/5B,EADHmX,GAAoBjxB,EAAG8Z,GACH,IAAKxe,EAAQohB,UAAWo2B,KCpWnE,MAAMoB,GAAmB,CAAC,OAAQ,MAAO,QAAS,UAElD,SAASC,GAAiB70C,EAAOozC,GAC/B,OAAOpzC,EAAM0sB,QAAO/vB,GAAKA,EAAE+0B,MAAQ0hB,GACpC,CAED,SAAS0B,GAA4B90C,EAAO+E,GAC1C,OAAO/E,EAAM0sB,QAAO/vB,IAA0C,IAArCi4C,GAAiB94C,QAAQa,EAAE+0B,MAAe/0B,EAAEs1B,IAAIltB,OAASA,GACnF,CAED,SAASgwC,GAAa/0C,EAAOxF,GAC3B,OAAOwF,EAAMkpC,MAAK,CAAClrC,EAAGC,KACpB,MAAMhD,EAAKT,EAAUyD,EAAID,EACnB9C,EAAKV,EAAUwD,EAAIC,EACzB,OAAOhD,EAAG2c,SAAW1c,EAAG0c,OACtB3c,EAAGG,MAAQF,EAAGE,MACdH,EAAG2c,OAAS1c,EAAG0c,MAAM,GAE1B,CAuCD,SAASo9B,GAAcC,EAASC,GAC9B,MAAM7W,EAlBR,SAAqB4W,GACnB,MAAM5W,EAAS,CAAC,EAChB,IAAK,MAAM8W,KAAQF,EAAS,CAC1B,MAAM,MAACnX,EAAK,IAAEpM,EAAG,YAAE0jB,GAAeD,EAClC,IAAKrX,IAAU8W,GAAiBx5B,SAASsW,GACvC,SAEF,MAAM1F,EAASqS,EAAOP,KAAWO,EAAOP,GAAS,CAACn5B,MAAO,EAAG0wC,OAAQ,EAAGz9B,OAAQ,EAAG1Z,KAAM,IACxF8tB,EAAOrnB,QACPqnB,EAAOpU,QAAUw9B,CAClB,CACD,OAAO/W,CACR,CAMgBiX,CAAYL,IACrB,aAACM,EAAY,cAAEC,GAAiBN,EACtC,IAAIz6C,EAAGO,EAAMy6C,EACb,IAAKh7C,EAAI,EAAGO,EAAOi6C,EAAQr6C,OAAQH,EAAIO,IAAQP,EAAG,CAChDg7C,EAASR,EAAQx6C,GACjB,MAAM,SAACi7C,GAAYD,EAAOxjB,IACpB6L,EAAQO,EAAOoX,EAAO3X,OACtBnD,EAASmD,GAAS2X,EAAOL,YAActX,EAAMlmB,OAC/C69B,EAAOnL,YACTmL,EAAOr0B,MAAQuZ,EAASA,EAAS4a,EAAeG,GAAYR,EAAOS,eACnEF,EAAOlyB,OAASiyB,IAEhBC,EAAOr0B,MAAQm0B,EACfE,EAAOlyB,OAASoX,EAASA,EAAS6a,EAAgBE,GAAYR,EAAOU,gBAExE,CACD,OAAOvX,CACR,CAsBD,SAASwX,GAAeC,EAAYjQ,EAAW7nC,EAAGC,GAChD,OAAOK,KAAK6B,IAAI21C,EAAW93C,GAAI6nC,EAAU7nC,IAAMM,KAAK6B,IAAI21C,EAAW73C,GAAI4nC,EAAU5nC,GAClF,CAED,SAAS83C,GAAiBD,EAAYE,GACpCF,EAAW91B,IAAM1hB,KAAK6B,IAAI21C,EAAW91B,IAAKg2B,EAAWh2B,KACrD81B,EAAW31B,KAAO7hB,KAAK6B,IAAI21C,EAAW31B,KAAM61B,EAAW71B,MACvD21B,EAAW51B,OAAS5hB,KAAK6B,IAAI21C,EAAW51B,OAAQ81B,EAAW91B,QAC3D41B,EAAW71B,MAAQ3hB,KAAK6B,IAAI21C,EAAW71B,MAAO+1B,EAAW/1B,MAC1D,CAED,SAASg2B,GAAWpQ,EAAWqP,EAAQO,EAAQpX,GAC7C,MAAM,IAAC3M,EAAG,IAAEO,GAAOwjB,EACbK,EAAajQ,EAAUiQ,WAG7B,IAAKz8C,EAASq4B,GAAM,CACd+jB,EAAOv3C,OAET2nC,EAAUnU,IAAQ+jB,EAAOv3C,MAE3B,MAAM4/B,EAAQO,EAAOoX,EAAO3X,QAAU,CAAC5/B,KAAM,EAAGyG,MAAO,GACvDm5B,EAAM5/B,KAAOI,KAAK6B,IAAI29B,EAAM5/B,KAAMu3C,EAAOnL,WAAarY,EAAI1O,OAAS0O,EAAI7Q,OACvEq0B,EAAOv3C,KAAO4/B,EAAM5/B,KAAO4/B,EAAMn5B,MACjCkhC,EAAUnU,IAAQ+jB,EAAOv3C,IAC1B,CAEG+zB,EAAIikB,YACNH,GAAiBD,EAAY7jB,EAAIikB,cAGnC,MAAMC,EAAW73C,KAAK6B,IAAI,EAAG+0C,EAAOkB,WAAaP,GAAeC,EAAYjQ,EAAW,OAAQ,UACzFwQ,EAAY/3C,KAAK6B,IAAI,EAAG+0C,EAAOoB,YAAcT,GAAeC,EAAYjQ,EAAW,MAAO,WAC1F0Q,EAAeJ,IAAatQ,EAAUx7B,EACtCmsC,EAAgBH,IAAcxQ,EAAUp9B,EAK9C,OAJAo9B,EAAUx7B,EAAI8rC,EACdtQ,EAAUp9B,EAAI4tC,EAGPZ,EAAOnL,WACV,CAACmM,KAAMF,EAAcG,MAAOF,GAC5B,CAACC,KAAMD,EAAeE,MAAOH,EAClC,CAgBD,SAASI,GAAWrM,EAAYzE,GAC9B,MAAMiQ,EAAajQ,EAAUiQ,WAE7B,SAASc,EAAmBvlB,GAC1B,MAAMjM,EAAS,CAACjF,KAAM,EAAGH,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAInD,OAHAmR,EAAU9tB,SAASmuB,IACjBtM,EAAOsM,GAAOpzB,KAAK6B,IAAI0lC,EAAUnU,GAAMokB,EAAWpkB,GAAK,IAElDtM,CACR,CAED,OACIwxB,EADGtM,EACgB,CAAC,OAAQ,SACT,CAAC,MAAO,UAChC,CAED,SAASuM,GAASC,EAAOjR,EAAWqP,EAAQ7W,GAC1C,MAAM0Y,EAAa,GACnB,IAAIt8C,EAAGO,EAAMy6C,EAAQxjB,EAAK+kB,EAAOnxC,EAEjC,IAAKpL,EAAI,EAAGO,EAAO87C,EAAMl8C,OAAQo8C,EAAQ,EAAGv8C,EAAIO,IAAQP,EAAG,CACzDg7C,EAASqB,EAAMr8C,GACfw3B,EAAMwjB,EAAOxjB,IAEbA,EAAI0J,OACF8Z,EAAOr0B,OAASykB,EAAUx7B,EAC1BorC,EAAOlyB,QAAUsiB,EAAUp9B,EAC3BkuC,GAAWlB,EAAOnL,WAAYzE,IAEhC,MAAM,KAAC4Q,EAAI,MAAEC,GAAST,GAAWpQ,EAAWqP,EAAQO,EAAQpX,GAI5D2Y,GAASP,GAAQM,EAAWn8C,OAG5BiL,EAAUA,GAAW6wC,EAEhBzkB,EAAIyjB,UACPqB,EAAWz5C,KAAKm4C,EAEnB,CAED,OAAOuB,GAASH,GAASE,EAAYlR,EAAWqP,EAAQ7W,IAAWx4B,CACpE,CAED,SAASoxC,GAAWhlB,EAAK9R,EAAMH,EAAKoB,EAAOmC,GACzC0O,EAAIjS,IAAMA,EACViS,EAAI9R,KAAOA,EACX8R,EAAIhS,MAAQE,EAAOiB,EACnB6Q,EAAI/R,OAASF,EAAMuD,EACnB0O,EAAI7Q,MAAQA,EACZ6Q,EAAI1O,OAASA,CACd,CAED,SAAS2zB,GAAWJ,EAAOjR,EAAWqP,EAAQ7W,GAC5C,MAAM8Y,EAAcjC,EAAOn1B,QAC3B,IAAI,EAACnjB,EAAC,EAAEE,GAAK+oC,EAEb,IAAK,MAAM4P,KAAUqB,EAAO,CAC1B,MAAM7kB,EAAMwjB,EAAOxjB,IACb6L,EAAQO,EAAOoX,EAAO3X,QAAU,CAACn5B,MAAO,EAAG0wC,OAAQ,EAAGz9B,OAAQ,GAC9DA,EAAS69B,EAAQL,YAActX,EAAMlmB,QAAW,EACtD,GAAI69B,EAAOnL,WAAY,CACrB,MAAMlpB,EAAQykB,EAAUx7B,EAAIuN,EACtB2L,EAASua,EAAM5/B,MAAQ+zB,EAAI1O,OAC7B1lB,EAAQigC,EAAMl8B,SAChB9E,EAAIghC,EAAMl8B,OAERqwB,EAAIyjB,SACNuB,GAAWhlB,EAAKklB,EAAYh3B,KAAMrjB,EAAGo4C,EAAOkB,WAAae,EAAYl3B,MAAQk3B,EAAYh3B,KAAMoD,GAE/F0zB,GAAWhlB,EAAK4T,EAAU1lB,KAAO2d,EAAMuX,OAAQv4C,EAAGskB,EAAOmC,GAE3Dua,EAAMl8B,MAAQ9E,EACdghC,EAAMuX,QAAUj0B,EAChBtkB,EAAIm1B,EAAI/R,WACH,CACL,MAAMqD,EAASsiB,EAAUp9B,EAAImP,EACvBwJ,EAAQ0c,EAAM5/B,MAAQ+zB,EAAI7Q,MAC5BvjB,EAAQigC,EAAMl8B,SAChBhF,EAAIkhC,EAAMl8B,OAERqwB,EAAIyjB,SACNuB,GAAWhlB,EAAKr1B,EAAGu6C,EAAYn3B,IAAKoB,EAAO8zB,EAAOoB,YAAca,EAAYj3B,OAASi3B,EAAYn3B,KAEjGi3B,GAAWhlB,EAAKr1B,EAAGipC,EAAU7lB,IAAM8d,EAAMuX,OAAQj0B,EAAOmC,GAE1Dua,EAAMl8B,MAAQhF,EACdkhC,EAAMuX,QAAU9xB,EAChB3mB,EAAIq1B,EAAIhS,KACT,CACF,CAED4lB,EAAUjpC,EAAIA,EACdipC,EAAU/oC,EAAIA,CACf,CAwBD,OAAe,CAQbs6C,MAAAA,CAAO58B,EAAOrc,GACPqc,EAAMs8B,QACTt8B,EAAMs8B,MAAQ,IAIhB34C,EAAKu3C,SAAWv3C,EAAKu3C,WAAY,EACjCv3C,EAAKi1C,SAAWj1C,EAAKi1C,UAAY,MACjCj1C,EAAKyZ,OAASzZ,EAAKyZ,QAAU,EAE7BzZ,EAAKk5C,QAAUl5C,EAAKk5C,SAAW,WAC7B,MAAO,CAAC,CACNC,EAAG,EACH/d,IAAAA,CAAKsM,GACH1nC,EAAKo7B,KAAKsM,EACX,KAILrrB,EAAMs8B,MAAMx5C,KAAKa,EAClB,EAODo5C,SAAAA,CAAU/8B,EAAOg9B,GACf,MAAMp8C,EAAQof,EAAMs8B,MAAQt8B,EAAMs8B,MAAMh7C,QAAQ07C,IAAe,GAChD,IAAXp8C,GACFof,EAAMs8B,MAAMxzC,OAAOlI,EAAO,EAE7B,EAQDmhC,SAAAA,CAAU/hB,EAAOrc,EAAMnC,GACrBmC,EAAKu3C,SAAW15C,EAAQ05C,SACxBv3C,EAAKi1C,SAAWp3C,EAAQo3C,SACxBj1C,EAAKyZ,OAAS5b,EAAQ4b,MACvB,EAUD+jB,MAAAA,CAAOnhB,EAAO4G,EAAOmC,EAAQk0B,GAC3B,IAAKj9B,EACH,OAGF,MAAMuF,EAAUiJ,GAAUxO,EAAMxe,QAAQy5C,OAAO11B,SACzC41B,EAAiBr3C,KAAK6B,IAAIihB,EAAQrB,EAAQqB,MAAO,GACjDw0B,EAAkBt3C,KAAK6B,IAAIojB,EAASxD,EAAQwD,OAAQ,GACpDuzB,EA5QV,SAA0BA,GACxB,MAAMY,EA1DR,SAAmBZ,GACjB,MAAMY,EAAc,GACpB,IAAIj9C,EAAGO,EAAMi3B,EAAKP,EAAKoM,EAAOsX,EAE9B,IAAK36C,EAAI,EAAGO,GAAQ87C,GAAS,IAAIl8C,OAAQH,EAAIO,IAAQP,EACnDw3B,EAAM6kB,EAAMr8C,KACV24C,SAAU1hB,EAAK11B,SAAU8hC,QAAOsX,cAAc,IAAMnjB,GACtDylB,EAAYp6C,KAAK,CACflC,MAAOX,EACPw3B,MACAP,MACA4Y,WAAYrY,EAAIyZ,eAChB9zB,OAAQqa,EAAIra,OACZkmB,MAAOA,GAAUpM,EAAMoM,EACvBsX,gBAGJ,OAAOsC,CACR,CAwCqBC,CAAUb,GACxBpB,EAAWX,GAAa2C,EAAYhrB,QAAOyoB,GAAQA,EAAKljB,IAAIyjB,YAAW,GACvEv1B,EAAO40B,GAAaF,GAAiB6C,EAAa,SAAS,GAC3Dz3B,EAAQ80B,GAAaF,GAAiB6C,EAAa,UACnD13B,EAAM+0B,GAAaF,GAAiB6C,EAAa,QAAQ,GACzDx3B,EAAS60B,GAAaF,GAAiB6C,EAAa,WACpDE,EAAmB9C,GAA4B4C,EAAa,KAC5DG,EAAiB/C,GAA4B4C,EAAa,KAEhE,MAAO,CACLhC,WACAoC,WAAY33B,EAAK8oB,OAAOjpB,GACxB+3B,eAAgB93B,EAAMgpB,OAAO4O,GAAgB5O,OAAO/oB,GAAQ+oB,OAAO2O,GACnE/R,UAAWgP,GAAiB6C,EAAa,aACzCM,SAAU73B,EAAK8oB,OAAOhpB,GAAOgpB,OAAO4O,GACpCvN,WAAYtqB,EAAIipB,OAAO/oB,GAAQ+oB,OAAO2O,GAEzC,CA0PiBK,CAAiBz9B,EAAMs8B,OAC/BoB,EAAgBpB,EAAMkB,SACtBG,EAAkBrB,EAAMxM,WAI9BhwC,EAAKkgB,EAAMs8B,OAAO7kB,IACgB,oBAArBA,EAAImmB,cACbnmB,EAAImmB,cACL,IA8BH,MAAMC,EAA0BH,EAAche,QAAO,CAACwW,EAAOyE,IAC3DA,EAAKljB,IAAIj2B,UAAwC,IAA7Bm5C,EAAKljB,IAAIj2B,QAAQokB,QAAoBswB,EAAQA,EAAQ,GAAG,IAAM,EAE9EwE,EAASl8C,OAAOytC,OAAO,CAC3B2P,WAAYh1B,EACZk1B,YAAa/yB,EACbxD,UACA41B,iBACAC,kBACAL,aAAcI,EAAiB,EAAI0C,EACnC7C,cAAeI,EAAkB,IAE7BE,EAAa98C,OAAO8M,OAAO,CAAC,EAAGia,GACrCg2B,GAAiBD,EAAY9sB,GAAUyuB,IACvC,MAAM5R,EAAY7sC,OAAO8M,OAAO,CAC9BgwC,aACAzrC,EAAGsrC,EACHltC,EAAGmtC,EACHh5C,EAAGmjB,EAAQI,KACXrjB,EAAGijB,EAAQC,KACVD,GAEGse,EAAS2W,GAAckD,EAAcjP,OAAOkP,GAAkBjD,GAGpE2B,GAASC,EAAMpB,SAAU7P,EAAWqP,EAAQ7W,GAG5CwY,GAASqB,EAAerS,EAAWqP,EAAQ7W,GAGvCwY,GAASsB,EAAiBtS,EAAWqP,EAAQ7W,IAE/CwY,GAASqB,EAAerS,EAAWqP,EAAQ7W,GApRjD,SAA0BwH,GACxB,MAAMiQ,EAAajQ,EAAUiQ,WAE7B,SAASwC,EAAU5mB,GACjB,MAAM6mB,EAASj6C,KAAK6B,IAAI21C,EAAWpkB,GAAOmU,EAAUnU,GAAM,GAE1D,OADAmU,EAAUnU,IAAQ6mB,EACXA,CACR,CACD1S,EAAU/oC,GAAKw7C,EAAU,OACzBzS,EAAUjpC,GAAK07C,EAAU,QACzBA,EAAU,SACVA,EAAU,SACX,CA2QGE,CAAiB3S,GAGjBqR,GAAWJ,EAAMgB,WAAYjS,EAAWqP,EAAQ7W,GAGhDwH,EAAUjpC,GAAKipC,EAAUx7B,EACzBw7B,EAAU/oC,GAAK+oC,EAAUp9B,EAEzByuC,GAAWJ,EAAMiB,eAAgBlS,EAAWqP,EAAQ7W,GAEpD7jB,EAAMqrB,UAAY,CAChB1lB,KAAM0lB,EAAU1lB,KAChBH,IAAK6lB,EAAU7lB,IACfC,MAAO4lB,EAAU1lB,KAAO0lB,EAAUx7B,EAClC6V,OAAQ2lB,EAAU7lB,IAAM6lB,EAAUp9B,EAClC8a,OAAQsiB,EAAUp9B,EAClB2Y,MAAOykB,EAAUx7B,GAInB/P,EAAKw8C,EAAMjR,WAAY4P,IACrB,MAAMxjB,EAAMwjB,EAAOxjB,IACnBj5B,OAAO8M,OAAOmsB,EAAKzX,EAAMqrB,WACzB5T,EAAI0J,OAAOkK,EAAUx7B,EAAGw7B,EAAUp9B,EAAG,CAAC0X,KAAM,EAAGH,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAAG,GAE/E,GC7bY,MAAMu4B,GAOnBC,cAAAA,CAAex1B,EAAQ6P,GAAc,CAQrC4lB,cAAAA,CAAex8B,GACb,OAAO,CACR,CASDiY,gBAAAA,CAAiB5Z,EAAOzhB,EAAMmK,GAAW,CAQzCmxB,mBAAAA,CAAoB7Z,EAAOzhB,EAAMmK,GAAW,CAK5CmZ,mBAAAA,GACE,OAAO,CACR,CASDuW,cAAAA,CAAe1B,EAAS9P,EAAOmC,EAAQwP,GAGrC,OAFA3R,EAAQ9iB,KAAK6B,IAAI,EAAGihB,GAAS8P,EAAQ9P,OACrCmC,EAASA,GAAU2N,EAAQ3N,OACpB,CACLnC,QACAmC,OAAQjlB,KAAK6B,IAAI,EAAG4yB,EAAcz0B,KAAKoB,MAAM0hB,EAAQ2R,GAAexP,GAEvE,CAMDq1B,UAAAA,CAAW11B,GACT,OAAO,CACR,CAMD21B,YAAAA,CAAaxc,GAEZ,ECrEY,MAAMyc,WAAsBL,GACzCC,cAAAA,CAAev6C,GAIb,OAAOA,GAAQA,EAAKglB,YAAchlB,EAAKglB,WAAW,OAAS,IAC5D,CACD01B,YAAAA,CAAaxc,GACXA,EAAOrgC,QAAQ8f,WAAY,CAC5B,ECRH,MAAMi9B,GAAc,WAOdC,GAAc,CAClBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAGRC,GAAgB9gD,GAAmB,OAAVA,GAA4B,KAAVA,EA8DjD,MAAM+gD,KAAuB1lB,IAA+B,CAACE,SAAS,GAMtE,SAASylB,GAAep/B,EAAOzhB,EAAMmK,GACnCsX,EAAM0I,OAAOmR,oBAAoBt7B,EAAMmK,EAAUy2C,GAClD,CAcD,SAASE,GAAiBC,EAAU52B,GAClC,IAAK,MAAM1H,KAAQs+B,EACjB,GAAIt+B,IAAS0H,GAAU1H,EAAKu+B,SAAS72B,GACnC,OAAO,CAGZ,CAED,SAAS82B,GAAqBx/B,EAAOzhB,EAAMmK,GACzC,MAAMggB,EAAS1I,EAAM0I,OACf+2B,EAAW,IAAIC,kBAAiBC,IACpC,IAAIC,GAAU,EACd,IAAK,MAAM3Q,KAAS0Q,EAClBC,EAAUA,GAAWP,GAAiBpQ,EAAM4Q,WAAYn3B,GACxDk3B,EAAUA,IAAYP,GAAiBpQ,EAAM6Q,aAAcp3B,GAEzDk3B,GACFl3C,GACD,IAGH,OADA+2C,EAASM,QAAQ/pB,SAAU,CAACgqB,WAAW,EAAMC,SAAS,IAC/CR,CACR,CAED,SAASS,GAAqBlgC,EAAOzhB,EAAMmK,GACzC,MAAMggB,EAAS1I,EAAM0I,OACf+2B,EAAW,IAAIC,kBAAiBC,IACpC,IAAIC,GAAU,EACd,IAAK,MAAM3Q,KAAS0Q,EAClBC,EAAUA,GAAWP,GAAiBpQ,EAAM6Q,aAAcp3B,GAC1Dk3B,EAAUA,IAAYP,GAAiBpQ,EAAM4Q,WAAYn3B,GAEvDk3B,GACFl3C,GACD,IAGH,OADA+2C,EAASM,QAAQ/pB,SAAU,CAACgqB,WAAW,EAAMC,SAAS,IAC/CR,CACR,CAED,MAAMU,GAAqB,IAAIrhC,IAC/B,IAAIshC,GAAsB,EAE1B,SAASC,KACP,MAAMC,EAAM/2C,OAAOmY,iBACf4+B,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmBp3C,SAAQ,CAACkc,EAAQjF,KAC9BA,EAAMuI,0BAA4B+3B,GACpCr7B,GACD,IAEJ,CAgBD,SAASs7B,GAAqBvgC,EAAOzhB,EAAMmK,GACzC,MAAMggB,EAAS1I,EAAM0I,OACfiQ,EAAYjQ,GAAUuN,GAAevN,GAC3C,IAAKiQ,EACH,OAEF,MAAM1T,EAASxb,IAAU,CAACmd,EAAOmC,KAC/B,MAAMlZ,EAAI8oB,EAAUI,YACpBrwB,EAASke,EAAOmC,GACZlZ,EAAI8oB,EAAUI,aAQhBrwB,GACD,GACAa,QAGGk2C,EAAW,IAAIe,gBAAeb,IAClC,MAAM1Q,EAAQ0Q,EAAQ,GAChB/4B,EAAQqoB,EAAMwR,YAAY75B,MAC1BmC,EAASkmB,EAAMwR,YAAY13B,OAInB,IAAVnC,GAA0B,IAAXmC,GAGnB9D,EAAO2B,EAAOmC,EAAO,IAKvB,OAHA02B,EAASM,QAAQpnB,GAhDnB,SAAuC3Y,EAAOiF,GACvCk7B,GAAmBz8C,MACtB6F,OAAOqwB,iBAAiB,SAAUymB,IAEpCF,GAAmBj3C,IAAI8W,EAAOiF,EAC/B,CA4CCy7B,CAA8B1gC,EAAOiF,GAE9Bw6B,CACR,CAED,SAASkB,GAAgB3gC,EAAOzhB,EAAMkhD,GAChCA,GACFA,EAASmB,aAEE,WAATriD,GAnDN,SAAyCyhB,GACvCmgC,GAAmBruB,OAAO9R,GACrBmgC,GAAmBz8C,MACtB6F,OAAOswB,oBAAoB,SAAUwmB,GAExC,CA+CGQ,CAAgC7gC,EAEnC,CAED,SAAS8gC,GAAqB9gC,EAAOzhB,EAAMmK,GACzC,MAAMggB,EAAS1I,EAAM0I,OACf2H,EAAQ5mB,IAAW2tB,IAIL,OAAdpX,EAAMsC,KACR5Z,EA1IN,SAAyB0uB,EAAOpX,GAC9B,MAAMzhB,EAAOigD,GAAYpnB,EAAM74B,OAAS64B,EAAM74B,MACxC,EAAC6D,EAAC,EAAEE,GAAK60B,GAAoBC,EAAOpX,GAC1C,MAAO,CACLzhB,OACAyhB,QACA+gC,OAAQ3pB,EACRh1B,OAASoN,IAANpN,EAAkBA,EAAI,KACzBE,OAASkN,IAANlN,EAAkBA,EAAI,KAE5B,CAgIc0+C,CAAgB5pB,EAAOpX,GACjC,GACAA,GAIH,OAxJF,SAAqBgB,EAAMziB,EAAMmK,GAC/BsY,EAAK4Y,iBAAiBr7B,EAAMmK,EAAUy2C,GACvC,CAoJC8B,CAAYv4B,EAAQnqB,EAAM8xB,GAEnBA,CACR,CAMc,MAAM6wB,WAAoBjD,GAOvCC,cAAAA,CAAex1B,EAAQ6P,GAIrB,MAAM5W,EAAU+G,GAAUA,EAAOC,YAAcD,EAAOC,WAAW,MASjE,OAAIhH,GAAWA,EAAQ+G,SAAWA,GA3OtC,SAAoBA,EAAQ6P,GAC1B,MAAMrW,EAAQwG,EAAOxG,MAIfi/B,EAAez4B,EAAO04B,aAAa,UACnCC,EAAc34B,EAAO04B,aAAa,SAsBxC,GAnBA14B,EAAO61B,IAAe,CACpBhgB,QAAS,CACPxV,OAAQo4B,EACRv6B,MAAOy6B,EACPn/B,MAAO,CACL0D,QAAS1D,EAAM0D,QACfmD,OAAQ7G,EAAM6G,OACdnC,MAAO1E,EAAM0E,SAQnB1E,EAAM0D,QAAU1D,EAAM0D,SAAW,QAEjC1D,EAAMoV,UAAYpV,EAAMoV,WAAa,aAEjC4nB,GAAcmC,GAAc,CAC9B,MAAMC,EAAexnB,GAAapR,EAAQ,cACrBlZ,IAAjB8xC,IACF54B,EAAO9B,MAAQ06B,EAElB,CAED,GAAIpC,GAAciC,GAChB,GAA4B,KAAxBz4B,EAAOxG,MAAM6G,OAIfL,EAAOK,OAASL,EAAO9B,OAAS2R,GAAe,OAC1C,CACL,MAAMgpB,EAAgBznB,GAAapR,EAAQ,eACrBlZ,IAAlB+xC,IACF74B,EAAOK,OAASw4B,EAEnB,CAIJ,CA4LKC,CAAW94B,EAAQ6P,GACZ5W,GAGF,IACR,CAKDw8B,cAAAA,CAAex8B,GACb,MAAM+G,EAAS/G,EAAQ+G,OACvB,IAAKA,EAAO61B,IACV,OAAO,EAGT,MAAMhgB,EAAU7V,EAAO61B,IAAahgB,QACpC,CAAC,SAAU,SAASx1B,SAASslB,IAC3B,MAAMjwB,EAAQmgC,EAAQlQ,GAClBlwB,EAAcC,GAChBsqB,EAAO+4B,gBAAgBpzB,GAEvB3F,EAAOg5B,aAAarzB,EAAMjwB,EAC3B,IAGH,MAAM8jB,EAAQqc,EAAQrc,OAAS,CAAC,EAahC,OAZA1jB,OAAO2B,KAAK+hB,GAAOnZ,SAAS1H,IAC1BqnB,EAAOxG,MAAM7gB,GAAO6gB,EAAM7gB,EAAI,IAQhCqnB,EAAO9B,MAAQ8B,EAAO9B,aAEf8B,EAAO61B,KACP,CACR,CAQD3kB,gBAAAA,CAAiB5Z,EAAOzhB,EAAMmK,GAE5BkU,KAAKid,oBAAoB7Z,EAAOzhB,GAEhC,MAAMojD,EAAU3hC,EAAM4hC,WAAa5hC,EAAM4hC,SAAW,CAAC,GAM/C/I,EALW,CACfgJ,OAAQrC,GACRsC,OAAQ5B,GACRj7B,OAAQs7B,IAEehiD,IAASuiD,GAClCa,EAAQpjD,GAAQs6C,EAAQ74B,EAAOzhB,EAAMmK,EACtC,CAODmxB,mBAAAA,CAAoB7Z,EAAOzhB,GACzB,MAAMojD,EAAU3hC,EAAM4hC,WAAa5hC,EAAM4hC,SAAW,CAAC,GAC/CvxB,EAAQsxB,EAAQpjD,GAEtB,IAAK8xB,EACH,QAGe,CACfwxB,OAAQlB,GACRmB,OAAQnB,GACR17B,OAAQ07B,IAEepiD,IAAS6gD,IAC1Bp/B,EAAOzhB,EAAM8xB,GACrBsxB,EAAQpjD,QAAQiR,CACjB,CAEDqS,mBAAAA,GACE,OAAOtY,OAAOmY,gBACf,CAQD0W,cAAAA,CAAe1P,EAAQ9B,EAAOmC,EAAQwP,GACpC,OAAOH,GAAe1P,EAAQ9B,EAAOmC,EAAQwP,EAC9C,CAKD6lB,UAAAA,CAAW11B,GACT,MAAMiQ,EAAY1C,GAAevN,GACjC,SAAUiQ,IAAaA,EAAUopB,YAClC,EC1XY,MAAMC,GAEnBvc,gBAAkB,CAAC,EACnBA,0BAAuB,EAIvBzgB,QAAS,EAITi9B,eAAAA,CAAgBjJ,GACd,MAAM,EAAC52C,EAAC,EAAEE,GAAKsa,KAAKi9B,SAAS,CAAC,IAAK,KAAMb,GACzC,MAAO,CAAC52C,IAAGE,IACZ,CAED4/C,QAAAA,GACE,OAAO98C,EAASwX,KAAKxa,IAAMgD,EAASwX,KAAKta,EAC1C,CASDu3C,QAAAA,CAAS3rB,EAAiBi0B,GACxB,MAAMhkB,EAAQvhB,KAAK2lB,YACnB,IAAK4f,IAAUhkB,EAEb,OAAOvhB,KAET,MAAMF,EAA+B,CAAC,EAItC,OAHAwR,EAAMnlB,SAASslB,IACb3R,EAAI2R,GAAQ8P,EAAM9P,IAAS8P,EAAM9P,GAAMrJ,SAAWmZ,EAAM9P,GAAM4S,IAAMrkB,KAAKyR,EAAe,IAEnF3R,CACR,EC3BI,SAAS0K,GAAShE,EAAOrD,GAC9B,MAAMqiC,EAAWh/B,EAAM5hB,QAAQue,MACzBsiC,EA8BR,SAA2Bj/B,GACzB,MAAMyC,EAASzC,EAAM5hB,QAAQqkB,OACvBQ,EAAajD,EAAMk/B,YACnBC,EAAWn/B,EAAMyrB,QAAUxoB,GAAcR,EAAS,EAAI,GACtD28B,EAAWp/B,EAAMq/B,WAAap8B,EACpC,OAAOviB,KAAKoB,MAAMpB,KAAK4B,IAAI68C,EAAUC,GACtC,CApC4BE,CAAkBt/B,GACvCu/B,EAAa7+C,KAAK4B,IAAI08C,EAASQ,eAAiBP,EAAoBA,GACpEQ,EAAeT,EAAS36B,MAAMq7B,QAgEtC,SAAyB/iC,GACvB,MAAMkX,EAAS,GACf,IAAIh3B,EAAGO,EACP,IAAKP,EAAI,EAAGO,EAAOuf,EAAM3f,OAAQH,EAAIO,EAAMP,IACrC8f,EAAM9f,GAAGwnB,OACXwP,EAAOn0B,KAAK7C,GAGhB,OAAOg3B,CACR,CAzE+C8rB,CAAgBhjC,GAAS,GACjEijC,EAAkBH,EAAaziD,OAC/B6iD,EAAQJ,EAAa,GACrBx6C,EAAOw6C,EAAaG,EAAkB,GACtCE,EAAW,GAGjB,GAAIF,EAAkBL,EAEpB,OAwEJ,SAAoB5iC,EAAOmjC,EAAUL,EAAchP,GACjD,IAEI5zC,EAFAkK,EAAQ,EACRwpB,EAAOkvB,EAAa,GAIxB,IADAhP,EAAU/vC,KAAKq/C,KAAKtP,GACf5zC,EAAI,EAAGA,EAAI8f,EAAM3f,OAAQH,IACxBA,IAAM0zB,IACRuvB,EAASpgD,KAAKid,EAAM9f,IACpBkK,IACAwpB,EAAOkvB,EAAa14C,EAAQ0pC,GAGjC,CAtFGuP,CAAWrjC,EAAOmjC,EAAUL,EAAcG,EAAkBL,GACrDO,EAGT,MAAMrP,EA6BR,SAA0BgP,EAAc9iC,EAAO4iC,GAC7C,MAAMU,EA6FR,SAAwBpxB,GACtB,MAAM/xB,EAAM+xB,EAAI7xB,OAChB,IAAIH,EAAGk4C,EAEP,GAAIj4C,EAAM,EACR,OAAO,EAGT,IAAKi4C,EAAOlmB,EAAI,GAAIhyB,EAAI,EAAGA,EAAIC,IAAOD,EACpC,GAAIgyB,EAAIhyB,GAAKgyB,EAAIhyB,EAAI,KAAOk4C,EAC1B,OAAO,EAGX,OAAOA,CACR,CA3G0BmL,CAAeT,GAClChP,EAAU9zB,EAAM3f,OAASuiD,EAI/B,IAAKU,EACH,OAAOv/C,KAAK6B,IAAIkuC,EAAS,GAG3B,MAAM0P,EpC/BD,SAAoBnlD,GACzB,MAAM64B,EAAmB,GACnBvwB,EAAO5C,KAAK4C,KAAKtI,GACvB,IAAI6B,EAEJ,IAAKA,EAAI,EAAGA,EAAIyG,EAAMzG,IAChB7B,EAAQ6B,IAAM,IAChBg3B,EAAOn0B,KAAK7C,GACZg3B,EAAOn0B,KAAK1E,EAAQ6B,IAQxB,OALIyG,KAAiB,EAAPA,IACZuwB,EAAOn0B,KAAK4D,GAGduwB,EAAOyX,MAAK,CAAClrC,EAAGC,IAAMD,EAAIC,IAAG07B,MACtBlI,CACR,CoCciBusB,CAAWH,GAC3B,IAAK,IAAIpjD,EAAI,EAAGO,EAAO+iD,EAAQnjD,OAAS,EAAGH,EAAIO,EAAMP,IAAK,CACxD,MAAMkgC,EAASojB,EAAQtjD,GACvB,GAAIkgC,EAAS0T,EACX,OAAO1T,CAEV,CACD,OAAOr8B,KAAK6B,IAAIkuC,EAAS,EAC1B,CA/CiB4P,CAAiBZ,EAAc9iC,EAAO4iC,GAEtD,GAAIK,EAAkB,EAAG,CACvB,IAAI/iD,EAAGO,EACP,MAAMkjD,EAAkBV,EAAkB,EAAIl/C,KAAKiB,OAAOsD,EAAO46C,IAAUD,EAAkB,IAAM,KAEnG,IADA3vB,GAAKtT,EAAOmjC,EAAUrP,EAAS11C,EAAculD,GAAmB,EAAIT,EAAQS,EAAiBT,GACxFhjD,EAAI,EAAGO,EAAOwiD,EAAkB,EAAG/iD,EAAIO,EAAMP,IAChDozB,GAAKtT,EAAOmjC,EAAUrP,EAASgP,EAAa5iD,GAAI4iD,EAAa5iD,EAAI,IAGnE,OADAozB,GAAKtT,EAAOmjC,EAAUrP,EAASxrC,EAAMlK,EAAculD,GAAmB3jC,EAAM3f,OAASiI,EAAOq7C,GACrFR,CACR,CAED,OADA7vB,GAAKtT,EAAOmjC,EAAUrP,GACfqP,CACR,CA6ED,SAAS7vB,GAAKtT,EAAOmjC,EAAUrP,EAAS8P,EAAYC,GAClD,MAAMx8C,EAAQjI,EAAewkD,EAAY,GACnCt8C,EAAMvD,KAAK4B,IAAIvG,EAAeykD,EAAU7jC,EAAM3f,QAAS2f,EAAM3f,QACnE,IACIA,EAAQH,EAAG0zB,EADXxpB,EAAQ,EAWZ,IARA0pC,EAAU/vC,KAAKq/C,KAAKtP,GAChB+P,IACFxjD,EAASwjD,EAAWD,EACpB9P,EAAUzzC,EAAS0D,KAAKoB,MAAM9E,EAASyzC,IAGzClgB,EAAOvsB,EAEAusB,EAAO,GACZxpB,IACAwpB,EAAO7vB,KAAKiB,MAAMqC,EAAQ+C,EAAQ0pC,GAGpC,IAAK5zC,EAAI6D,KAAK6B,IAAIyB,EAAO,GAAInH,EAAIoH,EAAKpH,IAChCA,IAAM0zB,IACRuvB,EAASpgD,KAAKid,EAAM9f,IACpBkK,IACAwpB,EAAO7vB,KAAKiB,MAAMqC,EAAQ+C,EAAQ0pC,GAGvC,CC7ID,MACMgQ,GAAiBA,CAACzgC,EAAOwsB,EAAM/pB,IAAoB,QAAT+pB,GAA2B,SAATA,EAAkBxsB,EAAMwsB,GAAQ/pB,EAASzC,EAAMwsB,GAAQ/pB,EAYzH,SAASi+B,GAAO7xB,EAAK8xB,GACnB,MAAM9sB,EAAS,GACT+sB,EAAY/xB,EAAI7xB,OAAS2jD,EACzB7jD,EAAM+xB,EAAI7xB,OAChB,IAAIH,EAAI,EAER,KAAOA,EAAIC,EAAKD,GAAK+jD,EACnB/sB,EAAOn0B,KAAKmvB,EAAInuB,KAAKoB,MAAMjF,KAE7B,OAAOg3B,CACR,CAOD,SAASgtB,GAAoB7gC,EAAOxiB,EAAOsjD,GACzC,MAAM9jD,EAASgjB,EAAMrD,MAAM3f,OACrB+jD,EAAargD,KAAK4B,IAAI9E,EAAOR,EAAS,GACtCgH,EAAQgc,EAAM6uB,YACd5qC,EAAM+b,EAAM8uB,UACZxtC,EAAU,KAChB,IACImhB,EADAu+B,EAAYhhC,EAAM2rB,gBAAgBoV,GAGtC,KAAID,IAEAr+B,EADa,IAAXzlB,EACO0D,KAAK6B,IAAIy+C,EAAYh9C,EAAOC,EAAM+8C,GACxB,IAAVxjD,GACCwiB,EAAM2rB,gBAAgB,GAAKqV,GAAa,GAExCA,EAAYhhC,EAAM2rB,gBAAgBoV,EAAa,IAAM,EAEjEC,GAAaD,EAAavjD,EAAQilB,GAAUA,EAGxCu+B,EAAYh9C,EAAQ1C,GAAW0/C,EAAY/8C,EAAM3C,IAIvD,OAAO0/C,CACR,CAuBD,SAASC,GAAkB7iD,GACzB,OAAOA,EAAQ4kB,UAAY5kB,EAAQ6kB,WAAa,CACjD,CAKD,SAASi+B,GAAe9iD,EAASktB,GAC/B,IAAKltB,EAAQokB,QACX,OAAO,EAGT,MAAM5D,EAAOyM,GAAOjtB,EAAQwgB,KAAM0M,GAC5BnJ,EAAUiJ,GAAUhtB,EAAQ+jB,SAGlC,OAFclnB,EAAQmD,EAAQslB,MAAQtlB,EAAQslB,KAAK1mB,OAAS,GAE5C4hB,EAAKG,WAAcoD,EAAQwD,MAC5C,CAiBD,SAASw7B,GAAW36C,EAAOgvC,EAAU54C,GACnC,IAAI0c,EAAM/S,GAAmBC,GAI7B,OAHI5J,GAAyB,UAAb44C,IAA2B54C,GAAwB,UAAb44C,KACpDl8B,EAnHkB9S,IAAoB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,EAmHhF46C,CAAa9nC,IAEdA,CACR,CAuCc,MAAM+nC,WAAczC,GAGjCvlC,WAAAA,CAAY+jB,GACVuQ,QAGAn0B,KAAK1e,GAAKsiC,EAAItiC,GAEd0e,KAAKre,KAAOiiC,EAAIjiC,KAEhBqe,KAAKpb,aAAUgO,EAEfoN,KAAK0F,IAAMke,EAAIle,IAEf1F,KAAKoD,MAAQwgB,EAAIxgB,MAIjBpD,KAAK4I,SAAMhW,EAEXoN,KAAK8I,YAASlW,EAEdoN,KAAK+I,UAAOnW,EAEZoN,KAAK6I,WAAQjW,EAEboN,KAAKgK,WAAQpX,EAEboN,KAAKmM,YAASvZ,EACdoN,KAAK8nC,SAAW,CACd/+B,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GAGV9I,KAAK6P,cAAWjd,EAEhBoN,KAAK6b,eAAYjpB,EAEjBoN,KAAK+nC,gBAAan1C,EAElBoN,KAAKgoC,mBAAgBp1C,EAErBoN,KAAKioC,iBAAcr1C,EAEnBoN,KAAKkoC,kBAAet1C,EAIpBoN,KAAKrS,UAAOiF,EAEZoN,KAAKmoC,mBAAgBv1C,EACrBoN,KAAKlX,SAAM8J,EACXoN,KAAKjX,SAAM6J,EACXoN,KAAKooC,YAASx1C,EAEdoN,KAAKmD,MAAQ,GAEbnD,KAAKqoC,eAAiB,KAEtBroC,KAAKsoC,YAAc,KAEnBtoC,KAAKuoC,YAAc,KACnBvoC,KAAKiyB,QAAU,EACfjyB,KAAK6lC,WAAa,EAClB7lC,KAAKwoC,kBAAoB,CAAC,EAE1BxoC,KAAKq1B,iBAAcziC,EAEnBoN,KAAKs1B,eAAY1iC,EACjBoN,KAAK67B,gBAAiB,EACtB77B,KAAKyoC,cAAW71C,EAChBoN,KAAK0oC,cAAW91C,EAChBoN,KAAK2oC,mBAAgB/1C,EACrBoN,KAAK4oC,mBAAgBh2C,EACrBoN,KAAK6oC,aAAe,EACpB7oC,KAAK8oC,aAAe,EACpB9oC,KAAK0xB,OAAS,CAAC,EACf1xB,KAAK+oC,mBAAoB,EACzB/oC,KAAKypB,cAAW72B,CACjB,CAMDyoC,IAAAA,CAAKz2C,GACHob,KAAKpb,QAAUA,EAAQiwB,WAAW7U,KAAK+L,cAEvC/L,KAAKrS,KAAO/I,EAAQ+I,KAGpBqS,KAAK0oC,SAAW1oC,KAAKusB,MAAM3nC,EAAQkE,KACnCkX,KAAKyoC,SAAWzoC,KAAKusB,MAAM3nC,EAAQmE,KACnCiX,KAAK4oC,cAAgB5oC,KAAKusB,MAAM3nC,EAAQokD,cACxChpC,KAAK2oC,cAAgB3oC,KAAKusB,MAAM3nC,EAAQqkD,aACzC,CAQD1c,KAAAA,CAAMsC,EAAK7qC,GACT,OAAO6qC,CACR,CAOD/gC,aAAAA,GACE,IAAI,SAAC46C,EAAQ,SAAED,EAAQ,cAAEG,EAAa,cAAED,GAAiB3oC,KAKzD,OAJA0oC,EAAWrmD,EAAgBqmD,EAAUvmD,OAAOmF,mBAC5CmhD,EAAWpmD,EAAgBomD,EAAUtmD,OAAOyrC,mBAC5Cgb,EAAgBvmD,EAAgBumD,EAAezmD,OAAOmF,mBACtDqhD,EAAgBtmD,EAAgBsmD,EAAexmD,OAAOyrC,mBAC/C,CACL9kC,IAAKzG,EAAgBqmD,EAAUE,GAC/B7/C,IAAK1G,EAAgBomD,EAAUE,GAC/B/6C,WAAYxL,EAASsmD,GACrB76C,WAAYzL,EAASqmD,GAExB,CAQDlb,SAAAA,CAAUC,GAER,IACIvlC,GADA,IAACa,EAAG,IAAEC,EAAG,WAAE6E,EAAU,WAAEC,GAAcmS,KAAKlS,gBAG9C,GAAIF,GAAcC,EAChB,MAAO,CAAC/E,MAAKC,OAGf,MAAMmgD,EAAQlpC,KAAKwnB,0BACnB,IAAK,IAAInkC,EAAI,EAAGO,EAAOslD,EAAM1lD,OAAQH,EAAIO,IAAQP,EAC/C4E,EAAQihD,EAAM7lD,GAAGqkC,WAAW6F,UAAUvtB,KAAMwtB,GACvC5/B,IACH9E,EAAM5B,KAAK4B,IAAIA,EAAKb,EAAMa,MAEvB+E,IACH9E,EAAM7B,KAAK6B,IAAIA,EAAKd,EAAMc,MAQ9B,OAHAD,EAAM+E,GAAc/E,EAAMC,EAAMA,EAAMD,EACtCC,EAAM6E,GAAc9E,EAAMC,EAAMD,EAAMC,EAE/B,CACLD,IAAKzG,EAAgByG,EAAKzG,EAAgB0G,EAAKD,IAC/CC,IAAK1G,EAAgB0G,EAAK1G,EAAgByG,EAAKC,IAElD,CAOD+1C,UAAAA,GACE,MAAO,CACL/1B,KAAM/I,KAAKioC,aAAe,EAC1Br/B,IAAK5I,KAAK+nC,YAAc,EACxBl/B,MAAO7I,KAAKkoC,cAAgB,EAC5Bp/B,OAAQ9I,KAAKgoC,eAAiB,EAEjC,CAODmB,QAAAA,GACE,OAAOnpC,KAAKmD,KACb,CAKD2pB,SAAAA,GACE,MAAM3hB,EAAOnL,KAAKoD,MAAM+H,KACxB,OAAOnL,KAAKpb,QAAQioC,SAAW7sB,KAAKs0B,eAAiBnpB,EAAKi+B,QAAUj+B,EAAKk+B,UAAYl+B,EAAK0hB,QAAU,EACrG,CAGDmU,YAAAA,GACEhhC,KAAK0xB,OAAS,CAAC,EACf1xB,KAAK+oC,mBAAoB,CAC1B,CAMDO,YAAAA,GACEvnD,EAAKie,KAAKpb,QAAQ0kD,aAAc,CAACtpC,MAClC,CAUDukB,MAAAA,CAAO1U,EAAUgM,EAAWD,GAC1B,MAAM,YAAC1S,EAAW,MAAEE,EAAOjG,MAAOqiC,GAAYxlC,KAAKpb,QAC7C2kD,EAAa/D,EAAS+D,WAG5BvpC,KAAKspC,eAGLtpC,KAAK6P,SAAWA,EAChB7P,KAAK6b,UAAYA,EACjB7b,KAAK8nC,SAAWlsB,EAAUh6B,OAAO8M,OAAO,CACtCqa,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GACP8S,GAEH5b,KAAKmD,MAAQ,KACbnD,KAAKuoC,YAAc,KACnBvoC,KAAKqoC,eAAiB,KACtBroC,KAAKsoC,YAAc,KAGnBtoC,KAAKwpC,sBACLxpC,KAAKypC,gBACLzpC,KAAK0pC,qBAEL1pC,KAAK6lC,WAAa7lC,KAAKs0B,eACnBt0B,KAAKgK,MAAQ4R,EAAQ7S,KAAO6S,EAAQ/S,MACpC7I,KAAKmM,OAASyP,EAAQhT,IAAMgT,EAAQ9S,OAGnC9I,KAAK+oC,oBACR/oC,KAAK2pC,mBACL3pC,KAAK4pC,sBACL5pC,KAAK6pC,kBACL7pC,KAAKooC,OxBtOJ,SAAmB0B,EAAuC1gC,EAAwBF,GACvF,MAAM,IAACpgB,EAAG,IAAEC,GAAO+gD,EACb3I,EAAS1+C,EAAY2mB,GAAQrgB,EAAMD,GAAO,GAC1CihD,EAAWA,CAACvoD,EAAegL,IAAgB0c,GAAyB,IAAV1nB,EAAc,EAAIA,EAAQgL,EAC1F,MAAO,CACL1D,IAAKihD,EAASjhD,GAAM5B,KAAKa,IAAIo5C,IAC7Bp4C,IAAKghD,EAAShhD,EAAKo4C,GAEtB,CwB8NmB6I,CAAUhqC,KAAMoJ,EAAOF,GACrClJ,KAAK+oC,mBAAoB,GAG3B/oC,KAAKiqC,mBAELjqC,KAAKmD,MAAQnD,KAAKkqC,cAAgB,GAGlClqC,KAAKmqC,kBAIL,MAAMC,EAAkBb,EAAavpC,KAAKmD,MAAM3f,OAChDwc,KAAKqqC,sBAAsBD,EAAkBlD,GAAOlnC,KAAKmD,MAAOomC,GAAcvpC,KAAKmD,OAMnFnD,KAAKmlB,YAGLnlB,KAAKsqC,+BACLtqC,KAAKuqC,yBACLvqC,KAAKwqC,8BAGDhF,EAASx8B,UAAYw8B,EAASh7B,UAAgC,SAApBg7B,EAASthD,UACrD8b,KAAKmD,MAAQqH,GAASxK,KAAMA,KAAKmD,OACjCnD,KAAKuoC,YAAc,KACnBvoC,KAAKyqC,iBAGHL,GAEFpqC,KAAKqqC,sBAAsBrqC,KAAKmD,OAGlCnD,KAAK0qC,YACL1qC,KAAK2qC,MACL3qC,KAAK4qC,WAIL5qC,KAAK6qC,aACN,CAKD1lB,SAAAA,GACE,IACI2Q,EAAYE,EADZ8U,EAAgB9qC,KAAKpb,QAAQxB,QAG7B4c,KAAKs0B,gBACPwB,EAAa91B,KAAK+I,KAClBitB,EAAWh2B,KAAK6I,QAEhBitB,EAAa91B,KAAK4I,IAClBotB,EAAWh2B,KAAK8I,OAEhBgiC,GAAiBA,GAEnB9qC,KAAKq1B,YAAcS,EACnB91B,KAAKs1B,UAAYU,EACjBh2B,KAAK67B,eAAiBiP,EACtB9qC,KAAKiyB,QAAU+D,EAAWF,EAC1B91B,KAAK+qC,eAAiB/qC,KAAKpb,QAAQomD,aACpC,CAEDH,WAAAA,GACE9oD,EAAKie,KAAKpb,QAAQimD,YAAa,CAAC7qC,MACjC,CAIDwpC,mBAAAA,GACEznD,EAAKie,KAAKpb,QAAQ4kD,oBAAqB,CAACxpC,MACzC,CACDypC,aAAAA,GAEMzpC,KAAKs0B,gBAEPt0B,KAAKgK,MAAQhK,KAAK6P,SAClB7P,KAAK+I,KAAO,EACZ/I,KAAK6I,MAAQ7I,KAAKgK,QAElBhK,KAAKmM,OAASnM,KAAK6b,UAGnB7b,KAAK4I,IAAM,EACX5I,KAAK8I,OAAS9I,KAAKmM,QAIrBnM,KAAKioC,YAAc,EACnBjoC,KAAK+nC,WAAa,EAClB/nC,KAAKkoC,aAAe,EACpBloC,KAAKgoC,cAAgB,CACtB,CACD0B,kBAAAA,GACE3nD,EAAKie,KAAKpb,QAAQ8kD,mBAAoB,CAAC1pC,MACxC,CAEDirC,UAAAA,CAAWlkC,GACT/G,KAAKoD,MAAM8nC,cAAcnkC,EAAM/G,KAAK+L,cACpChqB,EAAKie,KAAKpb,QAAQmiB,GAAO,CAAC/G,MAC3B,CAGD2pC,gBAAAA,GACE3pC,KAAKirC,WAAW,mBACjB,CACDrB,mBAAAA,GAAuB,CACvBC,eAAAA,GACE7pC,KAAKirC,WAAW,kBACjB,CAGDhB,gBAAAA,GACEjqC,KAAKirC,WAAW,mBACjB,CAIDf,UAAAA,GACE,MAAO,EACR,CACDC,eAAAA,GACEnqC,KAAKirC,WAAW,kBACjB,CAEDE,2BAAAA,GACEppD,EAAKie,KAAKpb,QAAQumD,4BAA6B,CAACnrC,MACjD,CAKDorC,kBAAAA,CAAmBjoC,GACjB,MAAMqiC,EAAWxlC,KAAKpb,QAAQue,MAC9B,IAAI9f,EAAGO,EAAM0+B,EACb,IAAKj/B,EAAI,EAAGO,EAAOuf,EAAM3f,OAAQH,EAAIO,EAAMP,IACzCi/B,EAAOnf,EAAM9f,GACbi/B,EAAK6L,MAAQpsC,EAAKyjD,EAAS3iD,SAAU,CAACy/B,EAAK9gC,MAAO6B,EAAG8f,GAAQnD,KAEhE,CACDqrC,0BAAAA,GACEtpD,EAAKie,KAAKpb,QAAQymD,2BAA4B,CAACrrC,MAChD,CAIDsqC,4BAAAA,GACEvoD,EAAKie,KAAKpb,QAAQ0lD,6BAA8B,CAACtqC,MAClD,CACDuqC,sBAAAA,GACE,MAAM3lD,EAAUob,KAAKpb,QACf4gD,EAAW5gD,EAAQue,MACnBmoC,EAAWtrC,KAAKmD,MAAM3f,OACtB2mB,EAAcq7B,EAASr7B,aAAe,EACtCC,EAAco7B,EAASp7B,YAC7B,IACIV,EAAWmS,EAAW0vB,EADtBpD,EAAgBh+B,EAGpB,IAAKnK,KAAKwrC,eAAiBhG,EAASx8B,SAAWmB,GAAeC,GAAekhC,GAAY,IAAMtrC,KAAKs0B,eAElG,YADAt0B,KAAKmoC,cAAgBh+B,GAIvB,MAAMshC,EAAazrC,KAAK0rC,iBAClBC,EAAgBF,EAAWG,OAAO5hC,MAClC6hC,EAAiBJ,EAAWK,QAAQ3/B,OAIpC0D,EAAW7kB,EAAYgV,KAAKoD,MAAM4G,MAAQ2hC,EAAe,EAAG3rC,KAAK6P,UACvEnG,EAAY9kB,EAAQqkB,OAASjJ,KAAK6P,SAAWy7B,EAAWz7B,GAAYy7B,EAAW,GAG3EK,EAAgB,EAAIjiC,IACtBA,EAAYmG,GAAYy7B,GAAY1mD,EAAQqkB,OAAS,GAAM,IAC3D4S,EAAY7b,KAAK6b,UAAY4rB,GAAkB7iD,EAAQykB,MACvDm8B,EAAS78B,QAAU++B,GAAe9iD,EAAQqlB,MAAOjK,KAAKoD,MAAMxe,QAAQwgB,MACpEmmC,EAAmBrkD,KAAK4C,KAAK6hD,EAAgBA,EAAgBE,EAAiBA,GAC9E1D,EAAgBj/C,EAAUhC,KAAK4B,IAC7B5B,KAAK6kD,KAAK/gD,GAAaygD,EAAWK,QAAQ3/B,OAAS,GAAKzC,GAAY,EAAG,IACvExiB,KAAK6kD,KAAK/gD,EAAY6wB,EAAY0vB,GAAmB,EAAG,IAAMrkD,KAAK6kD,KAAK/gD,EAAY6gD,EAAiBN,GAAmB,EAAG,MAE7HpD,EAAgBjhD,KAAK6B,IAAIohB,EAAajjB,KAAK4B,IAAIshB,EAAa+9B,KAG9DnoC,KAAKmoC,cAAgBA,CACtB,CACDqC,2BAAAA,GACEzoD,EAAKie,KAAKpb,QAAQ4lD,4BAA6B,CAACxqC,MACjD,CACDyqC,aAAAA,GAAiB,CAIjBC,SAAAA,GACE3oD,EAAKie,KAAKpb,QAAQ8lD,UAAW,CAAC1qC,MAC/B,CACD2qC,GAAAA,GAEE,MAAMqB,EAAU,CACdhiC,MAAO,EACPmC,OAAQ,IAGJ,MAAC/I,EAAOxe,SAAUue,MAAOqiC,EAAUv7B,MAAOgiC,EAAW5iC,KAAM6iC,IAAalsC,KACxEgJ,EAAUhJ,KAAKwrC,aACflX,EAAet0B,KAAKs0B,eAE1B,GAAItrB,EAAS,CACX,MAAMmjC,EAAczE,GAAeuE,EAAW7oC,EAAMxe,QAAQwgB,MAU5D,GATIkvB,GACF0X,EAAQhiC,MAAQhK,KAAK6P,SACrBm8B,EAAQ7/B,OAASs7B,GAAkByE,GAAYC,IAE/CH,EAAQ7/B,OAASnM,KAAK6b,UACtBmwB,EAAQhiC,MAAQy9B,GAAkByE,GAAYC,GAI5C3G,EAASx8B,SAAWhJ,KAAKmD,MAAM3f,OAAQ,CACzC,MAAM,MAAC6iD,EAAK,KAAE56C,EAAI,OAAEmgD,EAAM,QAAEE,GAAW9rC,KAAK0rC,iBACtCU,EAAiC,EAAnB5G,EAAS78B,QACvB0jC,EAAerjD,EAAUgX,KAAKmoC,eAC9Bp4C,EAAM7I,KAAK6I,IAAIs8C,GACfv9C,EAAM5H,KAAK4H,IAAIu9C,GAErB,GAAI/X,EAAc,CAEhB,MAAMgY,EAAc9G,EAASn7B,OAAS,EAAIvb,EAAM88C,EAAO5hC,MAAQja,EAAM+7C,EAAQ3/B,OAC7E6/B,EAAQ7/B,OAASjlB,KAAK4B,IAAIkX,KAAK6b,UAAWmwB,EAAQ7/B,OAASmgC,EAAcF,OACpE,CAGL,MAAMG,EAAa/G,EAASn7B,OAAS,EAAIta,EAAM67C,EAAO5hC,MAAQlb,EAAMg9C,EAAQ3/B,OAE5E6/B,EAAQhiC,MAAQ9iB,KAAK4B,IAAIkX,KAAK6P,SAAUm8B,EAAQhiC,MAAQuiC,EAAaH,EACtE,CACDpsC,KAAKwsC,kBAAkBnG,EAAO56C,EAAMqD,EAAKiB,EAC1C,CACF,CAEDiQ,KAAKysC,iBAEDnY,GACFt0B,KAAKgK,MAAQhK,KAAKiyB,QAAU7uB,EAAM4G,MAAQhK,KAAK8nC,SAAS/+B,KAAO/I,KAAK8nC,SAASj/B,MAC7E7I,KAAKmM,OAAS6/B,EAAQ7/B,SAEtBnM,KAAKgK,MAAQgiC,EAAQhiC,MACrBhK,KAAKmM,OAASnM,KAAKiyB,QAAU7uB,EAAM+I,OAASnM,KAAK8nC,SAASl/B,IAAM5I,KAAK8nC,SAASh/B,OAEjF,CAED0jC,iBAAAA,CAAkBnG,EAAO56C,EAAMqD,EAAKiB,GAClC,MAAOoT,OAAO,MAACnW,EAAK,QAAE2b,GAAQ,SAAEqzB,GAAYh8B,KAAKpb,QAC3C8nD,EAAmC,IAAvB1sC,KAAKmoC,cACjBwE,EAAgC,QAAb3Q,GAAoC,MAAdh8B,KAAKrS,KAEpD,GAAIqS,KAAKs0B,eAAgB,CACvB,MAAMsY,EAAa5sC,KAAKmyB,gBAAgB,GAAKnyB,KAAK+I,KAC5C8jC,EAAc7sC,KAAK6I,MAAQ7I,KAAKmyB,gBAAgBnyB,KAAKmD,MAAM3f,OAAS,GAC1E,IAAIykD,EAAc,EACdC,EAAe,EAIfwE,EACEC,GACF1E,EAAcl4C,EAAMs2C,EAAMr8B,MAC1Bk+B,EAAep5C,EAAMrD,EAAK0gB,SAE1B87B,EAAcn5C,EAAMu3C,EAAMl6B,OAC1B+7B,EAAen4C,EAAMtE,EAAKue,OAET,UAAVhd,EACTk7C,EAAez8C,EAAKue,MACD,QAAVhd,EACTi7C,EAAc5B,EAAMr8B,MACD,UAAVhd,IACTi7C,EAAc5B,EAAMr8B,MAAQ,EAC5Bk+B,EAAez8C,EAAKue,MAAQ,GAI9BhK,KAAKioC,YAAc/gD,KAAK6B,KAAKk/C,EAAc2E,EAAajkC,GAAW3I,KAAKgK,OAAShK,KAAKgK,MAAQ4iC,GAAa,GAC3G5sC,KAAKkoC,aAAehhD,KAAK6B,KAAKm/C,EAAe2E,EAAclkC,GAAW3I,KAAKgK,OAAShK,KAAKgK,MAAQ6iC,GAAc,OAC1G,CACL,IAAI9E,EAAat8C,EAAK0gB,OAAS,EAC3B67B,EAAgB3B,EAAMl6B,OAAS,EAErB,UAAVnf,GACF+6C,EAAa,EACbC,EAAgB3B,EAAMl6B,QACH,QAAVnf,IACT+6C,EAAat8C,EAAK0gB,OAClB67B,EAAgB,GAGlBhoC,KAAK+nC,WAAaA,EAAap/B,EAC/B3I,KAAKgoC,cAAgBA,EAAgBr/B,CACtC,CACF,CAMD8jC,cAAAA,GACMzsC,KAAK8nC,WACP9nC,KAAK8nC,SAAS/+B,KAAO7hB,KAAK6B,IAAIiX,KAAKioC,YAAajoC,KAAK8nC,SAAS/+B,MAC9D/I,KAAK8nC,SAASl/B,IAAM1hB,KAAK6B,IAAIiX,KAAK+nC,WAAY/nC,KAAK8nC,SAASl/B,KAC5D5I,KAAK8nC,SAASj/B,MAAQ3hB,KAAK6B,IAAIiX,KAAKkoC,aAAcloC,KAAK8nC,SAASj/B,OAChE7I,KAAK8nC,SAASh/B,OAAS5hB,KAAK6B,IAAIiX,KAAKgoC,cAAehoC,KAAK8nC,SAASh/B,QAErE,CAED8hC,QAAAA,GACE7oD,EAAKie,KAAKpb,QAAQgmD,SAAU,CAAC5qC,MAC9B,CAMDs0B,YAAAA,GACE,MAAM,KAAC3mC,EAAI,SAAEquC,GAAYh8B,KAAKpb,QAC9B,MAAoB,QAAbo3C,GAAmC,WAAbA,GAAkC,MAATruC,CACvD,CAIDm/C,UAAAA,GACE,OAAO9sC,KAAKpb,QAAQ05C,QACrB,CAMD+L,qBAAAA,CAAsBlnC,GAMpB,IAAI9f,EAAGO,EACP,IANAoc,KAAKmrC,8BAELnrC,KAAKorC,mBAAmBjoC,GAInB9f,EAAI,EAAGO,EAAOuf,EAAM3f,OAAQH,EAAIO,EAAMP,IACrC9B,EAAc4hB,EAAM9f,GAAG8qC,SACzBhrB,EAAMjX,OAAO7I,EAAG,GAChBO,IACAP,KAIJ2c,KAAKqrC,4BACN,CAMDK,cAAAA,GACE,IAAID,EAAazrC,KAAKuoC,YAEtB,IAAKkD,EAAY,CACf,MAAMlC,EAAavpC,KAAKpb,QAAQue,MAAMomC,WACtC,IAAIpmC,EAAQnD,KAAKmD,MACbomC,EAAapmC,EAAM3f,SACrB2f,EAAQ+jC,GAAO/jC,EAAOomC,IAGxBvpC,KAAKuoC,YAAckD,EAAazrC,KAAK+sC,mBAAmB5pC,EAAOA,EAAM3f,OACtE,CAED,OAAOioD,CACR,CAQDsB,kBAAAA,CAAmB5pC,EAAO3f,GACxB,MAAM,IAACkiB,EAAK8iC,kBAAmBwE,GAAUhtC,KACnCitC,EAAS,GACTC,EAAU,GAChB,IAEI7pD,EAAGsb,EAAGwuC,EAAMhf,EAAOif,EAAUC,EAAYv6B,EAAOvN,EAAYyE,EAAOmC,EAAQmhC,EAF3EC,EAAkB,EAClBC,EAAmB,EAGvB,IAAKnqD,EAAI,EAAGA,EAAIG,IAAUH,EAAG,CAQ3B,GAPA8qC,EAAQhrB,EAAM9f,GAAG8qC,MACjBif,EAAWptC,KAAKytC,wBAAwBpqD,GACxCqiB,EAAIN,KAAOioC,EAAaD,EAAS9hC,OACjCwH,EAAQk6B,EAAOK,GAAcL,EAAOK,IAAe,CAACliC,KAAM,CAAC,EAAGC,GAAI,IAClE7F,EAAa6nC,EAAS7nC,WACtByE,EAAQmC,EAAS,EAEZ5qB,EAAc4sC,IAAW1sC,EAAQ0sC,IAG/B,GAAI1sC,EAAQ0sC,GAEjB,IAAKxvB,EAAI,EAAGwuC,EAAOhf,EAAM3qC,OAAQmb,EAAIwuC,IAAQxuC,EAC3C2uC,EAAcnf,EAAMxvB,GAEfpd,EAAc+rD,IAAiB7rD,EAAQ6rD,KAC1CtjC,EAAQkB,GAAaxF,EAAKoN,EAAM3H,KAAM2H,EAAM1H,GAAIpB,EAAOsjC,GACvDnhC,GAAU5G,QATdyE,EAAQkB,GAAaxF,EAAKoN,EAAM3H,KAAM2H,EAAM1H,GAAIpB,EAAOmkB,GACvDhiB,EAAS5G,EAYX0nC,EAAO/mD,KAAK8jB,GACZkjC,EAAQhnD,KAAKimB,GACbohC,EAAkBrmD,KAAK6B,IAAIihB,EAAOujC,GAClCC,EAAmBtmD,KAAK6B,IAAIojB,EAAQqhC,EACrC,EAtwBL,SAAwBR,EAAQxpD,GAC9BN,EAAK8pD,GAASl6B,IACZ,MAAM1H,EAAK0H,EAAM1H,GACXsiC,EAAQtiC,EAAG5nB,OAAS,EAC1B,IAAIH,EACJ,GAAIqqD,EAAQlqD,EAAQ,CAClB,IAAKH,EAAI,EAAGA,EAAIqqD,IAASrqD,SAChByvB,EAAM3H,KAAKC,EAAG/nB,IAEvB+nB,EAAGlf,OAAO,EAAGwhD,EACd,IAEJ,CA2vBGC,CAAeX,EAAQxpD,GAEvB,MAAMooD,EAASqB,EAAOvoD,QAAQ6oD,GACxBzB,EAAUoB,EAAQxoD,QAAQ8oD,GAE1BI,EAAWC,IAAG,CAAO7jC,MAAOijC,EAAOY,IAAQ,EAAG1hC,OAAQ+gC,EAAQW,IAAQ,IAE5E,MAAO,CACLxH,MAAOuH,EAAQ,GACfniD,KAAMmiD,EAAQpqD,EAAS,GACvBooD,OAAQgC,EAAQhC,GAChBE,QAAS8B,EAAQ9B,GACjBmB,SACAC,UAEH,CAOD9e,gBAAAA,CAAiB5sC,GACf,OAAOA,CACR,CASDuM,gBAAAA,CAAiBvM,EAAOwC,GACtB,OAAOspC,GACR,CAQDwgB,gBAAAA,CAAiBpiC,GAAQ,CAQzBymB,eAAAA,CAAgBnuC,GACd,MAAMmf,EAAQnD,KAAKmD,MACnB,OAAInf,EAAQ,GAAKA,EAAQmf,EAAM3f,OAAS,EAC/B,KAEFwc,KAAKjS,iBAAiBoV,EAAMnf,GAAOxC,MAC3C,CAQDu0C,kBAAAA,CAAmBgY,GACb/tC,KAAK67B,iBACPkS,EAAU,EAAIA,GAGhB,MAAMriC,EAAQ1L,KAAKq1B,YAAc0Y,EAAU/tC,KAAKiyB,QAChD,OrCxtBKjnC,EqCwtBcgV,KAAK+qC,eAAiBt/B,GAAYzL,KAAKoD,MAAOsI,EAAO,GAAKA,GrCxtBpD,MAAO,MqCytBjC,CAMDsiC,kBAAAA,CAAmBtiC,GACjB,MAAMqiC,GAAWriC,EAAQ1L,KAAKq1B,aAAer1B,KAAKiyB,QAClD,OAAOjyB,KAAK67B,eAAiB,EAAIkS,EAAUA,CAC5C,CAOD1Z,YAAAA,GACE,OAAOr0B,KAAKjS,iBAAiBiS,KAAKiuC,eACnC,CAKDA,YAAAA,GACE,MAAM,IAACnlD,EAAG,IAAEC,GAAOiX,KAEnB,OAAOlX,EAAM,GAAKC,EAAM,EAAIA,EAC1BD,EAAM,GAAKC,EAAM,EAAID,EACrB,CACH,CAKDijB,UAAAA,CAAW/nB,GACT,MAAMmf,EAAQnD,KAAKmD,OAAS,GAE5B,GAAInf,GAAS,GAAKA,EAAQmf,EAAM3f,OAAQ,CACtC,MAAM8+B,EAAOnf,EAAMnf,GACnB,OAAOs+B,EAAKmH,WACbnH,EAAKmH,SA50BV,SAA2B1T,EAAQ/xB,EAAOs+B,GACxC,OAAOhQ,GAAcyD,EAAQ,CAC3BuM,OACAt+B,QACArC,KAAM,QAET,CAs0BoBusD,CAAkBluC,KAAK+L,aAAc/nB,EAAOs+B,GAC5D,CACD,OAAOtiB,KAAKypB,WACZzpB,KAAKypB,SAr1BAnX,GAq1B8BtS,KAAKoD,MAAM2I,aAr1BnB,CAC3BvF,MAo1B4DxG,KAn1B5Dre,KAAM,UAo1BP,CAMD+jD,SAAAA,GACE,MAAMyI,EAAcnuC,KAAKpb,QAAQue,MAG3BirC,EAAMplD,EAAUgX,KAAKmoC,eACrBp4C,EAAM7I,KAAKa,IAAIb,KAAK6I,IAAIq+C,IACxBt/C,EAAM5H,KAAKa,IAAIb,KAAK4H,IAAIs/C,IAExB3C,EAAazrC,KAAK0rC,iBAClB/iC,EAAUwlC,EAAY1jC,iBAAmB,EACzCxX,EAAIw4C,EAAaA,EAAWG,OAAO5hC,MAAQrB,EAAU,EACrDtX,EAAIo6C,EAAaA,EAAWK,QAAQ3/B,OAASxD,EAAU,EAG7D,OAAO3I,KAAKs0B,eACRjjC,EAAItB,EAAMkD,EAAInE,EAAMmE,EAAIlD,EAAMsB,EAAIvC,EAClCuC,EAAIvC,EAAMmE,EAAIlD,EAAMsB,EAAItB,EAAMkD,EAAInE,CACvC,CAMD08C,UAAAA,GACE,MAAMxiC,EAAUhJ,KAAKpb,QAAQokB,QAE7B,MAAgB,SAAZA,IACOA,EAGJhJ,KAAKwnB,0BAA0BhkC,OAAS,CAChD,CAKD6qD,qBAAAA,CAAsB5f,GACpB,MAAM9gC,EAAOqS,KAAKrS,KACZyV,EAAQpD,KAAKoD,MACbxe,EAAUob,KAAKpb,SACf,KAACykB,EAAI,SAAE2yB,EAAQ,OAAEnyB,GAAUjlB,EAC3BqkB,EAASI,EAAKJ,OACdqrB,EAAet0B,KAAKs0B,eAEpBga,EADQtuC,KAAKmD,MACO3f,QAAUylB,EAAS,EAAI,GAC3CslC,EAAK9G,GAAkBp+B,GACvBhd,EAAQ,GAERmiD,EAAa3kC,EAAOgL,WAAW7U,KAAK+L,cACpC0iC,EAAYD,EAAWxlC,QAAUwlC,EAAWxkC,MAAQ,EACpD0kC,EAAgBD,EAAY,EAC5BE,EAAmB,SAASjjC,GAChC,OAAOD,GAAYrI,EAAOsI,EAAO+iC,IAEnC,IAAIG,EAAavrD,EAAGmkD,EAAWqH,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EAEpC,GAAiB,QAAbrT,EACF4S,EAAcD,EAAiB3uC,KAAK8I,QACpCimC,EAAM/uC,KAAK8I,OAASylC,EACpBU,EAAML,EAAcF,EACpBS,EAAKR,EAAiBlgB,EAAU7lB,KAAO8lC,EACvCW,EAAK5gB,EAAU3lB,YACV,GAAiB,WAAbkzB,EACT4S,EAAcD,EAAiB3uC,KAAK4I,KACpCumC,EAAK1gB,EAAU7lB,IACfymC,EAAKV,EAAiBlgB,EAAU3lB,QAAU4lC,EAC1CK,EAAMH,EAAcF,EACpBO,EAAMjvC,KAAK4I,IAAM2lC,OACZ,GAAiB,SAAbvS,EACT4S,EAAcD,EAAiB3uC,KAAK6I,OACpCimC,EAAM9uC,KAAK6I,MAAQ0lC,EACnBS,EAAMJ,EAAcF,EACpBQ,EAAKP,EAAiBlgB,EAAU1lB,MAAQ2lC,EACxCU,EAAK3gB,EAAU5lB,WACV,GAAiB,UAAbmzB,EACT4S,EAAcD,EAAiB3uC,KAAK+I,MACpCmmC,EAAKzgB,EAAU1lB,KACfqmC,EAAKT,EAAiBlgB,EAAU5lB,OAAS6lC,EACzCI,EAAMF,EAAcF,EACpBM,EAAMhvC,KAAK+I,KAAOwlC,OACb,GAAa,MAAT5gD,EAAc,CACvB,GAAiB,WAAbquC,EACF4S,EAAcD,GAAkBlgB,EAAU7lB,IAAM6lB,EAAU3lB,QAAU,EAAI,SACnE,GAAI7mB,EAAS+5C,GAAW,CAC7B,MAAMsT,EAAiB1tD,OAAO2B,KAAKy4C,GAAU,GACvCx6C,EAAQw6C,EAASsT,GACvBV,EAAcD,EAAiB3uC,KAAKoD,MAAMqD,OAAO6oC,GAAgBvhD,iBAAiBvM,GACnF,CAED2tD,EAAK1gB,EAAU7lB,IACfymC,EAAK5gB,EAAU3lB,OACfimC,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,CACb,MAAM,GAAa,MAAT5gD,EAAc,CACvB,GAAiB,WAAbquC,EACF4S,EAAcD,GAAkBlgB,EAAU1lB,KAAO0lB,EAAU5lB,OAAS,QAC/D,GAAI5mB,EAAS+5C,GAAW,CAC7B,MAAMsT,EAAiB1tD,OAAO2B,KAAKy4C,GAAU,GACvCx6C,EAAQw6C,EAASsT,GACvBV,EAAcD,EAAiB3uC,KAAKoD,MAAMqD,OAAO6oC,GAAgBvhD,iBAAiBvM,GACnF,CAEDstD,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAKzgB,EAAU1lB,KACfqmC,EAAK3gB,EAAU5lB,KAChB,CAED,MAAM0mC,EAAQhtD,EAAeqC,EAAQue,MAAM6iC,cAAesI,GACpDkB,EAAOtoD,KAAK6B,IAAI,EAAG7B,KAAKq/C,KAAK+H,EAAciB,IACjD,IAAKlsD,EAAI,EAAGA,EAAIirD,EAAajrD,GAAKmsD,EAAM,CACtC,MAAMzqC,EAAU/E,KAAK+L,WAAW1oB,GAC1BosD,EAAcpmC,EAAKwL,WAAW9P,GAC9B2qC,EAAoB7lC,EAAOgL,WAAW9P,GAEtCuE,EAAYmmC,EAAYnmC,UACxBqmC,EAAYF,EAAYlvC,MACxBugB,EAAa4uB,EAAkB5lC,MAAQ,GACvCiX,EAAmB2uB,EAAkB3lC,WAErCL,EAAY+lC,EAAY/lC,UACxBE,EAAY6lC,EAAY7lC,UACxBgmC,EAAiBH,EAAYG,gBAAkB,GAC/CC,EAAuBJ,EAAYI,qBAEzCrI,EAAYH,GAAoBrnC,KAAM3c,EAAG4lB,QAGvBrW,IAAd40C,IAIJqH,EAAmBpjC,GAAYrI,EAAOokC,EAAWl+B,GAE7CgrB,EACFwa,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAGxBxiD,EAAMnG,KAAK,CACT4oD,MACAC,MACAC,MACAC,MACAC,KACAC,KACAC,KACAC,KACArlC,MAAOV,EACP/I,MAAOovC,EACP7uB,aACAC,mBACArX,YACAE,YACAgmC,iBACAC,yBAEH,CAKD,OAHA7vC,KAAK6oC,aAAeyF,EACpBtuC,KAAK8oC,aAAe8F,EAEbviD,CACR,CAKDyjD,kBAAAA,CAAmBrhB,GACjB,MAAM9gC,EAAOqS,KAAKrS,KACZ/I,EAAUob,KAAKpb,SACf,SAACo3C,EAAU74B,MAAOgrC,GAAevpD,EACjC0vC,EAAet0B,KAAKs0B,eACpBnxB,EAAQnD,KAAKmD,OACb,MAACnW,EAAK,WAAE8d,EAAU,QAAEnC,EAAO,OAAE0B,GAAU8jC,EACvCI,EAAK9G,GAAkB7iD,EAAQykB,MAC/B0mC,EAAiBxB,EAAK5lC,EACtBqnC,EAAkB3lC,GAAU1B,EAAUonC,EACtCljC,GAAY7jB,EAAUgX,KAAKmoC,eAC3B97C,EAAQ,GACd,IAAIhJ,EAAGO,EAAM0+B,EAAM6L,EAAO3oC,EAAGE,EAAG4pB,EAAW5D,EAAOtG,EAAMG,EAAY0qC,EAAWC,EAC3E3gC,EAAe,SAEnB,GAAiB,QAAbysB,EACFt2C,EAAIsa,KAAK8I,OAASknC,EAClB1gC,EAAYtP,KAAKmwC,+BACZ,GAAiB,WAAbnU,EACTt2C,EAAIsa,KAAK4I,IAAMonC,EACf1gC,EAAYtP,KAAKmwC,+BACZ,GAAiB,SAAbnU,EAAqB,CAC9B,MAAMl8B,EAAME,KAAKowC,wBAAwB7B,GACzCj/B,EAAYxP,EAAIwP,UAChB9pB,EAAIsa,EAAIta,CACT,MAAM,GAAiB,UAAbw2C,EAAsB,CAC/B,MAAMl8B,EAAME,KAAKowC,wBAAwB7B,GACzCj/B,EAAYxP,EAAIwP,UAChB9pB,EAAIsa,EAAIta,CACT,MAAM,GAAa,MAATmI,EAAc,CACvB,GAAiB,WAAbquC,EACFt2C,GAAM+oC,EAAU7lB,IAAM6lB,EAAU3lB,QAAU,EAAKinC,OAC1C,GAAI9tD,EAAS+5C,GAAW,CAC7B,MAAMsT,EAAiB1tD,OAAO2B,KAAKy4C,GAAU,GACvCx6C,EAAQw6C,EAASsT,GACvB5pD,EAAIsa,KAAKoD,MAAMqD,OAAO6oC,GAAgBvhD,iBAAiBvM,GAASuuD,CACjE,CACDzgC,EAAYtP,KAAKmwC,yBAClB,MAAM,GAAa,MAATxiD,EAAc,CACvB,GAAiB,WAAbquC,EACFx2C,GAAMipC,EAAU1lB,KAAO0lB,EAAU5lB,OAAS,EAAKknC,OAC1C,GAAI9tD,EAAS+5C,GAAW,CAC7B,MAAMsT,EAAiB1tD,OAAO2B,KAAKy4C,GAAU,GACvCx6C,EAAQw6C,EAASsT,GACvB9pD,EAAIwa,KAAKoD,MAAMqD,OAAO6oC,GAAgBvhD,iBAAiBvM,EACxD,CACD8tB,EAAYtP,KAAKowC,wBAAwB7B,GAAIj/B,SAC9C,CAEY,MAAT3hB,IACY,UAAVX,EACFuiB,EAAe,MACI,QAAVviB,IACTuiB,EAAe,WAInB,MAAMk8B,EAAazrC,KAAK0rC,iBACxB,IAAKroD,EAAI,EAAGO,EAAOuf,EAAM3f,OAAQH,EAAIO,IAAQP,EAAG,CAC9Ci/B,EAAOnf,EAAM9f,GACb8qC,EAAQ7L,EAAK6L,MAEb,MAAMshB,EAActB,EAAYt5B,WAAW7U,KAAK+L,WAAW1oB,IAC3DqoB,EAAQ1L,KAAKmyB,gBAAgB9uC,GAAK8qD,EAAYzjC,YAC9CtF,EAAOpF,KAAKytC,wBAAwBpqD,GACpCkiB,EAAaH,EAAKG,WAClB0qC,EAAYxuD,EAAQ0sC,GAASA,EAAM3qC,OAAS,EAC5C,MAAM6sD,EAAYJ,EAAY,EACxB1vC,EAAQkvC,EAAYlvC,MACpB2O,EAAcugC,EAAYllC,gBAC1B0E,EAAcwgC,EAAYnlC,gBAChC,IA4CImF,EA5CA6gC,EAAgBhhC,EA8CpB,GA5CIglB,GACF9uC,EAAIkmB,EAEc,UAAd4D,IAEAghC,EADEjtD,IAAMO,EAAO,EACEoc,KAAKpb,QAAQxB,QAAoB,OAAV,QACzB,IAANC,EACQ2c,KAAKpb,QAAQxB,QAAmB,QAAT,OAExB,UAMhB8sD,EAFa,QAAblU,EACiB,SAAflxB,GAAsC,IAAb+B,GACbojC,EAAY1qC,EAAaA,EAAa,EAC5B,WAAfuF,GACK2gC,EAAWK,QAAQ3/B,OAAS,EAAIkkC,EAAY9qC,EAAaA,GAEzDkmC,EAAWK,QAAQ3/B,OAAS5G,EAAa,EAItC,SAAfuF,GAAsC,IAAb+B,EACdtH,EAAa,EACF,WAAfuF,EACI2gC,EAAWK,QAAQ3/B,OAAS,EAAIkkC,EAAY9qC,EAE5CkmC,EAAWK,QAAQ3/B,OAAS8jC,EAAY1qC,EAGrD8E,IACF6lC,IAAe,GAEA,IAAbrjC,GAAmB4iC,EAAY1kC,oBACjCvlB,GAAM+f,EAAa,EAAKre,KAAK4H,IAAI+d,MAGnCnnB,EAAIgmB,EACJwkC,GAAc,EAAID,GAAa1qC,EAAa,GAK1CkqC,EAAY1kC,kBAAmB,CACjC,MAAMwlC,EAAe3+B,GAAU69B,EAAYxkC,iBACrCkB,EAASs/B,EAAWyB,QAAQ7pD,GAC5B2mB,EAAQyhC,EAAWwB,OAAO5pD,GAEhC,IAAIulB,EAAMsnC,EAAaK,EAAa3nC,IAChCG,EAAO,EAAIwnC,EAAaxnC,KAE5B,OAAQwG,GACR,IAAK,SACH3G,GAAOuD,EAAS,EAChB,MACF,IAAK,SACHvD,GAAOuD,EAMT,OAAQmD,GACR,IAAK,SACHvG,GAAQiB,EAAQ,EAChB,MACF,IAAK,QACHjB,GAAQiB,EAMVyF,EAAW,CACT1G,OACAH,MACAoB,MAAOA,EAAQumC,EAAavmC,MAC5BmC,OAAQA,EAASokC,EAAapkC,OAE9B5L,MAAOkvC,EAAYzkC,cAEtB,CAED3e,EAAMnG,KAAK,CACT2mB,WACAshB,QACA/oB,OACA7E,QACA2O,cACAD,cACAihC,aACA5gC,UAAWghC,EACX/gC,eACAH,YAAa,CAAC5pB,EAAGE,GACjB+pB,YAEH,CAED,OAAOpjB,CACR,CAED8jD,uBAAAA,GACE,MAAM,SAACnU,EAAQ,MAAE74B,GAASnD,KAAKpb,QAG/B,IAFkBoE,EAAUgX,KAAKmoC,eAG/B,MAAoB,QAAbnM,EAAqB,OAAS,QAGvC,IAAIhvC,EAAQ,SAUZ,MARoB,UAAhBmW,EAAMnW,MACRA,EAAQ,OACiB,QAAhBmW,EAAMnW,MACfA,EAAQ,QACiB,UAAhBmW,EAAMnW,QACfA,EAAQ,SAGHA,CACR,CAEDojD,uBAAAA,CAAwB7B,GACtB,MAAM,SAACvS,EAAU74B,OAAO,WAAC2H,EAAU,OAAET,EAAM,QAAE1B,IAAY3I,KAAKpb,QAExDmrD,EAAiBxB,EAAK5lC,EACtBijC,EAFa5rC,KAAK0rC,iBAEEE,OAAO5hC,MAEjC,IAAIsF,EACA9pB,EA0DJ,MAxDiB,SAAbw2C,EACE3xB,GACF7kB,EAAIwa,KAAK6I,MAAQF,EAEE,SAAfmC,EACFwE,EAAY,OACY,WAAfxE,GACTwE,EAAY,SACZ9pB,GAAMomD,EAAS,IAEft8B,EAAY,QACZ9pB,GAAKomD,KAGPpmD,EAAIwa,KAAK6I,MAAQknC,EAEE,SAAfjlC,EACFwE,EAAY,QACY,WAAfxE,GACTwE,EAAY,SACZ9pB,GAAMomD,EAAS,IAEft8B,EAAY,OACZ9pB,EAAIwa,KAAK+I,OAGS,UAAbizB,EACL3xB,GACF7kB,EAAIwa,KAAK+I,KAAOJ,EAEG,SAAfmC,EACFwE,EAAY,QACY,WAAfxE,GACTwE,EAAY,SACZ9pB,GAAMomD,EAAS,IAEft8B,EAAY,OACZ9pB,GAAKomD,KAGPpmD,EAAIwa,KAAK+I,KAAOgnC,EAEG,SAAfjlC,EACFwE,EAAY,OACY,WAAfxE,GACTwE,EAAY,SACZ9pB,GAAKomD,EAAS,IAEdt8B,EAAY,QACZ9pB,EAAIwa,KAAK6I,QAIbyG,EAAY,QAGP,CAACA,YAAW9pB,IACpB,CAKDgrD,iBAAAA,GACE,GAAIxwC,KAAKpb,QAAQue,MAAMkH,OACrB,OAGF,MAAMjH,EAAQpD,KAAKoD,MACb44B,EAAWh8B,KAAKpb,QAAQo3C,SAE9B,MAAiB,SAAbA,GAAoC,UAAbA,EAClB,CAACpzB,IAAK,EAAGG,KAAM/I,KAAK+I,KAAMD,OAAQ1F,EAAM+I,OAAQtD,MAAO7I,KAAK6I,OAClD,QAAbmzB,GAAmC,WAAbA,EACnB,CAACpzB,IAAK5I,KAAK4I,IAAKG,KAAM,EAAGD,OAAQ9I,KAAK8I,OAAQD,MAAOzF,EAAM4G,YADlE,CAGH,CAKDymC,cAAAA,GACE,MAAM,IAAC/qC,EAAK9gB,SAAS,gBAAC+f,GAAgB,KAAEoE,EAAI,IAAEH,EAAG,MAAEoB,EAAK,OAAEmC,GAAUnM,KAChE2E,IACFe,EAAIsG,OACJtG,EAAI2J,UAAY1K,EAChBe,EAAIgL,SAAS3H,EAAMH,EAAKoB,EAAOmC,GAC/BzG,EAAI0G,UAEP,CAED8pB,oBAAAA,CAAqB10C,GACnB,MAAM6nB,EAAOrJ,KAAKpb,QAAQykB,KAC1B,IAAKrJ,KAAKwrC,eAAiBniC,EAAKL,QAC9B,OAAO,EAET,MACMhlB,EADQgc,KAAKmD,MACCutC,WAAU9hD,GAAKA,EAAEpN,QAAUA,IAC/C,GAAIwC,GAAS,EAAG,CAEd,OADaqlB,EAAKwL,WAAW7U,KAAK+L,WAAW/nB,IACjCslB,SACb,CACD,OAAO,CACR,CAKDqnC,QAAAA,CAASliB,GACP,MAAMplB,EAAOrJ,KAAKpb,QAAQykB,KACpB3D,EAAM1F,KAAK0F,IACXrZ,EAAQ2T,KAAKqoC,iBAAmBroC,KAAKqoC,eAAiBroC,KAAKquC,sBAAsB5f,IACvF,IAAIprC,EAAGO,EAEP,MAAMgtD,EAAWA,CAACl9C,EAAIC,EAAI2R,KACnBA,EAAM0E,OAAU1E,EAAM/E,QAG3BmF,EAAIsG,OACJtG,EAAI4D,UAAYhE,EAAM0E,MACtBtE,EAAIiK,YAAcrK,EAAM/E,MACxBmF,EAAImrC,YAAYvrC,EAAMwb,YAAc,IACpCpb,EAAIorC,eAAiBxrC,EAAMyb,iBAE3Brb,EAAIwH,YACJxH,EAAI4H,OAAO5Z,EAAGlO,EAAGkO,EAAGhO,GACpBggB,EAAI6H,OAAO5Z,EAAGnO,EAAGmO,EAAGjO,GACpBggB,EAAIkI,SACJlI,EAAI0G,UAAS,EAGf,GAAI/C,EAAKL,QACP,IAAK3lB,EAAI,EAAGO,EAAOyI,EAAM7I,OAAQH,EAAIO,IAAQP,EAAG,CAC9C,MAAM0D,EAAOsF,EAAMhJ,GAEfgmB,EAAKE,iBACPqnC,EACE,CAACprD,EAAGuB,EAAKmoD,GAAIxpD,EAAGqB,EAAKooD,IACrB,CAAC3pD,EAAGuB,EAAKqoD,GAAI1pD,EAAGqB,EAAKsoD,IACrBtoD,GAIAsiB,EAAKG,WACPonC,EACE,CAACprD,EAAGuB,EAAK+nD,IAAKppD,EAAGqB,EAAKgoD,KACtB,CAACvpD,EAAGuB,EAAKioD,IAAKtpD,EAAGqB,EAAKkoD,KACtB,CACE1uC,MAAOxZ,EAAK6iB,UACZI,MAAOjjB,EAAK2iB,UACZoX,WAAY/5B,EAAK6oD,eACjB7uB,iBAAkBh6B,EAAK8oD,sBAI9B,CAEJ,CAKDkB,UAAAA,GACE,MAAM,MAAC3tC,EAAK,IAAEsC,EAAK9gB,SAAS,OAACilB,EAAM,KAAER,IAASrJ,KACxCwuC,EAAa3kC,EAAOgL,WAAW7U,KAAK+L,cACpC0iC,EAAY5kC,EAAOb,QAAUwlC,EAAWxkC,MAAQ,EACtD,IAAKykC,EACH,OAEF,MAAMuC,EAAgB3nC,EAAKwL,WAAW7U,KAAK+L,WAAW,IAAIzC,UACpDslC,EAAc5uC,KAAK8oC,aACzB,IAAIoG,EAAIE,EAAID,EAAIE,EAEZrvC,KAAKs0B,gBACP4a,EAAKzjC,GAAYrI,EAAOpD,KAAK+I,KAAM0lC,GAAaA,EAAY,EAC5DW,EAAK3jC,GAAYrI,EAAOpD,KAAK6I,MAAOmoC,GAAiBA,EAAgB,EACrE7B,EAAKE,EAAKT,IAEVO,EAAK1jC,GAAYrI,EAAOpD,KAAK4I,IAAK6lC,GAAaA,EAAY,EAC3DY,EAAK5jC,GAAYrI,EAAOpD,KAAK8I,OAAQkoC,GAAiBA,EAAgB,EACtE9B,EAAKE,EAAKR,GAEZlpC,EAAIsG,OACJtG,EAAI4D,UAAYklC,EAAWxkC,MAC3BtE,EAAIiK,YAAc6+B,EAAWjuC,MAE7BmF,EAAIwH,YACJxH,EAAI4H,OAAO4hC,EAAIC,GACfzpC,EAAI6H,OAAO6hC,EAAIC,GACf3pC,EAAIkI,SAEJlI,EAAI0G,SACL,CAKD6kC,UAAAA,CAAWxiB,GAGT,IAFoBzuB,KAAKpb,QAAQue,MAEhB6F,QACf,OAGF,MAAMtD,EAAM1F,KAAK0F,IAEXqI,EAAO/N,KAAKwwC,oBACdziC,GACFE,GAASvI,EAAKqI,GAGhB,MAAM1hB,EAAQ2T,KAAKsoC,cAAgBtoC,KAAKsoC,YAActoC,KAAK8vC,mBAAmBrhB,IAC9E,IAAIprC,EAAGO,EAEP,IAAKP,EAAI,EAAGO,EAAOyI,EAAM7I,OAAQH,EAAIO,IAAQP,EAAG,CAC9C,MAAM0D,EAAOsF,EAAMhJ,GACb+pD,EAAWrmD,EAAKqe,KAItB0J,GAAWpJ,EAHG3e,EAAKonC,MAGI,EADfpnC,EAAKmpD,WACgB9C,EAAUrmD,EACxC,CAEGgnB,GACFI,GAAWzI,EAEd,CAKDwrC,SAAAA,GACE,MAAM,IAACxrC,EAAK9gB,SAAS,SAACo3C,EAAQ,MAAE/xB,EAAK,QAAE7mB,IAAY4c,KAEnD,IAAKiK,EAAMjB,QACT,OAGF,MAAM5D,EAAOyM,GAAO5H,EAAM7E,MACpBuD,EAAUiJ,GAAU3H,EAAMtB,SAC1B3b,EAAQid,EAAMjd,MACpB,IAAIic,EAAS7D,EAAKG,WAAa,EAEd,WAAby2B,GAAsC,WAAbA,GAAyB/5C,EAAS+5C,IAC7D/yB,GAAUN,EAAQG,OACdrnB,EAAQwoB,EAAMC,QAChBjB,GAAU7D,EAAKG,YAAc0E,EAAMC,KAAK1mB,OAAS,KAGnDylB,GAAUN,EAAQC,IAGpB,MAAM,OAACuoC,EAAM,OAAEC,EAAM,SAAEvhC,EAAQ,SAAEhD,GAx7CrC,SAAmBrG,EAAOyC,EAAQ+yB,EAAUhvC,GAC1C,MAAM,IAAC4b,EAAG,KAAEG,EAAI,OAAED,EAAM,MAAED,EAAK,MAAEzF,GAASoD,GACpC,UAACioB,EAAS,OAAEhoB,GAAUrD,EAC5B,IACIyM,EAAUshC,EAAQC,EADlBvkC,EAAW,EAEf,MAAMV,EAASrD,EAASF,EAClBoB,EAAQnB,EAAQE,EAEtB,GAAIvC,EAAM8tB,eAAgB,CAGxB,GAFA6c,EAASlkD,GAAeD,EAAO+b,EAAMF,GAEjC5mB,EAAS+5C,GAAW,CACtB,MAAMsT,EAAiB1tD,OAAO2B,KAAKy4C,GAAU,GACvCx6C,EAAQw6C,EAASsT,GACvB8B,EAAS3qC,EAAO6oC,GAAgBvhD,iBAAiBvM,GAAS2qB,EAASlD,CACpE,MACCmoC,EADsB,WAAbpV,GACCvN,EAAU3lB,OAAS2lB,EAAU7lB,KAAO,EAAIuD,EAASlD,EAElDg+B,GAAezgC,EAAOw1B,EAAU/yB,GAE3C4G,EAAWhH,EAAQE,MACd,CACL,GAAI9mB,EAAS+5C,GAAW,CACtB,MAAMsT,EAAiB1tD,OAAO2B,KAAKy4C,GAAU,GACvCx6C,EAAQw6C,EAASsT,GACvB6B,EAAS1qC,EAAO6oC,GAAgBvhD,iBAAiBvM,GAASwoB,EAAQf,CACnE,MACCkoC,EADsB,WAAbnV,GACCvN,EAAU1lB,KAAO0lB,EAAU5lB,OAAS,EAAImB,EAAQf,EAEjDg+B,GAAezgC,EAAOw1B,EAAU/yB,GAE3CmoC,EAASnkD,GAAeD,EAAO8b,EAAQF,GACvCiE,EAAwB,SAAbmvB,GAAuBx0C,EAAUA,CAC7C,CACD,MAAO,CAAC2pD,SAAQC,SAAQvhC,WAAUhD,WACnC,CAq5CgDwkC,CAAUrxC,KAAMiJ,EAAQ+yB,EAAUhvC,GAE/E8hB,GAAWpJ,EAAKuE,EAAMC,KAAM,EAAG,EAAG9E,EAAM,CACtC7E,MAAO0J,EAAM1J,MACbsP,WACAhD,WACAyC,UAAWq4B,GAAW36C,EAAOgvC,EAAU54C,GACvCmsB,aAAc,SACdH,YAAa,CAAC+hC,EAAQC,IAEzB,CAEDjvB,IAAAA,CAAKsM,GACEzuB,KAAKwrC,eAIVxrC,KAAKywC,iBACLzwC,KAAK2wC,SAASliB,GACdzuB,KAAK+wC,aACL/wC,KAAKkxC,YACLlxC,KAAKixC,WAAWxiB,GACjB,CAMDwR,OAAAA,GACE,MAAMlxB,EAAO/O,KAAKpb,QACZ0sD,EAAKviC,EAAK5L,OAAS4L,EAAK5L,MAAM+8B,GAAK,EACnCqR,EAAKhvD,EAAewsB,EAAK1F,MAAQ0F,EAAK1F,KAAK62B,GAAI,GAC/CsR,EAAKjvD,EAAewsB,EAAKlF,QAAUkF,EAAKlF,OAAOq2B,EAAG,GAExD,OAAKlgC,KAAKwrC,cAAgBxrC,KAAKmiB,OAAS0lB,GAAMhmD,UAAUsgC,KAUjD,CAAC,CACN+d,EAAGqR,EACHpvB,KAAOsM,IACLzuB,KAAKywC,iBACLzwC,KAAK2wC,SAASliB,GACdzuB,KAAKkxC,WAAW,GAEjB,CACDhR,EAAGsR,EACHrvB,KAAMA,KACJniB,KAAK+wC,YAAY,GAElB,CACD7Q,EAAGoR,EACHnvB,KAAOsM,IACLzuB,KAAKixC,WAAWxiB,EAAU,IAvBrB,CAAC,CACNyR,EAAGoR,EACHnvB,KAAOsM,IACLzuB,KAAKmiB,KAAKsM,EAAU,GAuB3B,CAODjH,uBAAAA,CAAwB7lC,GACtB,MAAMunD,EAAQlpC,KAAKoD,MAAM84B,+BACnBuV,EAASzxC,KAAKrS,KAAO,SACrB0sB,EAAS,GACf,IAAIh3B,EAAGO,EAEP,IAAKP,EAAI,EAAGO,EAAOslD,EAAM1lD,OAAQH,EAAIO,IAAQP,EAAG,CAC9C,MAAM8J,EAAO+7C,EAAM7lD,GACf8J,EAAKskD,KAAYzxC,KAAK1e,IAAQK,GAAQwL,EAAKxL,OAASA,GACtD04B,EAAOn0B,KAAKiH,EAEf,CACD,OAAOktB,CACR,CAODozB,uBAAAA,CAAwBzpD,GAEtB,OAAO6tB,GADM7R,KAAKpb,QAAQue,MAAM0R,WAAW7U,KAAK+L,WAAW/nB,IACxCohB,KACpB,CAKDssC,UAAAA,GACE,MAAMC,EAAW3xC,KAAKytC,wBAAwB,GAAGloC,WACjD,OAAQvF,KAAKs0B,eAAiBt0B,KAAKgK,MAAQhK,KAAKmM,QAAUwlC,CAC3D,ECrpDY,MAAMC,GACnB/xC,WAAAA,CAAYle,EAAM2iB,EAAOuC,GACvB7G,KAAKre,KAAOA,EACZqe,KAAKsE,MAAQA,EACbtE,KAAK6G,SAAWA,EAChB7G,KAAK3T,MAAQzK,OAAOyC,OAAO,KAC5B,CAEDwtD,SAAAA,CAAUlwD,GACR,OAAOC,OAAOC,UAAUiwD,cAAc/vD,KAAKie,KAAKre,KAAKE,UAAWF,EAAKE,UACtE,CAMDkwD,QAAAA,CAAShrD,GACP,MAAMwY,EAAQ3d,OAAOqyB,eAAeltB,GACpC,IAAIirD,GAyFR,SAA2BzyC,GACzB,MAAO,OAAQA,GAAS,aAAcA,CACvC,EAzFO0yC,CAAkB1yC,KAEpByyC,EAAchyC,KAAK+xC,SAASxyC,IAG9B,MAAMlT,EAAQ2T,KAAK3T,MACb/K,EAAKyF,EAAKzF,GACVgjB,EAAQtE,KAAKsE,MAAQ,IAAMhjB,EAEjC,IAAKA,EACH,MAAM,IAAI0zB,MAAM,2BAA6BjuB,GAG/C,OAAIzF,KAAM+K,IAKVA,EAAM/K,GAAMyF,EAsChB,SAA0BA,EAAMud,EAAO0tC,GAErC,MAAME,EAAentD,EAAMnD,OAAOyC,OAAO,MAAO,CAC9C2tD,EAAclqC,GAASpF,IAAIsvC,GAAe,CAAC,EAC3ClqC,GAASpF,IAAI4B,GACbvd,EAAK+gB,WAGPA,GAASxb,IAAIgY,EAAO4tC,GAEhBnrD,EAAKorD,eASX,SAAuB7tC,EAAO8tC,GAC5BxwD,OAAO2B,KAAK6uD,GAAQjmD,SAAQtD,IAC1B,MAAMwpD,EAAgBxpD,EAAS9C,MAAM,KAC/BusD,EAAaD,EAAc9vB,MAC3BgwB,EAAc,CAACjuC,GAAOutB,OAAOwgB,GAAep9B,KAAK,KACjDnvB,EAAQssD,EAAOvpD,GAAU9C,MAAM,KAC/BkhB,EAAanhB,EAAMy8B,MACnBvb,EAAclhB,EAAMmvB,KAAK,KAC/BnN,GAAShB,MAAMyrC,EAAaD,EAAYtrC,EAAaC,EAAW,GAEnE,CAlBGurC,CAAcluC,EAAOvd,EAAKorD,eAGxBprD,EAAKmd,aACP4D,GAASlB,SAAStC,EAAOvd,EAAKmd,YAEjC,CAtDGuuC,CAAiB1rD,EAAMud,EAAO0tC,GAC1BhyC,KAAK6G,UACPiB,GAASjB,SAAS9f,EAAKzF,GAAIyF,EAAKkd,YANzBK,CAUV,CAMD5B,GAAAA,CAAIphB,GACF,OAAO0e,KAAK3T,MAAM/K,EACnB,CAKDoxD,UAAAA,CAAW3rD,GACT,MAAMsF,EAAQ2T,KAAK3T,MACb/K,EAAKyF,EAAKzF,GACVgjB,EAAQtE,KAAKsE,MAEfhjB,KAAM+K,UACDA,EAAM/K,GAGXgjB,GAAShjB,KAAMwmB,GAASxD,YACnBwD,GAASxD,GAAOhjB,GACnB0e,KAAK6G,iBACA5C,GAAU3iB,GAGtB,ECtEI,MAAMqxD,GACX9yC,WAAAA,GACEG,KAAK4yC,YAAc,IAAIhB,GAAchpB,GAAmB,YAAY,GACpE5oB,KAAKkF,SAAW,IAAI0sC,GAAcxM,GAAS,YAC3CplC,KAAKsG,QAAU,IAAIsrC,GAAchwD,OAAQ,WACzCoe,KAAKyG,OAAS,IAAImrC,GAAc/J,GAAO,UAGvC7nC,KAAK6yC,iBAAmB,CAAC7yC,KAAK4yC,YAAa5yC,KAAKyG,OAAQzG,KAAKkF,SAC9D,CAKD1Y,GAAAA,GAAa,2BAANzJ,EAAI,yBAAJA,EAAI,gBACTid,KAAK8yC,MAAM,WAAY/vD,EACxB,CAEDqgC,MAAAA,GAAgB,2BAANrgC,EAAI,yBAAJA,EAAI,gBACZid,KAAK8yC,MAAM,aAAc/vD,EAC1B,CAKDgwD,cAAAA,GAAwB,2BAANhwD,EAAI,yBAAJA,EAAI,gBACpBid,KAAK8yC,MAAM,WAAY/vD,EAAMid,KAAK4yC,YACnC,CAKD5oB,WAAAA,GAAqB,2BAANjnC,EAAI,yBAAJA,EAAI,gBACjBid,KAAK8yC,MAAM,WAAY/vD,EAAMid,KAAKkF,SACnC,CAKD8tC,UAAAA,GAAoB,2BAANjwD,EAAI,yBAAJA,EAAI,gBAChBid,KAAK8yC,MAAM,WAAY/vD,EAAMid,KAAKsG,QACnC,CAKD2sC,SAAAA,GAAmB,2BAANlwD,EAAI,yBAAJA,EAAI,gBACfid,KAAK8yC,MAAM,WAAY/vD,EAAMid,KAAKyG,OACnC,CAMDysC,aAAAA,CAAc5xD,GACZ,OAAO0e,KAAKmzC,KAAK7xD,EAAI0e,KAAK4yC,YAAa,aACxC,CAMD3X,UAAAA,CAAW35C,GACT,OAAO0e,KAAKmzC,KAAK7xD,EAAI0e,KAAKkF,SAAU,UACrC,CAMDkuC,SAAAA,CAAU9xD,GACR,OAAO0e,KAAKmzC,KAAK7xD,EAAI0e,KAAKsG,QAAS,SACpC,CAMD+sC,QAAAA,CAAS/xD,GACP,OAAO0e,KAAKmzC,KAAK7xD,EAAI0e,KAAKyG,OAAQ,QACnC,CAKD6sC,iBAAAA,GAA2B,2BAANvwD,EAAI,yBAAJA,EAAI,gBACvBid,KAAK8yC,MAAM,aAAc/vD,EAAMid,KAAK4yC,YACrC,CAKDW,cAAAA,GAAwB,2BAANxwD,EAAI,yBAAJA,EAAI,gBACpBid,KAAK8yC,MAAM,aAAc/vD,EAAMid,KAAKkF,SACrC,CAKDsuC,aAAAA,GAAuB,2BAANzwD,EAAI,yBAAJA,EAAI,gBACnBid,KAAK8yC,MAAM,aAAc/vD,EAAMid,KAAKsG,QACrC,CAKDmtC,YAAAA,GAAsB,2BAAN1wD,EAAI,yBAAJA,EAAI,gBAClBid,KAAK8yC,MAAM,aAAc/vD,EAAMid,KAAKyG,OACrC,CAKDqsC,KAAAA,CAAM/tB,EAAQhiC,EAAM2wD,GAClB,IAAI3wD,GAAMoJ,SAAQwnD,IAChB,MAAMC,EAAMF,GAAiB1zC,KAAK6zC,oBAAoBF,GAClDD,GAAiBE,EAAI/B,UAAU8B,IAASC,IAAQ5zC,KAAKsG,SAAWqtC,EAAIryD,GACtE0e,KAAK8zC,MAAM/uB,EAAQ6uB,EAAKD,GAMxBzwD,EAAKywD,GAAK5sD,IAOR,MAAMgtD,EAAUL,GAAiB1zC,KAAK6zC,oBAAoB9sD,GAC1DiZ,KAAK8zC,MAAM/uB,EAAQgvB,EAAShtD,EAAK,GAEpC,GAEJ,CAKD+sD,KAAAA,CAAM/uB,EAAQiW,EAAUgZ,GACtB,MAAMC,EAAc5tD,EAAY0+B,GAChChjC,EAAKiyD,EAAU,SAAWC,GAAc,GAAID,GAC5ChZ,EAASjW,GAAQivB,GACjBjyD,EAAKiyD,EAAU,QAAUC,GAAc,GAAID,EAC5C,CAKDH,mBAAAA,CAAoBlyD,GAClB,IAAK,IAAI0B,EAAI,EAAGA,EAAI2c,KAAK6yC,iBAAiBrvD,OAAQH,IAAK,CACrD,MAAMuwD,EAAM5zC,KAAK6yC,iBAAiBxvD,GAClC,GAAIuwD,EAAI/B,UAAUlwD,GAChB,OAAOiyD,CAEV,CAED,OAAO5zC,KAAKsG,OACb,CAKD6sC,IAAAA,CAAK7xD,EAAIoyD,EAAe/xD,GACtB,MAAMoF,EAAO2sD,EAAchxC,IAAIphB,GAC/B,QAAasR,IAAT7L,EACF,MAAM,IAAIiuB,MAAM,IAAM1zB,EAAK,yBAA2BK,EAAO,KAE/D,OAAOoF,CACR,EAKH,OAA+B,IAAI4rD,GCtKpB,MAAMuB,GACnBr0C,WAAAA,GACEG,KAAKm0C,MAAQ,EACd,CAYDC,MAAAA,CAAOhxC,EAAOixC,EAAMtxD,EAAMuyB,GACX,eAAT++B,IACFr0C,KAAKm0C,MAAQn0C,KAAKs0C,mBAAmBlxC,GAAO,GAC5CpD,KAAKshB,QAAQthB,KAAKm0C,MAAO/wC,EAAO,YAGlC,MAAMc,EAAcoR,EAAStV,KAAKwE,aAAapB,GAAOkS,OAAOA,GAAUtV,KAAKwE,aAAapB,GACnFiX,EAASra,KAAKshB,QAAQpd,EAAad,EAAOixC,EAAMtxD,GAMtD,MAJa,iBAATsxD,IACFr0C,KAAKshB,QAAQpd,EAAad,EAAO,QACjCpD,KAAKshB,QAAQthB,KAAKm0C,MAAO/wC,EAAO,cAE3BiX,CACR,CAKDiH,OAAAA,CAAQpd,EAAad,EAAOixC,EAAMtxD,GAChCA,EAAOA,GAAQ,CAAC,EAChB,IAAK,MAAMwxD,KAAcrwC,EAAa,CACpC,MAAMswC,EAASD,EAAWC,OAG1B,IAA6C,IAAzCC,EAFWD,EAAOH,GACP,CAACjxC,EAAOrgB,EAAMwxD,EAAW3vD,SACP4vD,IAAqBzxD,EAAK2xD,WACzD,OAAO,CAEV,CAED,OAAO,CACR,CAEDC,UAAAA,GAMOpzD,EAAcye,KAAK0xB,UACtB1xB,KAAK40C,UAAY50C,KAAK0xB,OACtB1xB,KAAK0xB,YAAS9+B,EAEjB,CAMD4R,YAAAA,CAAapB,GACX,GAAIpD,KAAK0xB,OACP,OAAO1xB,KAAK0xB,OAGd,MAAMxtB,EAAclE,KAAK0xB,OAAS1xB,KAAKs0C,mBAAmBlxC,GAI1D,OAFApD,KAAK60C,oBAAoBzxC,GAElBc,CACR,CAEDowC,kBAAAA,CAAmBlxC,EAAO2iB,GACxB,MAAMd,EAAS7hB,GAASA,EAAM6hB,OACxBrgC,EAAUrC,EAAe0iC,EAAOrgC,SAAWqgC,EAAOrgC,QAAQ0hB,QAAS,CAAC,GACpEA,EAqBV,SAAoB2e,GAClB,MAAM6vB,EAAW,CAAC,EACZxuC,EAAU,GACV/iB,EAAO3B,OAAO2B,KAAKy3C,GAAS10B,QAAQja,OAC1C,IAAK,IAAIhJ,EAAI,EAAGA,EAAIE,EAAKC,OAAQH,IAC/BijB,EAAQpgB,KAAK80C,GAASoY,UAAU7vD,EAAKF,KAGvC,MAAMmkB,EAAQyd,EAAO3e,SAAW,GAChC,IAAK,IAAIjjB,EAAI,EAAGA,EAAImkB,EAAMhkB,OAAQH,IAAK,CACrC,MAAMmxD,EAAShtC,EAAMnkB,IAEY,IAA7BijB,EAAQ5hB,QAAQ8vD,KAClBluC,EAAQpgB,KAAKsuD,GACbM,EAASN,EAAOlzD,KAAM,EAEzB,CAED,MAAO,CAACglB,UAASwuC,WAClB,CAxCmBC,CAAW9vB,GAE3B,OAAmB,IAAZrgC,GAAsBmhC,EAkDjC,SAA2B3iB,EAAO,EAAqBxe,EAASmhC,GAAK,IAAnC,QAACzf,EAAO,SAAEwuC,GAAS,EACnD,MAAMz6B,EAAS,GACTtV,EAAU3B,EAAM2I,aAEtB,IAAK,MAAMyoC,KAAUluC,EAAS,CAC5B,MAAMhlB,EAAKkzD,EAAOlzD,GACZytB,EAAOimC,GAAQpwD,EAAQtD,GAAKykC,GACrB,OAAThX,GAGJsL,EAAOn0B,KAAK,CACVsuD,SACA5vD,QAASqwD,GAAW7xC,EAAM6hB,OAAQ,CAACuvB,SAAQhtC,MAAOstC,EAASxzD,IAAMytB,EAAMhK,IAE1E,CAED,OAAOsV,CACR,CAnE2C66B,CAAkB9xC,EAAOkD,EAAS1hB,EAASmhC,GAAhD,EACpC,CAMD8uB,mBAAAA,CAAoBzxC,GAClB,MAAM+xC,EAAsBn1C,KAAK40C,WAAa,GACxC1wC,EAAclE,KAAK0xB,OACnB6J,EAAOA,CAAC30C,EAAGC,IAAMD,EAAE0uB,QAAO9vB,IAAMqB,EAAEuuD,MAAK1vD,GAAKF,EAAEgvD,OAAOlzD,KAAOoE,EAAE8uD,OAAOlzD,OAC3E0e,KAAKshB,QAAQia,EAAK4Z,EAAqBjxC,GAAcd,EAAO,QAC5DpD,KAAKshB,QAAQia,EAAKr3B,EAAaixC,GAAsB/xC,EAAO,QAC7D,EA2BH,SAAS4xC,GAAQpwD,EAASmhC,GACxB,OAAKA,IAAmB,IAAZnhC,GAGI,IAAZA,EACK,CAAC,EAEHA,EALE,IAMV,CAqBD,SAASqwD,GAAWhwB,EAAQ,EAAiBlW,EAAMhK,GAAS,IAAhC,OAACyvC,EAAM,MAAEhtC,GAAM,EACzC,MAAMjkB,EAAO0hC,EAAOowB,gBAAgBb,GAC9B/hC,EAASwS,EAAOoH,gBAAgBtd,EAAMxrB,GAK5C,OAJIikB,GAASgtC,EAAO1sC,UAElB2K,EAAOvsB,KAAKsuD,EAAO1sC,UAEdmd,EAAOqH,eAAe7Z,EAAQ1N,EAAS,CAAC,IAAK,CAElD4Q,YAAY,EACZC,WAAW,EACXH,SAAS,GAEZ,CClLM,SAAS6/B,GAAa3zD,EAAMiD,GACjC,MAAM2wD,EAAkBztC,GAASjD,SAASljB,IAAS,CAAC,EAEpD,QADwBiD,EAAQigB,UAAY,CAAC,GAAGljB,IAAS,CAAC,GACpCkkB,WAAajhB,EAAQihB,WAAa0vC,EAAgB1vC,WAAa,GACtF,CAyBM,SAAS2vC,GAAcl0D,EAAIm0D,GAChC,GAAW,MAAPn0D,GAAqB,MAAPA,GAAqB,MAAPA,EAC9B,OAAOA,EAXX,IAA0B06C,EAkBxB,GAJA16C,EAAKm0D,EAAa9nD,OAbD,SADOquC,EAeFyZ,EAAazZ,WAdI,WAAbA,EACjB,IAEQ,SAAbA,GAAoC,UAAbA,EAClB,SADT,IAYK16C,EAAGkC,OAAS,GAAKgyD,GAAcl0D,EAAG,GAAG4d,cAAeu2C,GAGvD,OAAOn0D,EAGT,MAAM,IAAI0zB,MAAM,6BAA6BjO,0DAC9C,CA8CD,SAAS2uC,GAAYzwB,GACnB,MAAMrgC,EAAUqgC,EAAOrgC,UAAYqgC,EAAOrgC,QAAU,CAAC,GAErDA,EAAQ0hB,QAAU/jB,EAAeqC,EAAQ0hB,QAAS,CAAC,GACnD1hB,EAAQ6hB,OAhDV,SAA0Bwe,EAAQrgC,GAChC,MAAM+wD,EAAgB1xC,GAAUghB,EAAOtjC,OAAS,CAAC8kB,OAAQ,CAAC,GACpDmvC,EAAehxD,EAAQ6hB,QAAU,CAAC,EAClCovC,EAAiBP,GAAarwB,EAAOtjC,KAAMiD,GAC3C6hB,EAAS7kB,OAAOyC,OAAO,MAqC7B,OAlCAzC,OAAO2B,KAAKqyD,GAAczpD,SAAQ7K,IAChC,MAAMw0D,EAAYF,EAAat0D,GAC/B,IAAKW,EAAS6zD,GACZ,OAAO/jC,QAAQgkC,MAAM,0CAA0Cz0D,KAEjE,GAAIw0D,EAAUrhC,OACZ,OAAO1C,QAAQC,KAAK,kDAAkD1wB,KAExE,MAAMqM,EAAO6nD,GAAcl0D,EAAIw0D,GACzBE,EA7CV,SAAmCroD,EAAMkY,GACvC,OAAOlY,IAASkY,EAAY,UAAY,SACzC,CA2CqBowC,CAA0BtoD,EAAMkoD,GAC5CK,EAAsBP,EAAclvC,QAAU,CAAC,EACrDA,EAAOnlB,GAAM6D,EAAQvD,OAAOyC,OAAO,MAAO,CAAC,CAACsJ,QAAOmoD,EAAWI,EAAoBvoD,GAAOuoD,EAAoBF,IAAY,IAI3H/wB,EAAO9Z,KAAKtG,SAAS1Y,SAAQg+B,IAC3B,MAAMxoC,EAAOwoC,EAAQxoC,MAAQsjC,EAAOtjC,KAC9BkkB,EAAYskB,EAAQtkB,WAAayvC,GAAa3zD,EAAMiD,GAEpDsxD,GADkBjyC,GAAUtiB,IAAS,CAAC,GACA8kB,QAAU,CAAC,EACvD7kB,OAAO2B,KAAK2yD,GAAqB/pD,SAAQgqD,IACvC,MAAMxoD,EAnEZ,SAAmCrM,EAAIukB,GACrC,IAAIlY,EAAOrM,EAMX,MALW,YAAPA,EACFqM,EAAOkY,EACS,YAAPvkB,IACTqM,EAAqB,MAAdkY,EAAoB,IAAM,KAE5BlY,CACR,CA2DkByoD,CAA0BD,EAAWtwC,GAC5CvkB,EAAK6oC,EAAQx8B,EAAO,WAAaA,EACvC8Y,EAAOnlB,GAAMmlB,EAAOnlB,IAAOM,OAAOyC,OAAO,MACzCc,EAAQshB,EAAOnlB,GAAK,CAAC,CAACqM,QAAOioD,EAAat0D,GAAK40D,EAAoBC,IAAY,GAC/E,IAIJv0D,OAAO2B,KAAKkjB,GAAQta,SAAQ1H,IAC1B,MAAM+hB,EAAQC,EAAOhiB,GACrBU,EAAQqhB,EAAO,CAACsB,GAASrB,OAAOD,EAAM7kB,MAAOmmB,GAAStB,OAAO,IAGxDC,CACR,CAMkB4vC,CAAiBpxB,EAAQrgC,EAC3C,CAED,SAAS0xD,GAASnrC,GAIhB,OAHAA,EAAOA,GAAQ,CAAC,GACXtG,SAAWsG,EAAKtG,UAAY,GACjCsG,EAAK0hB,OAAS1hB,EAAK0hB,QAAU,GACtB1hB,CACR,CAWD,MAAMorC,GAAW,IAAIr0C,IACfs0C,GAAa,IAAIjqD,IAEvB,SAASkqD,GAAWn0C,EAAUo0C,GAC5B,IAAInzD,EAAOgzD,GAAS7zC,IAAIJ,GAMxB,OALK/e,IACHA,EAAOmzD,IACPH,GAASjqD,IAAIgW,EAAU/e,GACvBizD,GAAWhqD,IAAIjJ,IAEVA,CACR,CAED,MAAMozD,GAAaA,CAACrqD,EAAK1G,EAAKnB,KAC5B,MAAMsqB,EAAOppB,EAAiBC,EAAKnB,QACtBmO,IAATmc,GACFziB,EAAIE,IAAIuiB,EACT,EAGY,MAAM6nC,GACnB/2C,WAAAA,CAAYolB,GACVjlB,KAAK62C,QA/BT,SAAoB5xB,GAMlB,OALAA,EAASA,GAAU,CAAC,GACb9Z,KAAOmrC,GAASrxB,EAAO9Z,MAE9BuqC,GAAYzwB,GAELA,CACR,CAwBkB6xB,CAAW7xB,GAC1BjlB,KAAK+2C,YAAc,IAAI70C,IACvBlC,KAAKg3C,eAAiB,IAAI90C,GAC3B,CAED,YAAI8C,GACF,OAAOhF,KAAK62C,QAAQ7xC,QACrB,CAED,QAAIrjB,GACF,OAAOqe,KAAK62C,QAAQl1D,IACrB,CAED,QAAIA,CAAKA,GACPqe,KAAK62C,QAAQl1D,KAAOA,CACrB,CAED,QAAIwpB,GACF,OAAOnL,KAAK62C,QAAQ1rC,IACrB,CAED,QAAIA,CAAKA,GACPnL,KAAK62C,QAAQ1rC,KAAOmrC,GAASnrC,EAC9B,CAED,WAAIvmB,GACF,OAAOob,KAAK62C,QAAQjyD,OACrB,CAED,WAAIA,CAAQA,GACVob,KAAK62C,QAAQjyD,QAAUA,CACxB,CAED,WAAI0hB,GACF,OAAOtG,KAAK62C,QAAQvwC,OACrB,CAEDie,MAAAA,GACE,MAAMU,EAASjlB,KAAK62C,QACpB72C,KAAKi3C,aACLvB,GAAYzwB,EACb,CAEDgyB,UAAAA,GACEj3C,KAAK+2C,YAAYG,QACjBl3C,KAAKg3C,eAAeE,OACrB,CAQD9qB,gBAAAA,CAAiB+qB,GACf,OAAOV,GAAWU,GAChB,IAAM,CAAC,CACL,YAAYA,IACZ,MAEL,CASD3nB,yBAAAA,CAA0B2nB,EAAa5nB,GACrC,OAAOknB,GAAW,GAAGU,gBAA0B5nB,KAC7C,IAAM,CACJ,CACE,YAAY4nB,iBAA2B5nB,IACvC,eAAeA,KAGjB,CACE,YAAY4nB,IACZ,MAGP,CAUDhoB,uBAAAA,CAAwBgoB,EAAaloB,GACnC,OAAOwnB,GAAW,GAAGU,KAAeloB,KAClC,IAAM,CAAC,CACL,YAAYkoB,cAAwBloB,IACpC,YAAYkoB,IACZ,YAAYloB,IACZ,MAEL,CAODomB,eAAAA,CAAgBb,GACd,MAAMlzD,EAAKkzD,EAAOlzD,GAElB,OAAOm1D,GAAW,GADLz2C,KAAKre,eACkBL,KAClC,IAAM,CAAC,CACL,WAAWA,OACRkzD,EAAO4C,wBAA0B,MAEzC,CAKDC,aAAAA,CAAcC,EAAWC,GACvB,MAAMR,EAAc/2C,KAAK+2C,YACzB,IAAIjkC,EAAQikC,EAAYr0C,IAAI40C,GAK5B,OAJKxkC,IAASykC,IACZzkC,EAAQ,IAAI5Q,IACZ60C,EAAYzqD,IAAIgrD,EAAWxkC,IAEtBA,CACR,CAQDuZ,eAAAA,CAAgBirB,EAAWE,EAAUD,GACnC,MAAM,QAAC3yD,EAAO,KAAEjD,GAAQqe,KAClB8S,EAAQ9S,KAAKq3C,cAAcC,EAAWC,GACtC7uB,EAAS5V,EAAMpQ,IAAI80C,GACzB,GAAI9uB,EACF,OAAOA,EAGT,MAAMjW,EAAS,IAAIlmB,IAEnBirD,EAASrrD,SAAQ5I,IACX+zD,IACF7kC,EAAOjmB,IAAI8qD,GACX/zD,EAAK4I,SAAQ1H,GAAOkyD,GAAWlkC,EAAQ6kC,EAAW7yD,MAEpDlB,EAAK4I,SAAQ1H,GAAOkyD,GAAWlkC,EAAQ7tB,EAASH,KAChDlB,EAAK4I,SAAQ1H,GAAOkyD,GAAWlkC,EAAQxO,GAAUtiB,IAAS,CAAC,EAAG8C,KAC9DlB,EAAK4I,SAAQ1H,GAAOkyD,GAAWlkC,EAAQ3K,GAAUrjB,KACjDlB,EAAK4I,SAAQ1H,GAAOkyD,GAAWlkC,EAAQvO,GAAazf,IAAK,IAG3D,MAAMmE,EAAQlH,MAAM+K,KAAKgmB,GAOzB,OANqB,IAAjB7pB,EAAMpF,QACRoF,EAAM1C,KAAKtE,OAAOyC,OAAO,OAEvBmyD,GAAWxvD,IAAIwwD,IACjB1kC,EAAMxmB,IAAIkrD,EAAU5uD,GAEfA,CACR,CAMD6uD,iBAAAA,GACE,MAAM,QAAC7yD,EAAO,KAAEjD,GAAQqe,KAExB,MAAO,CACLpb,EACAqf,GAAUtiB,IAAS,CAAC,EACpBmmB,GAASjD,SAASljB,IAAS,CAAC,EAC5B,CAACA,QACDmmB,GACA5D,GAEH,CASDkrB,mBAAAA,CAAoB3c,EAAQlU,EAAOwG,GAA0B,IAAjB2N,EAAW,UAAH,6CAAG,CAAC,IACtD,MAAM2H,EAAS,CAACqL,SAAS,IACnB,SAAC7/B,EAAQ,YAAE6xD,GAAeC,GAAY33C,KAAKg3C,eAAgBvkC,EAAQC,GACzE,IAAI9tB,EAAUiB,EACd,GAkDJ,SAAqB4tB,EAAOlV,GAC1B,MAAM,aAACwW,EAAY,YAAEK,GAAe5Q,GAAaiP,GAEjD,IAAK,MAAMhC,KAAQlT,EAAO,CACxB,MAAMoX,EAAaZ,EAAatD,GAC1BmE,EAAYR,EAAY3D,GACxBjwB,GAASo0B,GAAaD,IAAelC,EAAMhC,GACjD,GAAKkE,IAAejvB,EAAWlF,IAAUo2D,GAAYp2D,KAC/Co0B,GAAan0B,EAAQD,GACzB,OAAO,CAEV,CACD,OAAO,CACR,CA/DOq2D,CAAYhyD,EAAU0Y,GAAQ,CAChC8b,EAAOqL,SAAU,EAIjB9gC,EAAU0vB,GAAezuB,EAHzBkf,EAAUre,EAAWqe,GAAWA,IAAYA,EAExB/E,KAAKssB,eAAe7Z,EAAQ1N,EAAS2yC,GAE1D,CAED,IAAK,MAAMjmC,KAAQlT,EACjB8b,EAAO5I,GAAQ7sB,EAAQ6sB,GAEzB,OAAO4I,CACR,CAQDiS,cAAAA,CAAe7Z,EAAQ1N,GAA8C,IAArC2N,EAAW,UAAH,6CAAG,CAAC,IAAK8B,EAAkB,uCACjE,MAAM,SAAC3uB,GAAY8xD,GAAY33C,KAAKg3C,eAAgBvkC,EAAQC,GAC5D,OAAOzwB,EAAS8iB,GACZuP,GAAezuB,EAAUkf,OAASnS,EAAW4hB,GAC7C3uB,CACL,EAGH,SAAS8xD,GAAYG,EAAerlC,EAAQC,GAC1C,IAAII,EAAQglC,EAAcp1C,IAAI+P,GACzBK,IACHA,EAAQ,IAAI5Q,IACZ41C,EAAcxrD,IAAImmB,EAAQK,IAE5B,MAAMxQ,EAAWoQ,EAASuC,OAC1B,IAAIyT,EAAS5V,EAAMpQ,IAAIJ,GACvB,IAAKomB,EAAQ,CAEXA,EAAS,CACP7iC,SAFe2sB,GAAgBC,EAAQC,GAGvCglC,YAAahlC,EAAS4C,QAAO/rB,IAAMA,EAAE2V,cAAc8E,SAAS,YAE9D8O,EAAMxmB,IAAIgW,EAAUomB,EACrB,CACD,OAAOA,CACR,CAED,MAAMkvB,GAAcp2D,GAASS,EAAST,IACjCI,OAAO0jC,oBAAoB9jC,GAAOshC,QAAO,CAACC,EAAKt+B,IAAQs+B,GAAOr8B,EAAWlF,EAAMiD,MAAO,GCzW3F,MAAMszD,GAAkB,CAAC,MAAO,SAAU,OAAQ,QAAS,aAC3D,SAASC,GAAqBhc,EAAUruC,GACtC,MAAoB,QAAbquC,GAAmC,WAAbA,IAAiE,IAAvC+b,GAAgBrzD,QAAQs3C,IAA6B,MAATruC,CACpG,CAED,SAASsqD,GAAcC,EAAIC,GACzB,OAAO,SAASvxD,EAAGC,GACjB,OAAOD,EAAEsxD,KAAQrxD,EAAEqxD,GACftxD,EAAEuxD,GAAMtxD,EAAEsxD,GACVvxD,EAAEsxD,GAAMrxD,EAAEqxD,GAEjB,CAED,SAASE,GAAqBrzC,GAC5B,MAAM3B,EAAQ2B,EAAQ3B,MAChBgiB,EAAmBhiB,EAAMxe,QAAQ8f,UAEvCtB,EAAM8nC,cAAc,eACpBuJ,EAAarvB,GAAoBA,EAAiBizB,WAAY,CAACtzC,GAAU3B,EAC1E,CAED,SAASk1C,GAAoBvzC,GAC3B,MAAM3B,EAAQ2B,EAAQ3B,MAChBgiB,EAAmBhiB,EAAMxe,QAAQ8f,UACvC+vC,EAAarvB,GAAoBA,EAAiBmzB,WAAY,CAACxzC,GAAU3B,EAC1E,CAMD,SAASo1C,GAAUzxD,GAYjB,OAXIoyB,MAAqC,kBAATpyB,EAC9BA,EAAOqyB,SAASq/B,eAAe1xD,GACtBA,GAAQA,EAAKvD,SAEtBuD,EAAOA,EAAK,IAGVA,GAAQA,EAAK+kB,SAEf/kB,EAAOA,EAAK+kB,QAEP/kB,CACR,CAED,MAAM2xD,GAAY,CAAC,EACbC,GAAYl0D,IAChB,MAAMqnB,EAAS0sC,GAAU/zD,GACzB,OAAO7C,OAAOohB,OAAO01C,IAAWpjC,QAAQrjB,GAAMA,EAAE6Z,SAAWA,IAAQyW,KAAK,EAG1E,SAASq2B,GAAgBhzD,EAAK4E,EAAOqmC,GACnC,MAAMttC,EAAO3B,OAAO2B,KAAKqC,GACzB,IAAK,MAAMnB,KAAOlB,EAAM,CACtB,MAAMs1D,GAAUp0D,EAChB,GAAIo0D,GAAUruD,EAAO,CACnB,MAAMhJ,EAAQoE,EAAInB,UACXmB,EAAInB,IACPosC,EAAO,GAAKgoB,EAASruD,KACvB5E,EAAIizD,EAAShoB,GAAQrvC,EAExB,CACF,CACF,CA+BD,MAAMs3D,GAEJjwB,gBAAkB,KAAA/gB,GAAA,GAClB+gB,iBAAmB,KAAA6vB,GAAA,GACnB7vB,iBAAmB,KAAA5kB,GAAA,GACnB4kB,gBAAkB,KAAAmS,GAAA,GAClBnS,uBACAA,gBAAkB,KAAA8vB,GAAA,GAElB,eAAO5G,GACL/W,GAASxuC,OAAOH,WAChB0sD,IACD,CAED,iBAAOrG,GACL1X,GAAS5X,UAAU/2B,WACnB0sD,IACD,CAGDl5C,WAAAA,CAAY9Y,EAAMiyD,GAChB,MAAM/zB,EAASjlB,KAAKilB,OAAS,IAAI2xB,GAAOoC,GAClCC,EAAgBT,GAAUzxD,GAC1BmyD,EAAgBP,GAASM,GAC/B,GAAIC,EACF,MAAM,IAAIlkC,MACR,4CAA+CkkC,EAAc53D,GAA7D,kDACgD43D,EAAcptC,OAAOxqB,GAAK,oBAI9E,MAAMsD,EAAUqgC,EAAOqH,eAAerH,EAAOwyB,oBAAqBz3C,KAAK+L,cAEvE/L,KAAKgF,SAAW,IAAKigB,EAAOjgB,UC/IzB,SAAyB8G,GAC9B,OAAKqN,MAAiD,qBAApBggC,iBAAmCrtC,aAAkBqtC,gBAC9EzX,GAEF4C,EACR,CD0I2C8U,CAAgBH,IACxDj5C,KAAKgF,SAASy8B,aAAaxc,GAE3B,MAAMlgB,EAAU/E,KAAKgF,SAASs8B,eAAe2X,EAAer0D,EAAQ+2B,aAC9D7P,EAAS/G,GAAWA,EAAQ+G,OAC5BK,EAASL,GAAUA,EAAOK,OAC1BnC,EAAQ8B,GAAUA,EAAO9B,MAE/BhK,KAAK1e,GAAKD,IACV2e,KAAK0F,IAAMX,EACX/E,KAAK8L,OAASA,EACd9L,KAAKgK,MAAQA,EACbhK,KAAKmM,OAASA,EACdnM,KAAKq5C,SAAWz0D,EAIhBob,KAAKs5C,aAAet5C,KAAK2b,YACzB3b,KAAKigC,QAAU,GACfjgC,KAAKu5C,UAAY,GACjBv5C,KAAK6nB,aAAUj1B,EACfoN,KAAK0/B,MAAQ,GACb1/B,KAAK2L,6BAA0B/Y,EAC/BoN,KAAKyuB,eAAY77B,EACjBoN,KAAKoiB,QAAU,GACfpiB,KAAKw5C,gBAAa5mD,EAClBoN,KAAKy5C,WAAa,CAAC,EAEnBz5C,KAAK05C,0BAAuB9mD,EAC5BoN,KAAK25C,gBAAkB,GACvB35C,KAAKyG,OAAS,CAAC,EACfzG,KAAK45C,SAAW,IAAI1F,GACpBl0C,KAAKglC,SAAW,CAAC,EACjBhlC,KAAK65C,eAAiB,CAAC,EACvB75C,KAAK85C,UAAW,EAChB95C,KAAK4vB,yBAAsBh9B,EAC3BoN,KAAKypB,cAAW72B,EAChBoN,KAAK+5C,UxC5IF,SAA4Cj3D,EAA8BilB,GAC/E,IAAIiyC,EACJ,OAAO,WAAyB,2BAAbj3D,EAAW,yBAAXA,EAAW,gBAO5B,OANIglB,GACFkyC,aAAaD,GACbA,EAAUE,WAAWp3D,EAAIilB,EAAOhlB,IAEhCD,EAAGG,MAAwB+c,KAAMjd,GAE5BglB,EAEV,CwCiIoBoyC,EAASp0C,GAAQ/F,KAAKukB,OAAOxe,IAAOnhB,EAAQw1D,aAAe,GAC5Ep6C,KAAKixB,aAAe,GAGpBynB,GAAU14C,KAAK1e,IAAM0e,KAEhB+E,GAAY+G,GASjBoa,GAAStD,OAAO5iB,KAAM,WAAYo4C,IAClClyB,GAAStD,OAAO5iB,KAAM,WAAYs4C,IAElCt4C,KAAKq6C,cACDr6C,KAAK85C,UACP95C,KAAKukB,UATLxS,QAAQgkC,MAAM,oEAWjB,CAED,eAAIp6B,GACF,MAAO/2B,SAAS,YAAC+2B,EAAW,oBAAEzV,GAAoB,MAAE8D,EAAK,OAAEmC,EAAM,aAAEmtC,GAAgBt5C,KACnF,OAAKze,EAAco6B,GAKfzV,GAAuBozC,EAElBA,EAIFntC,EAASnC,EAAQmC,EAAS,KATxBwP,CAUV,CAED,QAAIxQ,GACF,OAAOnL,KAAKilB,OAAO9Z,IACpB,CAED,QAAIA,CAAKA,GACPnL,KAAKilB,OAAO9Z,KAAOA,CACpB,CAED,WAAIvmB,GACF,OAAOob,KAAKq5C,QACb,CAED,WAAIz0D,CAAQA,GACVob,KAAKilB,OAAOrgC,QAAUA,CACvB,CAED,YAAIo2C,GACF,OAAOA,EACR,CAKDqf,WAAAA,GAeE,OAbAr6C,KAAKkrC,cAAc,cAEflrC,KAAKpb,QAAQ2hB,WACfvG,KAAKqI,SAELiU,GAAYtc,KAAMA,KAAKpb,QAAQkgB,kBAGjC9E,KAAKs6C,aAGLt6C,KAAKkrC,cAAc,aAEZlrC,IACR,CAEDk3C,KAAAA,GAEE,OADArrC,GAAY7L,KAAK8L,OAAQ9L,KAAK0F,KACvB1F,IACR,CAEDkjB,IAAAA,GAEE,OADAgD,GAAShD,KAAKljB,MACPA,IACR,CAODqI,MAAAA,CAAO2B,EAAOmC,GACP+Z,GAAShE,QAAQliB,MAGpBA,KAAKu6C,kBAAoB,CAACvwC,QAAOmC,UAFjCnM,KAAKw6C,QAAQxwC,EAAOmC,EAIvB,CAEDquC,OAAAA,CAAQxwC,EAAOmC,GACb,MAAMvnB,EAAUob,KAAKpb,QACfknB,EAAS9L,KAAK8L,OACd6P,EAAc/2B,EAAQshB,qBAAuBlG,KAAK2b,YAClD8+B,EAAUz6C,KAAKgF,SAASwW,eAAe1P,EAAQ9B,EAAOmC,EAAQwP,GAC9D++B,EAAW91D,EAAQkgB,kBAAoB9E,KAAKgF,SAASC,sBACrDc,EAAO/F,KAAKgK,MAAQ,SAAW,SAErChK,KAAKgK,MAAQywC,EAAQzwC,MACrBhK,KAAKmM,OAASsuC,EAAQtuC,OACtBnM,KAAKs5C,aAAet5C,KAAK2b,YACpBW,GAAYtc,KAAM06C,GAAU,KAIjC16C,KAAKkrC,cAAc,SAAU,CAACpkD,KAAM2zD,IAEpChG,EAAa7vD,EAAQ+1D,SAAU,CAAC36C,KAAMy6C,GAAUz6C,MAE5CA,KAAK85C,UACH95C,KAAK+5C,UAAUh0C,IAEjB/F,KAAK46C,SAGV,CAEDC,mBAAAA,GAIE33D,EAHgB8c,KAAKpb,QACS6hB,QAAU,CAAC,GAErB,CAACq0C,EAAarJ,KAChCqJ,EAAYx5D,GAAKmwD,CAAM,GAE1B,CAKDsJ,mBAAAA,GACE,MAAMn2D,EAAUob,KAAKpb,QACfo2D,EAAYp2D,EAAQ6hB,OACpBA,EAASzG,KAAKyG,OACdw0C,EAAUr5D,OAAO2B,KAAKkjB,GAAQqc,QAAO,CAACl9B,EAAKtE,KAC/CsE,EAAItE,IAAM,EACHsE,IACN,CAAC,GACJ,IAAIyG,EAAQ,GAER2uD,IACF3uD,EAAQA,EAAMwlC,OACZjwC,OAAO2B,KAAKy3D,GAAW72D,KAAK7C,IAC1B,MAAMm0D,EAAeuF,EAAU15D,GACzBqM,EAAO6nD,GAAcl0D,EAAIm0D,GACzByF,EAAoB,MAATvtD,EACX2mC,EAAwB,MAAT3mC,EACrB,MAAO,CACL/I,QAAS6wD,EACT0F,UAAWD,EAAW,YAAc5mB,EAAe,SAAW,OAC9D8mB,MAAOF,EAAW,eAAiB5mB,EAAe,WAAa,SAChE,MAKPpxC,EAAKmJ,GAAQtF,IACX,MAAM0uD,EAAe1uD,EAAKnC,QACpBtD,EAAKm0D,EAAan0D,GAClBqM,EAAO6nD,GAAcl0D,EAAIm0D,GACzB4F,EAAY94D,EAAekzD,EAAa9zD,KAAMoF,EAAKq0D,YAE3BxoD,IAA1B6iD,EAAazZ,UAA0Bgc,GAAqBvC,EAAazZ,SAAUruC,KAAUqqD,GAAqBjxD,EAAKo0D,aACzH1F,EAAazZ,SAAWj1C,EAAKo0D,WAG/BF,EAAQ35D,IAAM,EACd,IAAIklB,EAAQ,KACZ,GAAIllB,KAAMmlB,GAAUA,EAAOnlB,GAAIK,OAAS05D,EACtC70C,EAAQC,EAAOnlB,OACV,CAELklB,EAAQ,IADWw0B,GAASqY,SAASgI,GAC7B,CAAe,CACrB/5D,KACAK,KAAM05D,EACN31C,IAAK1F,KAAK0F,IACVtC,MAAOpD,OAETyG,EAAOD,EAAMllB,IAAMklB,CACpB,CAEDA,EAAM60B,KAAKoa,EAAc7wD,EAAQ,IAGnC1B,EAAK+3D,GAAS,CAACK,EAAYh6D,KACpBg6D,UACI70C,EAAOnlB,EACf,IAGH4B,EAAKujB,GAASD,IACZq3B,GAAQ1Y,UAAUnlB,KAAMwG,EAAOA,EAAM5hB,SACrCi5C,GAAQmC,OAAOhgC,KAAMwG,EAAM,GAE9B,CAKD+0C,eAAAA,GACE,MAAMh1B,EAAWvmB,KAAKu5C,UAChB7oB,EAAU1wB,KAAKmL,KAAKtG,SAASrhB,OAC7BitC,EAAUlK,EAAS/iC,OAGzB,GADA+iC,EAASuL,MAAK,CAAClrC,EAAGC,IAAMD,EAAE5C,MAAQ6C,EAAE7C,QAChCysC,EAAUC,EAAS,CACrB,IAAK,IAAIrtC,EAAIqtC,EAASrtC,EAAIotC,IAAWptC,EACnC2c,KAAKw7C,oBAAoBn4D,GAE3BkjC,EAASr6B,OAAOwkC,EAASD,EAAUC,EACpC,CACD1wB,KAAK25C,gBAAkBpzB,EAASvkC,MAAM,GAAG8vC,KAAKmmB,GAAc,QAAS,SACtE,CAKDwD,2BAAAA,GACE,MAAOlC,UAAWhzB,EAAUpb,MAAM,SAACtG,IAAa7E,KAC5CumB,EAAS/iC,OAASqhB,EAASrhB,eACtBwc,KAAK6nB,QAEdtB,EAASp6B,SAAQ,CAACgB,EAAMnJ,KACmC,IAArD6gB,EAASyQ,QAAO9vB,GAAKA,IAAM2H,EAAKitC,WAAU52C,QAC5Cwc,KAAKw7C,oBAAoBx3D,EAC1B,GAEJ,CAED03D,wBAAAA,GACE,MAAMC,EAAiB,GACjB92C,EAAW7E,KAAKmL,KAAKtG,SAC3B,IAAIxhB,EAAGO,EAIP,IAFAoc,KAAKy7C,8BAEAp4D,EAAI,EAAGO,EAAOihB,EAASrhB,OAAQH,EAAIO,EAAMP,IAAK,CACjD,MAAM8mC,EAAUtlB,EAASxhB,GACzB,IAAI8J,EAAO6S,KAAKkrB,eAAe7nC,GAC/B,MAAM1B,EAAOwoC,EAAQxoC,MAAQqe,KAAKilB,OAAOtjC,KAazC,GAXIwL,EAAKxL,MAAQwL,EAAKxL,OAASA,IAC7Bqe,KAAKw7C,oBAAoBn4D,GACzB8J,EAAO6S,KAAKkrB,eAAe7nC,IAE7B8J,EAAKxL,KAAOA,EACZwL,EAAK0Y,UAAYskB,EAAQtkB,WAAayvC,GAAa3zD,EAAMqe,KAAKpb,SAC9DuI,EAAKyuD,MAAQzxB,EAAQyxB,OAAS,EAC9BzuD,EAAKnJ,MAAQX,EACb8J,EAAKghC,MAAQ,GAAKhE,EAAQgE,MAC1BhhC,EAAKqb,QAAUxI,KAAK63B,iBAAiBx0C,GAEjC8J,EAAKu6B,WACPv6B,EAAKu6B,WAAWwC,YAAY7mC,GAC5B8J,EAAKu6B,WAAWoC,iBACX,CACL,MAAM+xB,EAAkB7gB,GAASkY,cAAcvxD,IACzC,mBAACgoC,EAAkB,gBAAEC,GAAmB9hB,GAASjD,SAASljB,GAChEC,OAAO8M,OAAOmtD,EAAiB,CAC7BjyB,gBAAiBoR,GAASC,WAAWrR,GACrCD,mBAAoBA,GAAsBqR,GAASC,WAAWtR,KAEhEx8B,EAAKu6B,WAAa,IAAIm0B,EAAgB77C,KAAM3c,GAC5Cs4D,EAAez1D,KAAKiH,EAAKu6B,WAC1B,CACF,CAGD,OADA1nB,KAAKu7C,kBACEI,CACR,CAMDG,cAAAA,GACE54D,EAAK8c,KAAKmL,KAAKtG,UAAU,CAACslB,EAASpmC,KACjCic,KAAKkrB,eAAennC,GAAc2jC,WAAW2D,OAAO,GACnDrrB,KACJ,CAKDqrB,KAAAA,GACErrB,KAAK87C,iBACL97C,KAAKkrC,cAAc,QACpB,CAED3mB,MAAAA,CAAOxe,GACL,MAAMkf,EAASjlB,KAAKilB,OAEpBA,EAAOV,SACP,MAAM3/B,EAAUob,KAAKq5C,SAAWp0B,EAAOqH,eAAerH,EAAOwyB,oBAAqBz3C,KAAK+L,cACjFgwC,EAAgB/7C,KAAK4vB,qBAAuBhrC,EAAQ8f,UAU1D,GARA1E,KAAKg8C,gBACLh8C,KAAKi8C,sBACLj8C,KAAKk8C,uBAILl8C,KAAK45C,SAASjF,cAEuD,IAAjE30C,KAAKkrC,cAAc,eAAgB,CAACnlC,OAAM2uC,YAAY,IACxD,OAIF,MAAMiH,EAAiB37C,KAAK07C,2BAE5B17C,KAAKkrC,cAAc,wBAGnB,IAAI7K,EAAa,EACjB,IAAK,IAAIh9C,EAAI,EAAGO,EAAOoc,KAAKmL,KAAKtG,SAASrhB,OAAQH,EAAIO,EAAMP,IAAK,CAC/D,MAAM,WAACqkC,GAAc1nB,KAAKkrB,eAAe7nC,GACnCgoC,GAAS0wB,IAAyD,IAAxCJ,EAAej3D,QAAQgjC,GAGvDA,EAAWoE,sBAAsBT,GACjCgV,EAAan5C,KAAK6B,KAAK2+B,EAAWuG,iBAAkBoS,EACrD,CACDA,EAAargC,KAAKm8C,YAAcv3D,EAAQy5C,OAAO31B,YAAc23B,EAAa,EAC1ErgC,KAAKo8C,cAAc/b,GAGd0b,GAGH74D,EAAKy4D,GAAiBj0B,IACpBA,EAAW2D,OAAO,IAItBrrB,KAAKq8C,gBAAgBt2C,GAGrB/F,KAAKkrC,cAAc,cAAe,CAACnlC,SAEnC/F,KAAKigC,QAAQnO,KAAKmmB,GAAc,IAAK,SAGrC,MAAM,QAAC71B,EAAO,WAAEo3B,GAAcx5C,KAC1Bw5C,EACFx5C,KAAKs8C,cAAc9C,GAAY,GACtBp3B,EAAQ5+B,QACjBwc,KAAKu8C,mBAAmBn6B,EAASA,GAAS,GAG5CpiB,KAAK46C,QACN,CAKDoB,aAAAA,GACE94D,EAAK8c,KAAKyG,QAASD,IACjBq3B,GAAQsC,UAAUngC,KAAMwG,EAAM,IAGhCxG,KAAK66C,sBACL76C,KAAK+6C,qBACN,CAKDkB,mBAAAA,GACE,MAAMr3D,EAAUob,KAAKpb,QACf43D,EAAiB,IAAIjwD,IAAI3K,OAAO2B,KAAKyc,KAAKy5C,aAC1CgD,EAAY,IAAIlwD,IAAI3H,EAAQugB,QAE7Bxe,EAAU61D,EAAgBC,MAAgBz8C,KAAK05C,uBAAyB90D,EAAQ2hB,aAEnFvG,KAAK08C,eACL18C,KAAKs6C,aAER,CAKD4B,oBAAAA,GACE,MAAM,eAACrC,GAAkB75C,KACnB28C,EAAU38C,KAAK48C,0BAA4B,GACjD,IAAK,MAAM,OAAC73B,EAAM,MAAEv6B,EAAK,MAAE+C,KAAUovD,EAAS,CAE5C/D,GAAgBiB,EAAgBrvD,EADR,oBAAXu6B,GAAgCx3B,EAAQA,EAEtD,CACF,CAKDqvD,sBAAAA,GACE,MAAM3rB,EAAejxB,KAAKixB,aAC1B,IAAKA,IAAiBA,EAAaztC,OACjC,OAGFwc,KAAKixB,aAAe,GACpB,MAAM4rB,EAAe78C,KAAKmL,KAAKtG,SAASrhB,OAClCs5D,EAAWjP,GAAQ,IAAIthD,IAC3B0kC,EACG3b,QAAOrjB,GAAKA,EAAE,KAAO47C,IACrB1pD,KAAI,CAAC8N,EAAG5O,IAAMA,EAAI,IAAM4O,EAAE/F,OAAO,GAAG+oB,KAAK,QAGxC8nC,EAAYD,EAAQ,GAC1B,IAAK,IAAIz5D,EAAI,EAAGA,EAAIw5D,EAAcx5D,IAChC,IAAKsD,EAAUo2D,EAAWD,EAAQz5D,IAChC,OAGJ,OAAO3B,MAAM+K,KAAKswD,GACf54D,KAAI8N,GAAKA,EAAElM,MAAM,OACjB5B,KAAIyC,IAAK,CAAEm+B,OAAQn+B,EAAE,GAAI4D,OAAQ5D,EAAE,GAAI2G,OAAQ3G,EAAE,MACrD,CAODw1D,aAAAA,CAAc/b,GACZ,IAA+D,IAA3DrgC,KAAKkrC,cAAc,eAAgB,CAACwJ,YAAY,IAClD,OAGF7W,GAAQtZ,OAAOvkB,KAAMA,KAAKgK,MAAOhK,KAAKmM,OAAQk0B,GAE9C,MAAMtyB,EAAO/N,KAAKyuB,UACZuuB,EAASjvC,EAAK/D,OAAS,GAAK+D,EAAK5B,QAAU,EAEjDnM,KAAKigC,QAAU,GACf/8C,EAAK8c,KAAK0/B,OAAQ7kB,IACZmiC,GAA2B,cAAjBniC,EAAImhB,WAOdnhB,EAAIsK,WACNtK,EAAIsK,YAENnlB,KAAKigC,QAAQ/5C,QAAQ20B,EAAIolB,WAAU,GAClCjgC,MAEHA,KAAKigC,QAAQ9zC,SAAQ,CAACpF,EAAM/C,KAC1B+C,EAAKk2D,KAAOj5D,CAAK,IAGnBgc,KAAKkrC,cAAc,cACpB,CAODmR,eAAAA,CAAgBt2C,GACd,IAA6E,IAAzE/F,KAAKkrC,cAAc,uBAAwB,CAACnlC,OAAM2uC,YAAY,IAAlE,CAIA,IAAK,IAAIrxD,EAAI,EAAGO,EAAOoc,KAAKmL,KAAKtG,SAASrhB,OAAQH,EAAIO,IAAQP,EAC5D2c,KAAKkrB,eAAe7nC,GAAGqkC,WAAWvC,YAGpC,IAAK,IAAI9hC,EAAI,EAAGO,EAAOoc,KAAKmL,KAAKtG,SAASrhB,OAAQH,EAAIO,IAAQP,EAC5D2c,KAAKk9C,eAAe75D,EAAGqD,EAAWqf,GAAQA,EAAK,CAAChiB,aAAcV,IAAM0iB,GAGtE/F,KAAKkrC,cAAc,sBAAuB,CAACnlC,QAV1C,CAWF,CAODm3C,cAAAA,CAAel5D,EAAO+hB,GACpB,MAAM5Y,EAAO6S,KAAKkrB,eAAelnC,GAC3BjB,EAAO,CAACoK,OAAMnJ,QAAO+hB,OAAM2uC,YAAY,IAEW,IAApD10C,KAAKkrC,cAAc,sBAAuBnoD,KAI9CoK,EAAKu6B,WAAW5F,QAAQ/b,GAExBhjB,EAAK2xD,YAAa,EAClB10C,KAAKkrC,cAAc,qBAAsBnoD,GAC1C,CAED63D,MAAAA,IACiE,IAA3D56C,KAAKkrC,cAAc,eAAgB,CAACwJ,YAAY,MAIhDxuB,GAASl/B,IAAIgZ,MACXA,KAAK85C,WAAa5zB,GAAShE,QAAQliB,OACrCkmB,GAAS17B,MAAMwV,OAGjBA,KAAKmiB,OACLi2B,GAAqB,CAACh1C,MAAOpD,QAEhC,CAEDmiB,IAAAA,GACE,IAAI9+B,EACJ,GAAI2c,KAAKu6C,kBAAmB,CAC1B,MAAM,MAACvwC,EAAK,OAAEmC,GAAUnM,KAAKu6C,kBAC7Bv6C,KAAKw6C,QAAQxwC,EAAOmC,GACpBnM,KAAKu6C,kBAAoB,IAC1B,CAGD,GAFAv6C,KAAKk3C,QAEDl3C,KAAKgK,OAAS,GAAKhK,KAAKmM,QAAU,EACpC,OAGF,IAA6D,IAAzDnM,KAAKkrC,cAAc,aAAc,CAACwJ,YAAY,IAChD,OAMF,MAAMyI,EAASn9C,KAAKigC,QACpB,IAAK58C,EAAI,EAAGA,EAAI85D,EAAO35D,QAAU25D,EAAO95D,GAAG68C,GAAK,IAAK78C,EACnD85D,EAAO95D,GAAG8+B,KAAKniB,KAAKyuB,WAMtB,IAHAzuB,KAAKo9C,gBAGE/5D,EAAI85D,EAAO35D,SAAUH,EAC1B85D,EAAO95D,GAAG8+B,KAAKniB,KAAKyuB,WAGtBzuB,KAAKkrC,cAAc,YACpB,CAKD1kB,sBAAAA,CAAuBF,GACrB,MAAMC,EAAWvmB,KAAK25C,gBAChBt/B,EAAS,GACf,IAAIh3B,EAAGO,EAEP,IAAKP,EAAI,EAAGO,EAAO2iC,EAAS/iC,OAAQH,EAAIO,IAAQP,EAAG,CACjD,MAAM8J,EAAOo5B,EAASljC,GACjBijC,IAAiBn5B,EAAKqb,SACzB6R,EAAOn0B,KAAKiH,EAEf,CAED,OAAOktB,CACR,CAMD6hB,4BAAAA,GACE,OAAOl8B,KAAKwmB,wBAAuB,EACpC,CAOD42B,aAAAA,GACE,IAAqE,IAAjEp9C,KAAKkrC,cAAc,qBAAsB,CAACwJ,YAAY,IACxD,OAGF,MAAMnuB,EAAWvmB,KAAKk8B,+BACtB,IAAK,IAAI74C,EAAIkjC,EAAS/iC,OAAS,EAAGH,GAAK,IAAKA,EAC1C2c,KAAKq9C,aAAa92B,EAASljC,IAG7B2c,KAAKkrC,cAAc,oBACpB,CAODmS,YAAAA,CAAalwD,GACX,MAAMuY,EAAM1F,KAAK0F,IACXwI,EAAO/gB,EAAKkhC,MACZivB,GAAWpvC,EAAKogB,SAChBvgB,EAvrBV,SAAwB5gB,GACtB,MAAM,OAACc,EAAM,OAAEC,GAAUf,EACzB,GAAIc,GAAUC,EACZ,MAAO,CACL6a,KAAM9a,EAAO8a,KACbF,MAAO5a,EAAO4a,MACdD,IAAK1a,EAAO0a,IACZE,OAAQ5a,EAAO4a,OAGpB,CA6qBgBy0C,CAAepwD,IAAS6S,KAAKyuB,UACpC1rC,EAAO,CACXoK,OACAnJ,MAAOmJ,EAAKnJ,MACZ0wD,YAAY,IAGwC,IAAlD10C,KAAKkrC,cAAc,oBAAqBnoD,KAIxCu6D,GACFrvC,GAASvI,EAAK,CACZqD,MAAoB,IAAdmF,EAAKnF,KAAiB,EAAIgF,EAAKhF,KAAOmF,EAAKnF,KACjDF,OAAsB,IAAfqF,EAAKrF,MAAkB7I,KAAKgK,MAAQ+D,EAAKlF,MAAQqF,EAAKrF,MAC7DD,KAAkB,IAAbsF,EAAKtF,IAAgB,EAAImF,EAAKnF,IAAMsF,EAAKtF,IAC9CE,QAAwB,IAAhBoF,EAAKpF,OAAmB9I,KAAKmM,OAAS4B,EAAKjF,OAASoF,EAAKpF,SAIrE3b,EAAKu6B,WAAWvF,OAEZm7B,GACFnvC,GAAWzI,GAGb3iB,EAAK2xD,YAAa,EAClB10C,KAAKkrC,cAAc,mBAAoBnoD,GACxC,CAODs5C,aAAAA,CAAcvuB,GACZ,OAAOD,GAAeC,EAAO9N,KAAKyuB,UAAWzuB,KAAKm8C,YACnD,CAEDqB,yBAAAA,CAA0Bl0D,EAAGyc,EAAMnhB,EAASw3C,GAC1C,MAAMrX,EAAS04B,GAAYngB,MAAMv3B,GACjC,MAAsB,oBAAXgf,EACFA,EAAO/kB,KAAM1W,EAAG1E,EAASw3C,GAG3B,EACR,CAEDlR,cAAAA,CAAennC,GACb,MAAMomC,EAAUnqB,KAAKmL,KAAKtG,SAAS9gB,GAC7BwiC,EAAWvmB,KAAKu5C,UACtB,IAAIpsD,EAAOo5B,EAASjR,QAAO9vB,GAAKA,GAAKA,EAAE40C,WAAajQ,IAAS5H,MAoB7D,OAlBKp1B,IACHA,EAAO,CACLxL,KAAM,KACNwpB,KAAM,GACNgf,QAAS,KACTzC,WAAY,KACZiG,OAAQ,KACRpD,QAAS,KACTE,QAAS,KACTmxB,MAAOzxB,GAAWA,EAAQyxB,OAAS,EACnC53D,MAAOD,EACPq2C,SAAUjQ,EACVz8B,QAAS,GACTF,SAAS,GAEX+4B,EAASrgC,KAAKiH,IAGTA,CACR,CAED4e,UAAAA,GACE,OAAO/L,KAAKypB,WAAazpB,KAAKypB,SAAWnX,GAAc,KAAM,CAAClP,MAAOpD,KAAMre,KAAM,UAClF,CAED+7D,sBAAAA,GACE,OAAO19C,KAAKk8B,+BAA+B14C,MAC5C,CAEDq0C,gBAAAA,CAAiB9zC,GACf,MAAMomC,EAAUnqB,KAAKmL,KAAKtG,SAAS9gB,GACnC,IAAKomC,EACH,OAAO,EAGT,MAAMh9B,EAAO6S,KAAKkrB,eAAennC,GAIjC,MAA8B,mBAAhBoJ,EAAKwgC,QAAwBxgC,EAAKwgC,QAAUxD,EAAQwD,MACnE,CAEDgwB,oBAAAA,CAAqB55D,EAAcykB,GACpBxI,KAAKkrB,eAAennC,GAC5B4pC,QAAUnlB,CAChB,CAED8uB,oBAAAA,CAAqBtzC,GACnBgc,KAAK65C,eAAe71D,IAAUgc,KAAK65C,eAAe71D,EACnD,CAED4xC,iBAAAA,CAAkB5xC,GAChB,OAAQgc,KAAK65C,eAAe71D,EAC7B,CAKD45D,iBAAAA,CAAkB75D,EAAc6qC,EAAWpmB,GACzC,MAAMzC,EAAOyC,EAAU,OAAS,OAC1Brb,EAAO6S,KAAKkrB,eAAennC,GAC3Bw9B,EAAQp0B,EAAKu6B,WAAW4H,wBAAmB18B,EAAWmT,GAExDtf,EAAQmoC,IACVzhC,EAAKge,KAAKyjB,GAAWjB,QAAUnlB,EAC/BxI,KAAKukB,WAELvkB,KAAK29C,qBAAqB55D,EAAcykB,GAExC+Y,EAAMgD,OAAOp3B,EAAM,CAACqb,YACpBxI,KAAKukB,QAAQ7e,GAAQA,EAAI3hB,eAAiBA,EAAegiB,OAAOnT,IAEnE,CAED6V,IAAAA,CAAK1kB,EAAc6qC,GACjB5uB,KAAK49C,kBAAkB75D,EAAc6qC,GAAW,EACjD,CAEDtmB,IAAAA,CAAKvkB,EAAc6qC,GACjB5uB,KAAK49C,kBAAkB75D,EAAc6qC,GAAW,EACjD,CAKD4sB,mBAAAA,CAAoBz3D,GAClB,MAAMoJ,EAAO6S,KAAKu5C,UAAUx1D,GACxBoJ,GAAQA,EAAKu6B,YACfv6B,EAAKu6B,WAAW4D,kBAEXtrB,KAAKu5C,UAAUx1D,EACvB,CAED85D,KAAAA,GACE,IAAIx6D,EAAGO,EAIP,IAHAoc,KAAKkjB,OACLgD,GAAS9C,OAAOpjB,MAEX3c,EAAI,EAAGO,EAAOoc,KAAKmL,KAAKtG,SAASrhB,OAAQH,EAAIO,IAAQP,EACxD2c,KAAKw7C,oBAAoBn4D,EAE5B,CAEDy6D,OAAAA,GACE99C,KAAKkrC,cAAc,iBACnB,MAAM,OAACp/B,EAAM,IAAEpG,GAAO1F,KAEtBA,KAAK69C,QACL79C,KAAKilB,OAAOgyB,aAERnrC,IACF9L,KAAK08C,eACL7wC,GAAYC,EAAQpG,GACpB1F,KAAKgF,SAASu8B,eAAe77B,GAC7B1F,KAAK8L,OAAS,KACd9L,KAAK0F,IAAM,aAGNgzC,GAAU14C,KAAK1e,IAEtB0e,KAAKkrC,cAAc,eACpB,CAED6S,aAAAA,GACE,OAAO/9C,KAAK8L,OAAOkyC,aAAaj7D,UACjC,CAKDu3D,UAAAA,GACEt6C,KAAKi+C,iBACDj+C,KAAKpb,QAAQ2hB,WACfvG,KAAKk+C,uBAELl+C,KAAK85C,UAAW,CAEnB,CAKDmE,cAAAA,GACE,MAAMhyD,EAAY+T,KAAKy5C,WACjBz0C,EAAWhF,KAAKgF,SAEhBm5C,EAAOA,CAACx8D,EAAMmK,KAClBkZ,EAASgY,iBAAiBhd,KAAMre,EAAMmK,GACtCG,EAAUtK,GAAQmK,CAAQ,EAGtBA,EAAWA,CAACxC,EAAG9D,EAAGE,KACtB4D,EAAEyxB,QAAUv1B,EACZ8D,EAAE0xB,QAAUt1B,EACZsa,KAAKs8C,cAAchzD,EAAE,EAGvBpG,EAAK8c,KAAKpb,QAAQugB,QAASxjB,GAASw8D,EAAKx8D,EAAMmK,IAChD,CAKDoyD,oBAAAA,GACOl+C,KAAK05C,uBACR15C,KAAK05C,qBAAuB,CAAC,GAE/B,MAAMztD,EAAY+T,KAAK05C,qBACjB10C,EAAWhF,KAAKgF,SAEhBm5C,EAAOA,CAACx8D,EAAMmK,KAClBkZ,EAASgY,iBAAiBhd,KAAMre,EAAMmK,GACtCG,EAAUtK,GAAQmK,CAAQ,EAEtBsyD,EAAUA,CAACz8D,EAAMmK,KACjBG,EAAUtK,KACZqjB,EAASiY,oBAAoBjd,KAAMre,EAAMmK,UAClCG,EAAUtK,GAClB,EAGGmK,EAAWA,CAACke,EAAOmC,KACnBnM,KAAK8L,QACP9L,KAAKqI,OAAO2B,EAAOmC,EACpB,EAGH,IAAIkyC,EACJ,MAAMvE,EAAWA,KACfsE,EAAQ,SAAUtE,GAElB95C,KAAK85C,UAAW,EAChB95C,KAAKqI,SAEL81C,EAAK,SAAUryD,GACfqyD,EAAK,SAAUE,EAAS,EAG1BA,EAAWA,KACTr+C,KAAK85C,UAAW,EAEhBsE,EAAQ,SAAUtyD,GAGlBkU,KAAK69C,QACL79C,KAAKw6C,QAAQ,EAAG,GAEhB2D,EAAK,SAAUrE,EAAS,EAGtB90C,EAASw8B,WAAWxhC,KAAK8L,QAC3BguC,IAEAuE,GAEH,CAKD3B,YAAAA,GACEx5D,EAAK8c,KAAKy5C,YAAY,CAAC3tD,EAAUnK,KAC/Bqe,KAAKgF,SAASiY,oBAAoBjd,KAAMre,EAAMmK,EAAS,IAEzDkU,KAAKy5C,WAAa,CAAC,EAEnBv2D,EAAK8c,KAAK05C,sBAAsB,CAAC5tD,EAAUnK,KACzCqe,KAAKgF,SAASiY,oBAAoBjd,KAAMre,EAAMmK,EAAS,IAEzDkU,KAAK05C,0BAAuB9mD,CAC7B,CAED0rD,gBAAAA,CAAiBjyD,EAAO0Z,EAAMmgC,GAC5B,MAAMxyB,EAASwyB,EAAU,MAAQ,SACjC,IAAI/4C,EAAMpG,EAAM1D,EAAGO,EAOnB,IALa,YAATmiB,IACF5Y,EAAO6S,KAAKkrB,eAAe7+B,EAAM,GAAGtI,cACpCoJ,EAAKu6B,WAAW,IAAMhU,EAAS,wBAG5BrwB,EAAI,EAAGO,EAAOyI,EAAM7I,OAAQH,EAAIO,IAAQP,EAAG,CAC9C0D,EAAOsF,EAAMhJ,GACb,MAAMqkC,EAAa3gC,GAAQiZ,KAAKkrB,eAAenkC,EAAKhD,cAAc2jC,WAC9DA,GACFA,EAAWhU,EAAS,cAAc3sB,EAAK+yB,QAAS/yB,EAAKhD,aAAcgD,EAAK/C,MAE3E,CACF,CAMDu6D,iBAAAA,GACE,OAAOv+C,KAAKoiB,SAAW,EACxB,CAMDo8B,iBAAAA,CAAkBC,GAChB,MAAMC,EAAa1+C,KAAKoiB,SAAW,GAC7Bha,EAASq2C,EAAet6D,KAAIw6D,IAA2B,IAA1B,aAAC56D,EAAY,MAAEC,GAAM,EACtD,MAAMmJ,EAAO6S,KAAKkrB,eAAennC,GACjC,IAAKoJ,EACH,MAAM,IAAI6nB,MAAM,6BAA+BjxB,GAGjD,MAAO,CACLA,eACA+1B,QAAS3sB,EAAKge,KAAKnnB,GACnBA,QACD,KAEcP,EAAe2kB,EAAQs2C,KAGtC1+C,KAAKoiB,QAAUha,EAEfpI,KAAKw5C,WAAa,KAClBx5C,KAAKu8C,mBAAmBn0C,EAAQs2C,GAEnC,CAWDxT,aAAAA,CAAcmJ,EAAMtxD,EAAMuyB,GACxB,OAAOtV,KAAK45C,SAASxF,OAAOp0C,KAAMq0C,EAAMtxD,EAAMuyB,EAC/C,CAOD2U,eAAAA,CAAgB20B,GACd,OAA6E,IAAtE5+C,KAAK45C,SAASloB,OAAOpc,QAAO/rB,GAAKA,EAAEirD,OAAOlzD,KAAOs9D,IAAUp7D,MACnE,CAKD+4D,kBAAAA,CAAmBn0C,EAAQs2C,EAAYG,GACrC,MAAMC,EAAe9+C,KAAKpb,QAAQ4gB,MAC5B+1B,EAAOA,CAAC30C,EAAGC,IAAMD,EAAE0uB,QAAO9vB,IAAMqB,EAAEuuD,MAAK1vD,GAAKF,EAAEzB,eAAiB2B,EAAE3B,cAAgByB,EAAExB,QAAU0B,EAAE1B,UAC/F+6D,EAAcxjB,EAAKmjB,EAAYt2C,GAC/B42C,EAAYH,EAASz2C,EAASmzB,EAAKnzB,EAAQs2C,GAE7CK,EAAYv7D,QACdwc,KAAKs+C,iBAAiBS,EAAaD,EAAa/4C,MAAM,GAGpDi5C,EAAUx7D,QAAUs7D,EAAa/4C,MACnC/F,KAAKs+C,iBAAiBU,EAAWF,EAAa/4C,MAAM,EAEvD,CAKDu2C,aAAAA,CAAchzD,EAAGu1D,GACf,MAAM97D,EAAO,CACXy3B,MAAOlxB,EACPu1D,SACAnK,YAAY,EACZuK,YAAaj/C,KAAKq8B,cAAc/yC,IAE5B41D,EAAe1K,IAAYA,EAAO5vD,QAAQugB,QAAUnF,KAAKpb,QAAQugB,QAAQnB,SAAS1a,EAAE66C,OAAOxiD,MAEjG,IAA6D,IAAzDqe,KAAKkrC,cAAc,cAAenoD,EAAMm8D,GAC1C,OAGF,MAAMzwD,EAAUuR,KAAKm/C,aAAa71D,EAAGu1D,EAAQ97D,EAAKk8D,aASlD,OAPAl8D,EAAK2xD,YAAa,EAClB10C,KAAKkrC,cAAc,aAAcnoD,EAAMm8D,IAEnCzwD,GAAW1L,EAAK0L,UAClBuR,KAAK46C,SAGA56C,IACR,CAUDm/C,YAAAA,CAAa71D,EAAGu1D,EAAQI,GACtB,MAAO78B,QAASs8B,EAAa,GAAE,QAAE95D,GAAWob,KAetCo8B,EAAmByiB,EACnBz2C,EAASpI,KAAKo/C,mBAAmB91D,EAAGo1D,EAAYO,EAAa7iB,GAC7DijB,E3ClzBH,SAAuB/1D,GAC5B,MAAkB,YAAXA,EAAE3H,MAAiC,UAAX2H,EAAE3H,MAA+B,gBAAX2H,EAAE3H,IACxD,C2CgzBmB29D,CAAch2D,GACxBi2D,EAnnCV,SAA4Bj2D,EAAGi2D,EAAWN,EAAaI,GACrD,OAAKJ,GAA0B,aAAX31D,EAAE3H,KAGlB09D,EACKE,EAEFj2D,EALE,IAMV,CA2mCqBk2D,CAAmBl2D,EAAG0W,KAAKw5C,WAAYyF,EAAaI,GAElEJ,IAGFj/C,KAAKw5C,WAAa,KAGlB/E,EAAa7vD,EAAQuhB,QAAS,CAAC7c,EAAG8e,EAAQpI,MAAOA,MAE7Cq/C,GACF5K,EAAa7vD,EAAQwhB,QAAS,CAAC9c,EAAG8e,EAAQpI,MAAOA,OAIrD,MAAMvR,GAAWhL,EAAe2kB,EAAQs2C,GAQxC,OAPIjwD,GAAWowD,KACb7+C,KAAKoiB,QAAUha,EACfpI,KAAKu8C,mBAAmBn0C,EAAQs2C,EAAYG,IAG9C7+C,KAAKw5C,WAAa+F,EAEX9wD,CACR,CAUD2wD,kBAAAA,CAAmB91D,EAAGo1D,EAAYO,EAAa7iB,GAC7C,GAAe,aAAX9yC,EAAE3H,KACJ,MAAO,GAGT,IAAKs9D,EAEH,OAAOP,EAGT,MAAMI,EAAe9+C,KAAKpb,QAAQ4gB,MAClC,OAAOxF,KAAKw9C,0BAA0Bl0D,EAAGw1D,EAAa/4C,KAAM+4C,EAAc1iB,EAC3E,EAIH,SAAS2c,KACP,OAAO71D,EAAK41D,GAAMJ,WAAYt1C,GAAUA,EAAMw2C,SAASjF,cACxD,CAED,OAAemE,GEtuCf,SAAS2G,GAAkBryC,EAAiBmqB,EAAqBC,EAAqBkoB,GACpF,MAAMj6D,EAPC4rB,GAOmBjE,EAAIxoB,QAAQ+6D,aAPN,CAAC,aAAc,WAAY,aAAc,aAQzE,MAAMC,GAAiBpoB,EAAcD,GAAe,EAC9CsoB,EAAa34D,KAAK4B,IAAI82D,EAAeF,EAAanoB,EAAc,GAShEuoB,EAAqB5+C,IACzB,MAAM6+C,GAAiBvoB,EAActwC,KAAK4B,IAAI82D,EAAe1+C,IAAQw+C,EAAa,EAClF,OAAO10D,EAAYkW,EAAK,EAAGha,KAAK4B,IAAI82D,EAAeG,GAAe,EAGpE,MAAO,CACLC,WAAYF,EAAkBr6D,EAAEu6D,YAChCC,SAAUH,EAAkBr6D,EAAEw6D,UAC9BC,WAAYl1D,EAAYvF,EAAEy6D,WAAY,EAAGL,GACzCM,SAAUn1D,EAAYvF,EAAE06D,SAAU,EAAGN,GAExC,CAKD,SAASO,GAAW5tD,EAAW6tD,EAAe76D,EAAWE,GACvD,MAAO,CACLF,EAAGA,EAAIgN,EAAItL,KAAK6I,IAAIswD,GACpB36D,EAAGA,EAAI8M,EAAItL,KAAK4H,IAAIuxD,GAEvB,CAiBD,SAASC,GACP56C,EACAoU,EACA7Q,EACAguB,EACAxsC,EACA81D,GAEA,MAAM,EAAC/6D,EAAC,EAAEE,EAAG4yC,WAAY9tC,EAAK,YAAEg2D,EAAajpB,YAAakpB,GAAU3mC,EAE9D0d,EAActwC,KAAK6B,IAAI+wB,EAAQ0d,YAAcP,EAAUhuB,EAASu3C,EAAa,GAC7EjpB,EAAckpB,EAAS,EAAIA,EAASxpB,EAAUhuB,EAASu3C,EAAc,EAE3E,IAAIE,EAAgB,EACpB,MAAM/tD,EAAQlI,EAAMD,EAEpB,GAAIysC,EAAS,CAIX,MAEM0pB,IAFuBF,EAAS,EAAIA,EAASxpB,EAAU,IAChCO,EAAc,EAAIA,EAAcP,EAAU,IACI,EAE3EypB,GAAiB/tD,GAD4B,IAAvBguD,EAA2BhuD,EAASguD,GAAuBA,EAAqB1pB,GAAWtkC,IACvE,CAC3C,CAED,MACMiuD,GAAejuD,EADRzL,KAAK6B,IAAI,KAAO4J,EAAQ6kC,EAAcvuB,EAAShiB,GAAMuwC,GAC7B,EAC/Bc,EAAa9tC,EAAQo2D,EAAcF,EACnCnoB,EAAW9tC,EAAMm2D,EAAcF,GAC/B,WAACV,EAAU,SAAEC,EAAQ,WAAEC,EAAU,SAAEC,GAAYV,GAAkB3lC,EAASyd,EAAaC,EAAae,EAAWD,GAE/GuoB,EAA2BrpB,EAAcwoB,EACzCc,EAAyBtpB,EAAcyoB,EACvCc,EAA0BzoB,EAAa0nB,EAAaa,EACpDG,EAAwBzoB,EAAW0nB,EAAWa,EAE9CG,EAA2B1pB,EAAc2oB,EACzCgB,EAAyB3pB,EAAc4oB,EACvCgB,EAA0B7oB,EAAa4nB,EAAae,EACpDG,EAAwB7oB,EAAW4nB,EAAWe,EAIpD,GAFAx7C,EAAIwH,YAEAqzC,EAAU,CAEZ,MAAMc,GAAyBN,EAA0BC,GAAyB,EAKlF,GAJAt7C,EAAI0H,IAAI5nB,EAAGE,EAAG8xC,EAAaupB,EAAyBM,GACpD37C,EAAI0H,IAAI5nB,EAAGE,EAAG8xC,EAAa6pB,EAAuBL,GAG9Cf,EAAW,EAAG,CAChB,MAAMqB,EAAUlB,GAAWU,EAAwBE,EAAuBx7D,EAAGE,GAC7EggB,EAAI0H,IAAIk0C,EAAQ97D,EAAG87D,EAAQ57D,EAAGu6D,EAAUe,EAAuBzoB,EAAW/wC,EAC3E,CAGD,MAAM+5D,EAAKnB,GAAWc,EAAwB3oB,EAAU/yC,EAAGE,GAI3D,GAHAggB,EAAI6H,OAAOg0C,EAAG/7D,EAAG+7D,EAAG77D,GAGhBy6D,EAAW,EAAG,CAChB,MAAMmB,EAAUlB,GAAWc,EAAwBE,EAAuB57D,EAAGE,GAC7EggB,EAAI0H,IAAIk0C,EAAQ97D,EAAG87D,EAAQ57D,EAAGy6D,EAAU5nB,EAAW/wC,EAAS45D,EAAwBl6D,KAAKD,GAC1F,CAGD,MAAMu6D,GAA0BjpB,EAAY4nB,EAAW5oB,GAAiBe,EAAc4nB,EAAa3oB,IAAiB,EAKpH,GAJA7xB,EAAI0H,IAAI5nB,EAAGE,EAAG6xC,EAAagB,EAAY4nB,EAAW5oB,EAAciqB,GAAuB,GACvF97C,EAAI0H,IAAI5nB,EAAGE,EAAG6xC,EAAaiqB,EAAuBlpB,EAAc4nB,EAAa3oB,GAAc,GAGvF2oB,EAAa,EAAG,CAClB,MAAMoB,EAAUlB,GAAWa,EAA0BE,EAAyB37D,EAAGE,GACjFggB,EAAI0H,IAAIk0C,EAAQ97D,EAAG87D,EAAQ57D,EAAGw6D,EAAYiB,EAA0Bj6D,KAAKD,GAAIqxC,EAAa9wC,EAC3F,CAGD,MAAMi6D,EAAKrB,GAAWS,EAA0BvoB,EAAY9yC,EAAGE,GAI/D,GAHAggB,EAAI6H,OAAOk0C,EAAGj8D,EAAGi8D,EAAG/7D,GAGhBs6D,EAAa,EAAG,CAClB,MAAMsB,EAAUlB,GAAWS,EAA0BE,EAAyBv7D,EAAGE,GACjFggB,EAAI0H,IAAIk0C,EAAQ97D,EAAG87D,EAAQ57D,EAAGs6D,EAAY1nB,EAAa9wC,EAASu5D,EACjE,MACI,CACLr7C,EAAI4H,OAAO9nB,EAAGE,GAEd,MAAMg8D,EAAcx6D,KAAK6I,IAAIgxD,GAA2BvpB,EAAchyC,EAChEm8D,EAAcz6D,KAAK4H,IAAIiyD,GAA2BvpB,EAAc9xC,EACtEggB,EAAI6H,OAAOm0C,EAAaC,GAExB,MAAMC,EAAY16D,KAAK6I,IAAIixD,GAAyBxpB,EAAchyC,EAC5Dq8D,EAAY36D,KAAK4H,IAAIkyD,GAAyBxpB,EAAc9xC,EAClEggB,EAAI6H,OAAOq0C,EAAWC,EACvB,CAEDn8C,EAAI2H,WACL,CAyBD,SAAS0jC,GACPrrC,EACAoU,EACA7Q,EACAguB,EACAspB,GAEA,MAAM,YAACuB,EAAW,WAAExpB,EAAU,cAAEtB,EAAa,QAAEpyC,GAAWk1B,GACpD,YAACnM,EAAW,gBAAEqT,GAAmBp8B,EACjCm9D,EAAgC,UAAxBn9D,EAAQm1C,YAEtB,IAAKpsB,EACH,OAGEo0C,GACFr8C,EAAI4D,UAA0B,EAAdqE,EAChBjI,EAAIs8C,SAAWhhC,GAAmB,UAElCtb,EAAI4D,UAAYqE,EAChBjI,EAAIs8C,SAAWhhC,GAAmB,SAGpC,IAAIuX,EAAWze,EAAQye,SACvB,GAAIupB,EAAa,CACfxB,GAAQ56C,EAAKoU,EAAS7Q,EAAQguB,EAASsB,EAAUgoB,GACjD,IAAK,IAAIl9D,EAAI,EAAGA,EAAIy+D,IAAez+D,EACjCqiB,EAAIkI,SAEDllB,MAAMsuC,KACTuB,EAAWD,GAActB,EAAgB7vC,GAAOA,GAEnD,CAEG46D,GA1ON,SAAiBr8C,EAA+BoU,EAAqBye,GACnE,MAAM,WAACD,EAAU,YAAEkoB,EAAW,EAAEh7D,EAAC,EAAEE,EAAC,YAAE8xC,EAAW,YAAED,GAAezd,EAClE,IAAImoC,EAAczB,EAAchpB,EAIhC9xB,EAAIwH,YACJxH,EAAI0H,IAAI5nB,EAAGE,EAAG8xC,EAAac,EAAa2pB,EAAa1pB,EAAW0pB,GAC5D1qB,EAAcipB,GAChByB,EAAczB,EAAcjpB,EAC5B7xB,EAAI0H,IAAI5nB,EAAGE,EAAG6xC,EAAagB,EAAW0pB,EAAa3pB,EAAa2pB,GAAa,IAE7Ev8C,EAAI0H,IAAI5nB,EAAGE,EAAG86D,EAAajoB,EAAW/wC,EAAS8wC,EAAa9wC,GAE9Dke,EAAI2H,YACJ3H,EAAIwI,MACL,CA2NGg0C,CAAQx8C,EAAKoU,EAASye,GAGnBupB,IACHxB,GAAQ56C,EAAKoU,EAAS7Q,EAAQguB,EAASsB,EAAUgoB,GACjD76C,EAAIkI,SAEP,CAUc,MAAMu0C,WAAmB/c,GAEtCvc,UAAY,MAEZA,gBAAe,CACbkR,YAAa,SACbn1B,YAAa,OACboc,qBAAiBpuB,EACjB+sD,aAAc,EACdhyC,YAAa,EACb1E,OAAQ,EACRguB,QAAS,EACTltC,WAAO6I,EACP2tD,UAAU,GAGZ13B,qBAAuB,CACrBlkB,gBAAiB,mBAWnB9E,WAAAA,CAAY+jB,GACVuQ,QAEAn0B,KAAKpb,aAAUgO,EACfoN,KAAKg3B,mBAAgBpkC,EACrBoN,KAAKs4B,gBAAa1lC,EAClBoN,KAAKu4B,cAAW3lC,EAChBoN,KAAKu3B,iBAAc3kC,EACnBoN,KAAKw3B,iBAAc5kC,EACnBoN,KAAKwgD,YAAc,EACnBxgD,KAAK8hD,YAAc,EAEfl+B,GACFhiC,OAAO8M,OAAOsR,KAAM4jB,EAEvB,CAED0Y,OAAAA,CAAQ8lB,EAAgBC,EAAgBjmB,GACtC,MAAMtuB,EAAQ9N,KAAKi9B,SAAS,CAAC,IAAK,KAAMb,IAClC,MAACryC,EAAK,SAAEE,GAAYT,EAAkBskB,EAAO,CAACtoB,EAAG48D,EAAQ18D,EAAG28D,KAC5D,WAAC/pB,EAAU,SAAEC,EAAQ,YAAEhB,EAAW,YAAEC,EAAW,cAAER,GAAiBh3B,KAAKi9B,SAAS,CACpF,aACA,WACA,cACA,cACA,iBACCb,GACGkmB,EAAUtiD,KAAKpb,QAAQqyC,QAAU,EAEjCsrB,EADiBhgE,EAAey0C,EAAeuB,EAAWD,IACxBnxC,GAAOoD,EAAcR,EAAOuuC,EAAYC,GAC1EiqB,EAAev3D,EAAWhB,EAAUstC,EAAc+qB,EAAS9qB,EAAc8qB,GAE/E,OAAQC,GAAiBC,CAC1B,CAEDzlB,cAAAA,CAAeX,GACb,MAAM,EAAC52C,EAAC,EAAEE,EAAC,WAAE4yC,EAAU,SAAEC,EAAQ,YAAEhB,EAAW,YAAEC,GAAex3B,KAAKi9B,SAAS,CAC3E,IACA,IACA,aACA,WACA,cACA,cACA,iBACCb,IACG,OAACnzB,EAAM,QAAEguB,GAAWj3B,KAAKpb,QACzB69D,GAAanqB,EAAaC,GAAY,EACtCmqB,GAAcnrB,EAAcC,EAAcP,EAAUhuB,GAAU,EACpE,MAAO,CACLzjB,EAAGA,EAAI0B,KAAK6I,IAAI0yD,GAAaC,EAC7Bh9D,EAAGA,EAAIwB,KAAK4H,IAAI2zD,GAAaC,EAEhC,CAEDrd,eAAAA,CAAgBjJ,GACd,OAAOp8B,KAAK+8B,eAAeX,EAC5B,CAEDja,IAAAA,CAAKzc,GACH,MAAM,QAAC9gB,EAAO,cAAEoyC,GAAiBh3B,KAC3BiJ,GAAUrkB,EAAQqkB,QAAU,GAAK,EACjCguB,GAAWryC,EAAQqyC,SAAW,GAAK,EACnCspB,EAAW37D,EAAQ27D,SAIzB,GAHAvgD,KAAKwgD,YAAuC,UAAxB57D,EAAQm1C,YAA2B,IAAO,EAC9D/5B,KAAK8hD,YAAc9qB,EAAgB7vC,EAAMD,KAAKoB,MAAM0uC,EAAgB7vC,GAAO,EAErD,IAAlB6vC,GAAuBh3B,KAAKu3B,YAAc,GAAKv3B,KAAKw3B,YAAc,EACpE,OAGF9xB,EAAIsG,OAEJ,MAAMy2C,GAAaziD,KAAKs4B,WAAat4B,KAAKu4B,UAAY,EACtD7yB,EAAIsH,UAAU9lB,KAAK6I,IAAI0yD,GAAax5C,EAAQ/hB,KAAK4H,IAAI2zD,GAAax5C,GAClE,MACM05C,EAAe15C,GADT,EAAI/hB,KAAK4H,IAAI5H,KAAK4B,IAAI7B,EAAI+vC,GAAiB,KAGvDtxB,EAAI2J,UAAYzqB,EAAQ+f,gBACxBe,EAAIiK,YAAc/qB,EAAQggB,YArL9B,SACEc,EACAoU,EACA7Q,EACAguB,EACAspB,GAEA,MAAM,YAACuB,EAAW,WAAExpB,EAAU,cAAEtB,GAAiBld,EACjD,IAAIye,EAAWze,EAAQye,SACvB,GAAIupB,EAAa,CACfxB,GAAQ56C,EAAKoU,EAAS7Q,EAAQguB,EAASsB,EAAUgoB,GACjD,IAAK,IAAIl9D,EAAI,EAAGA,EAAIy+D,IAAez+D,EACjCqiB,EAAIgI,OAEDhlB,MAAMsuC,KACTuB,EAAWD,GAActB,EAAgB7vC,GAAOA,GAEnD,CACDm5D,GAAQ56C,EAAKoU,EAAS7Q,EAAQguB,EAASsB,EAAUgoB,GACjD76C,EAAIgI,MAEL,CAkKGk1C,CAAQl9C,EAAK1F,KAAM2iD,EAAc1rB,EAASspB,GAC1CxP,GAAWrrC,EAAK1F,KAAM2iD,EAAc1rB,EAASspB,GAE7C76C,EAAI0G,SACL,ECxWH,SAASy2C,GAASn9C,EAAK9gB,GAA0B,IAAjB0gB,EAAQ,UAAH,6CAAG1gB,EACtC8gB,EAAIo9C,QAAUvgE,EAAe+iB,EAAMub,eAAgBj8B,EAAQi8B,gBAC3Dnb,EAAImrC,YAAYtuD,EAAe+iB,EAAMwb,WAAYl8B,EAAQk8B,aACzDpb,EAAIorC,eAAiBvuD,EAAe+iB,EAAMyb,iBAAkBn8B,EAAQm8B,kBACpErb,EAAIs8C,SAAWz/D,EAAe+iB,EAAM0b,gBAAiBp8B,EAAQo8B,iBAC7Dtb,EAAI4D,UAAY/mB,EAAe+iB,EAAMqI,YAAa/oB,EAAQ+oB,aAC1DjI,EAAIiK,YAAcptB,EAAe+iB,EAAMV,YAAahgB,EAAQggB,YAC7D,CAED,SAAS2I,GAAO7H,EAAK2I,EAAUjqB,GAC7BshB,EAAI6H,OAAOnpB,EAAOoB,EAAGpB,EAAOsB,EAC7B,CAcD,SAASq9D,GAAS31D,EAAQ6xB,GAAsB,IAAb6e,EAAS,UAAH,6CAAG,CAAC,EAC3C,MAAMvwC,EAAQH,EAAO5J,QACdgH,MAAOw4D,EAAc,EAAGv4D,IAAKw4D,EAAY11D,EAAQ,GAAKuwC,GACtDtzC,MAAO04D,EAAcz4D,IAAK04D,GAAclkC,EACzCz0B,EAAQtD,KAAK6B,IAAIi6D,EAAaE,GAC9Bz4D,EAAMvD,KAAK4B,IAAIm6D,EAAWE,GAC1BC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAElH,MAAO,CACL51D,QACA/C,QACA0d,KAAM+W,EAAQ/W,KACdtkB,KAAM6G,EAAMD,IAAU44D,EAAU71D,EAAQ9C,EAAMD,EAAQC,EAAMD,EAE/D,CAiBD,SAAS64D,GAAY39C,EAAKyJ,EAAM8P,EAAS6e,GACvC,MAAM,OAAC1wC,EAAM,QAAExI,GAAWuqB,GACpB,MAAC5hB,EAAK,MAAE/C,EAAK,KAAE0d,EAAI,KAAEtkB,GAAQm/D,GAAS31D,EAAQ6xB,EAAS6e,GACvDwlB,EA9CR,SAAuB1+D,GACrB,OAAIA,EAAQ2+D,QACHn1C,GAGLxpB,EAAQk0B,SAA8C,aAAnCl0B,EAAQg0B,uBACtBpK,GAGFjB,EACR,CAoCoBi2C,CAAc5+D,GAEjC,IACIvB,EAAGyqB,EAAO+K,GADV,KAACgY,GAAO,EAAI,QAAEztC,GAAW06C,GAAU,CAAC,EAGxC,IAAKz6C,EAAI,EAAGA,GAAKO,IAAQP,EACvByqB,EAAQ1gB,GAAQ5C,GAASpH,EAAUQ,EAAOP,EAAIA,IAAMkK,GAEhDugB,EAAM2I,OAGCoa,GACTnrB,EAAI4H,OAAOQ,EAAMtoB,EAAGsoB,EAAMpoB,GAC1BmrC,GAAO,GAEPyyB,EAAW59C,EAAKmT,EAAM/K,EAAO1qB,EAASwB,EAAQ2+D,SAGhD1qC,EAAO/K,GAQT,OALI5F,IACF4F,EAAQ1gB,GAAQ5C,GAASpH,EAAUQ,EAAO,IAAM2J,GAChD+1D,EAAW59C,EAAKmT,EAAM/K,EAAO1qB,EAASwB,EAAQ2+D,YAGvCr7C,CACV,CAiBD,SAASu7C,GAAgB/9C,EAAKyJ,EAAM8P,EAAS6e,GAC3C,MAAM1wC,EAAS+hB,EAAK/hB,QACd,MAACG,EAAK,MAAE/C,EAAK,KAAE5G,GAAQm/D,GAAS31D,EAAQ6xB,EAAS6e,IACjD,KAACjN,GAAO,EAAI,QAAEztC,GAAW06C,GAAU,CAAC,EAC1C,IAEIz6C,EAAGyqB,EAAO41C,EAAOzqB,EAAMF,EAAM4qB,EAF7BC,EAAO,EACPC,EAAS,EAGb,MAAMC,EAAc9/D,IAAWwG,GAASpH,EAAUQ,EAAOI,EAAQA,IAAUuJ,EACrEw2D,EAAQA,KACR9qB,IAASF,IAEXrzB,EAAI6H,OAAOq2C,EAAM7qB,GACjBrzB,EAAI6H,OAAOq2C,EAAM3qB,GAGjBvzB,EAAI6H,OAAOq2C,EAAMD,GAClB,EAQH,IALI9yB,IACF/iB,EAAQ1gB,EAAO02D,EAAW,IAC1Bp+C,EAAI4H,OAAOQ,EAAMtoB,EAAGsoB,EAAMpoB,IAGvBrC,EAAI,EAAGA,GAAKO,IAAQP,EAAG,CAG1B,GAFAyqB,EAAQ1gB,EAAO02D,EAAWzgE,IAEtByqB,EAAM2I,KAER,SAGF,MAAMjxB,EAAIsoB,EAAMtoB,EACVE,EAAIooB,EAAMpoB,EACVs+D,EAAa,EAAJx+D,EAEXw+D,IAAWN,GAETh+D,EAAIuzC,EACNA,EAAOvzC,EACEA,EAAIqzC,IACbA,EAAOrzC,GAGTk+D,GAAQC,EAASD,EAAOp+D,KAAOq+D,IAE/BE,IAGAr+C,EAAI6H,OAAO/nB,EAAGE,GAEdg+D,EAAQM,EACRH,EAAS,EACT5qB,EAAOF,EAAOrzC,GAGhBi+D,EAAQj+D,CACT,CACDq+D,GACD,CAOD,SAASE,GAAkB90C,GACzB,MAAMJ,EAAOI,EAAKvqB,QACZk8B,EAAa/R,EAAK+R,YAAc/R,EAAK+R,WAAWt9B,OAEtD,OADqB2rB,EAAKkrB,aAAelrB,EAAK8U,QAAUlV,EAAK+J,SAA2C,aAAhC/J,EAAK6J,yBAA0C7J,EAAKw0C,UAAYziC,EACnH2iC,GAAkBJ,EACxC,CA2CD,MAAMa,GAA8B,oBAAXC,OAEzB,SAAShiC,GAAKzc,EAAKyJ,EAAM3kB,EAAO+C,GAC1B22D,KAAc/0C,EAAKvqB,QAAQq6B,QA7BjC,SAA6BvZ,EAAKyJ,EAAM3kB,EAAO+C,GAC7C,IAAI62D,EAAOj1C,EAAKk1C,MACXD,IACHA,EAAOj1C,EAAKk1C,MAAQ,IAAIF,OACpBh1C,EAAKi1C,KAAKA,EAAM55D,EAAO+C,IACzB62D,EAAK/2C,aAGTw1C,GAASn9C,EAAKyJ,EAAKvqB,SACnB8gB,EAAIkI,OAAOw2C,EACZ,CAoBGE,CAAoB5+C,EAAKyJ,EAAM3kB,EAAO+C,GAlB1C,SAA0BmY,EAAKyJ,EAAM3kB,EAAO+C,GAC1C,MAAM,SAACoyB,EAAQ,QAAE/6B,GAAWuqB,EACtBo1C,EAAgBN,GAAkB90C,GAExC,IAAK,MAAM8P,KAAWU,EACpBkjC,GAASn9C,EAAK9gB,EAASq6B,EAAQ3Z,OAC/BI,EAAIwH,YACAq3C,EAAc7+C,EAAKyJ,EAAM8P,EAAS,CAACz0B,QAAOC,IAAKD,EAAQ+C,EAAQ,KACjEmY,EAAI2H,YAEN3H,EAAIkI,QAEP,CAQG42C,CAAiB9+C,EAAKyJ,EAAM3kB,EAAO+C,EAEtC,CAEc,MAAMk3D,WAAoBrf,GAEvCvc,UAAY,OAKZA,gBAAkB,CAChBhI,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBrT,YAAa,EACboL,iBAAiB,EACjBH,uBAAwB,UACxBlL,MAAM,EACNiL,UAAU,EACV4qC,SAAS,EACTzqC,QAAS,GAMX+P,qBAAuB,CACrBlkB,gBAAiB,kBACjBC,YAAa,eAIfikB,mBAAqB,CACnBnhB,aAAa,EACbE,WAAab,GAAkB,eAATA,GAAkC,SAATA,GAIjDlH,WAAAA,CAAY+jB,GACVuQ,QAEAn0B,KAAKs6B,UAAW,EAChBt6B,KAAKpb,aAAUgO,EACfoN,KAAKggB,YAASptB,EACdoN,KAAKikB,WAAQrxB,EACboN,KAAK0kD,eAAY9xD,EACjBoN,KAAKqkD,WAAQzxD,EACboN,KAAK2kD,aAAU/xD,EACfoN,KAAK4kD,eAAYhyD,EACjBoN,KAAKq6B,YAAa,EAClBr6B,KAAK6kD,gBAAiB,EACtB7kD,KAAKmgB,mBAAgBvtB,EAEjBgxB,GACFhiC,OAAO8M,OAAOsR,KAAM4jB,EAEvB,CAEDiX,mBAAAA,CAAoBpM,EAAW5oB,GAC7B,MAAMjhB,EAAUob,KAAKpb,QACrB,IAAKA,EAAQk0B,SAA8C,aAAnCl0B,EAAQg0B,0BAA2Ch0B,EAAQ2+D,UAAYvjD,KAAK6kD,eAAgB,CAClH,MAAM38C,EAAOtjB,EAAQ+zB,SAAW3Y,KAAKikB,MAAQjkB,KAAK0kD,UAClDjsC,GAA2BzY,KAAK2kD,QAAS//D,EAAS6pC,EAAWvmB,EAAMrC,GACnE7F,KAAK6kD,gBAAiB,CACvB,CACF,CAED,UAAIz3D,CAAOA,GACT4S,KAAK2kD,QAAUv3D,SACR4S,KAAK4kD,iBACL5kD,KAAKqkD,MACZrkD,KAAK6kD,gBAAiB,CACvB,CAED,UAAIz3D,GACF,OAAO4S,KAAK2kD,OACb,CAED,YAAIhlC,GACF,OAAO3f,KAAK4kD,YAAc5kD,KAAK4kD,U1BhF5B,SAA0Bz1C,EAAM2Q,GACrC,MAAM1yB,EAAS+hB,EAAK/hB,OACdurB,EAAWxJ,EAAKvqB,QAAQ+zB,SACxBprB,EAAQH,EAAO5J,OAErB,IAAK+J,EACH,MAAO,GAGT,MAAM2a,IAASiH,EAAK8U,OACd,MAACz5B,EAAK,IAAEC,GA3FhB,SAAyB2C,EAAQG,EAAO2a,EAAMyQ,GAC5C,IAAInuB,EAAQ,EACRC,EAAM8C,EAAQ,EAElB,GAAI2a,IAASyQ,EAEX,KAAOnuB,EAAQ+C,IAAUH,EAAO5C,GAAOisB,MACrCjsB,IAKJ,KAAOA,EAAQ+C,GAASH,EAAO5C,GAAOisB,MACpCjsB,IAWF,IAPAA,GAAS+C,EAEL2a,IAEFzd,GAAOD,GAGFC,EAAMD,GAAS4C,EAAO3C,EAAM8C,GAAOkpB,MACxChsB,IAMF,OAFAA,GAAO8C,EAEA,CAAC/C,QAAOC,MAChB,CA2DsBq6D,CAAgB13D,EAAQG,EAAO2a,EAAMyQ,GAE1D,OACSkH,GAAc1Q,GADN,IAAbwJ,EACyB,CAAC,CAACnuB,QAAOC,MAAKyd,SArD7C,SAAuB9a,EAAQ5C,EAAOzB,EAAKmf,GACzC,MAAM3a,EAAQH,EAAO5J,OACf62B,EAAS,GACf,IAEI5vB,EAFAgB,EAAOjB,EACPquB,EAAOzrB,EAAO5C,GAGlB,IAAKC,EAAMD,EAAQ,EAAGC,GAAO1B,IAAO0B,EAAK,CACvC,MAAMu4B,EAAM51B,EAAO3C,EAAM8C,GACrBy1B,EAAIvM,MAAQuM,EAAIE,KACbrK,EAAKpC,OACRvO,GAAO,EACPmS,EAAOn0B,KAAK,CAACsE,MAAOA,EAAQ+C,EAAO9C,KAAMA,EAAM,GAAK8C,EAAO2a,SAE3D1d,EAAQiB,EAAOu3B,EAAIE,KAAOz4B,EAAM,OAGlCgB,EAAOhB,EACHouB,EAAKpC,OACPjsB,EAAQC,IAGZouB,EAAOmK,CACR,CAMD,OAJa,OAATv3B,GACF4uB,EAAOn0B,KAAK,CAACsE,MAAOA,EAAQ+C,EAAO9C,IAAKgB,EAAO8B,EAAO2a,SAGjDmS,CACR,CA4B4B0qC,CAAc33D,EAAQ5C,EAFrCC,EAAMD,EAAQC,EAAM8C,EAAQ9C,IACjB0kB,EAAKu1C,WAAuB,IAAVl6D,GAAeC,IAAQ8C,EAAQ,GAJrBH,EAAQ0yB,EAM5D,C0B6D8CklC,CAAiBhlD,KAAMA,KAAKpb,QAAQq6B,SAChF,CAMDonB,KAAAA,GACE,MAAM1mB,EAAW3f,KAAK2f,SAChBvyB,EAAS4S,KAAK5S,OACpB,OAAOuyB,EAASn8B,QAAU4J,EAAOuyB,EAAS,GAAGn1B,MAC9C,CAMDiB,IAAAA,GACE,MAAMk0B,EAAW3f,KAAK2f,SAChBvyB,EAAS4S,KAAK5S,OACdG,EAAQoyB,EAASn8B,OACvB,OAAO+J,GAASH,EAAOuyB,EAASpyB,EAAQ,GAAG9C,IAC5C,CASDoW,WAAAA,CAAYiN,EAAOjlB,GACjB,MAAMjE,EAAUob,KAAKpb,QACfpD,EAAQssB,EAAMjlB,GACduE,EAAS4S,KAAK5S,OACduyB,EAAWD,GAAe1f,KAAM,CAACnX,WAAU2B,MAAOhJ,EAAOiJ,IAAKjJ,IAEpE,IAAKm+B,EAASn8B,OACZ,OAGF,MAAM62B,EAAS,GACT4qC,EAvKV,SAAiCrgE,GAC/B,OAAIA,EAAQ2+D,QACHhmC,GAGL34B,EAAQk0B,SAA8C,aAAnCl0B,EAAQg0B,uBACtB4E,GAGFF,EACR,CA6JwB4nC,CAAwBtgE,GAC7C,IAAIvB,EAAGO,EACP,IAAKP,EAAI,EAAGO,EAAO+7B,EAASn8B,OAAQH,EAAIO,IAAQP,EAAG,CACjD,MAAM,MAACmH,EAAK,IAAEC,GAAOk1B,EAASt8B,GACxBqQ,EAAKtG,EAAO5C,GACZmJ,EAAKvG,EAAO3C,GAClB,GAAIiJ,IAAOC,EAAI,CACb0mB,EAAOn0B,KAAKwN,GACZ,QACD,CACD,MACMyxD,EAAeF,EAAavxD,EAAIC,EAD5BzM,KAAKa,KAAKvG,EAAQkS,EAAG7K,KAAc8K,EAAG9K,GAAY6K,EAAG7K,KAClBjE,EAAQ2+D,SACrD4B,EAAat8D,GAAYilB,EAAMjlB,GAC/BwxB,EAAOn0B,KAAKi/D,EACb,CACD,OAAyB,IAAlB9qC,EAAO72B,OAAe62B,EAAO,GAAKA,CAC1C,CAgBDgpC,WAAAA,CAAY39C,EAAKuZ,EAAS6e,GAExB,OADsBmmB,GAAkBjkD,KACjCukD,CAAc7+C,EAAK1F,KAAMif,EAAS6e,EAC1C,CASDsmB,IAAAA,CAAK1+C,EAAKlb,EAAO+C,GACf,MAAMoyB,EAAW3f,KAAK2f,SAChB4kC,EAAgBN,GAAkBjkD,MACxC,IAAIkI,EAAOlI,KAAKikB,MAEhBz5B,EAAQA,GAAS,EACjB+C,EAAQA,GAAUyS,KAAK5S,OAAO5J,OAASgH,EAEvC,IAAK,MAAMy0B,KAAWU,EACpBzX,GAAQq8C,EAAc7+C,EAAK1F,KAAMif,EAAS,CAACz0B,QAAOC,IAAKD,EAAQ+C,EAAQ,IAEzE,QAAS2a,CACV,CASDia,IAAAA,CAAKzc,EAAK+oB,EAAWjkC,EAAO+C,GAC1B,MAAM3I,EAAUob,KAAKpb,SAAW,CAAC,GAClBob,KAAK5S,QAAU,IAEnB5J,QAAUoB,EAAQ+oB,cAC3BjI,EAAIsG,OAEJmW,GAAKzc,EAAK1F,KAAMxV,EAAO+C,GAEvBmY,EAAI0G,WAGFpM,KAAKs6B,WAEPt6B,KAAK6kD,gBAAiB,EACtB7kD,KAAKqkD,WAAQzxD,EAEhB,EC9aH,SAAS0pC,GAAQnf,EAAkB7C,EAAa3sB,EAAiByuC,GAC/D,MAAMx3C,EAAUu4B,EAAGv4B,SACZ,CAAC+I,GAAOnM,GAAS27B,EAAG8f,SAAS,CAACtvC,GAAOyuC,GAE5C,OAAQl1C,KAAKa,IAAIuyB,EAAM94B,GAASoD,EAAQkoB,OAASloB,EAAQwgE,SAC1D,CAIc,MAAMC,WAAqBjgB,GAExCvc,UAAY,QASZA,gBAAkB,CAChBlb,YAAa,EACby3C,UAAW,EACXprB,iBAAkB,EAClBsrB,YAAa,EACb14C,WAAY,SACZE,OAAQ,EACRD,SAAU,GAMZgc,qBAAuB,CACrBlkB,gBAAiB,kBACjBC,YAAa,eAGf/E,WAAAA,CAAY+jB,GACVuQ,QAEAn0B,KAAKpb,aAAUgO,EACfoN,KAAK2nB,YAAS/0B,EACdoN,KAAKyW,UAAO7jB,EACZoN,KAAKkjB,UAAOtwB,EAERgxB,GACFhiC,OAAO8M,OAAOsR,KAAM4jB,EAEvB,CAED0Y,OAAAA,CAAQipB,EAAgBC,EAAgBppB,GACtC,MAAMx3C,EAAUob,KAAKpb,SACf,EAACY,EAAC,EAAEE,GAAKsa,KAAKi9B,SAAS,CAAC,IAAK,KAAMb,GACzC,OAAQl1C,KAAMmB,IAAIk9D,EAAS//D,EAAG,GAAK0B,KAAKmB,IAAIm9D,EAAS9/D,EAAG,GAAMwB,KAAKmB,IAAIzD,EAAQwgE,UAAYxgE,EAAQkoB,OAAQ,EAC5G,CAED24C,QAAAA,CAASF,EAAgBnpB,GACvB,OAAOE,GAAQt8B,KAAMulD,EAAQ,IAAKnpB,EACnC,CAEDspB,QAAAA,CAASF,EAAgBppB,GACvB,OAAOE,GAAQt8B,KAAMwlD,EAAQ,IAAKppB,EACnC,CAEDW,cAAAA,CAAeX,GACb,MAAM,EAAC52C,EAAC,EAAEE,GAAKsa,KAAKi9B,SAAS,CAAC,IAAK,KAAMb,GACzC,MAAO,CAAC52C,IAAGE,IACZ,CAEDoB,IAAAA,CAAKlC,GAEH,IAAIkoB,GADJloB,EAAUA,GAAWob,KAAKpb,SAAW,CAAC,GACjBkoB,QAAU,EAC/BA,EAAS5lB,KAAK6B,IAAI+jB,EAAQA,GAAUloB,EAAQ0gE,aAAe,GAE3D,OAAgC,GAAxBx4C,GADYA,GAAUloB,EAAQ+oB,aAAe,GAEtD,CAEDwU,IAAAA,CAAKzc,EAA+BqI,GAClC,MAAMnpB,EAAUob,KAAKpb,QAEjBob,KAAKyW,MAAQ7xB,EAAQkoB,OAAS,KAAQe,GAAe7N,KAAM+N,EAAM/N,KAAKlZ,KAAKlC,GAAW,KAI1F8gB,EAAIiK,YAAc/qB,EAAQggB,YAC1Bc,EAAI4D,UAAY1kB,EAAQ+oB,YACxBjI,EAAI2J,UAAYzqB,EAAQ+f,gBACxB0H,GAAU3G,EAAK9gB,EAASob,KAAKxa,EAAGwa,KAAKta,GACtC,CAEDo2C,QAAAA,GACE,MAAMl3C,EAAUob,KAAKpb,SAAW,CAAC,EAEjC,OAAOA,EAAQkoB,OAASloB,EAAQwgE,SACjC,EC3FH,SAASO,GAAaC,EAAKxpB,GACzB,MAAM,EAAC52C,EAAC,EAAEE,EAAC,KAAEkmC,EAAI,MAAE5hB,EAAK,OAAEmC,GAAmCy5C,EAAI3oB,SAAS,CAAC,IAAK,IAAK,OAAQ,QAAS,UAAWb,GAEjH,IAAIrzB,EAAMF,EAAOD,EAAKE,EAAQ+8C,EAgB9B,OAdID,EAAI1yB,YACN2yB,EAAO15C,EAAS,EAChBpD,EAAO7hB,KAAK4B,IAAItD,EAAGomC,GACnB/iB,EAAQ3hB,KAAK6B,IAAIvD,EAAGomC,GACpBhjB,EAAMljB,EAAImgE,EACV/8C,EAASpjB,EAAImgE,IAEbA,EAAO77C,EAAQ,EACfjB,EAAOvjB,EAAIqgE,EACXh9C,EAAQrjB,EAAIqgE,EACZj9C,EAAM1hB,KAAK4B,IAAIpD,EAAGkmC,GAClB9iB,EAAS5hB,KAAK6B,IAAIrD,EAAGkmC,IAGhB,CAAC7iB,OAAMH,MAAKC,QAAOC,SAC3B,CAED,SAASg9C,GAAYrvC,EAAMj1B,EAAOsH,EAAKC,GACrC,OAAO0tB,EAAO,EAAIzrB,EAAYxJ,EAAOsH,EAAKC,EAC3C,CAkCD,SAASg9D,GAAcH,GACrB,MAAMz8C,EAASw8C,GAAaC,GACtB57C,EAAQb,EAAON,MAAQM,EAAOJ,KAC9BoD,EAAShD,EAAOL,OAASK,EAAOP,IAChCiB,EApCR,SAA0B+7C,EAAKI,EAAMC,GACnC,MAAMzkE,EAAQokE,EAAIhhE,QAAQ+oB,YACpB8I,EAAOmvC,EAAI3yB,cACXxtC,EAAIisB,GAAOlwB,GAEjB,MAAO,CACLoN,EAAGk3D,GAAYrvC,EAAK7N,IAAKnjB,EAAEmjB,IAAK,EAAGq9C,GACnCzzD,EAAGszD,GAAYrvC,EAAK5N,MAAOpjB,EAAEojB,MAAO,EAAGm9C,GACvCn/D,EAAGi/D,GAAYrvC,EAAK3N,OAAQrjB,EAAEqjB,OAAQ,EAAGm9C,GACzC70D,EAAG00D,GAAYrvC,EAAK1N,KAAMtjB,EAAEsjB,KAAM,EAAGi9C,GAExC,CAyBgBE,CAAiBN,EAAK57C,EAAQ,EAAGmC,EAAS,GACnDW,EAxBR,SAA2B84C,EAAKI,EAAMC,GACpC,MAAM,mBAAC7yB,GAAsBwyB,EAAI3oB,SAAS,CAAC,uBACrCz7C,EAAQokE,EAAIhhE,QAAQ+6D,aACpBl6D,EAAIksB,GAAcnwB,GAClB2kE,EAAOj/D,KAAK4B,IAAIk9D,EAAMC,GACtBxvC,EAAOmvC,EAAI3yB,cAIXmzB,EAAehzB,GAAsBnxC,EAAST,GAEpD,MAAO,CACLovB,QAASk1C,IAAaM,GAAgB3vC,EAAK7N,KAAO6N,EAAK1N,KAAMtjB,EAAEmrB,QAAS,EAAGu1C,GAC3Ep1C,SAAU+0C,IAAaM,GAAgB3vC,EAAK7N,KAAO6N,EAAK5N,MAAOpjB,EAAEsrB,SAAU,EAAGo1C,GAC9Et1C,WAAYi1C,IAAaM,GAAgB3vC,EAAK3N,QAAU2N,EAAK1N,KAAMtjB,EAAEorB,WAAY,EAAGs1C,GACpFr1C,YAAag1C,IAAaM,GAAgB3vC,EAAK3N,QAAU2N,EAAK5N,MAAOpjB,EAAEqrB,YAAa,EAAGq1C,GAE1F,CAOgB1G,CAAkBmG,EAAK57C,EAAQ,EAAGmC,EAAS,GAE1D,MAAO,CACLk6C,MAAO,CACL7gE,EAAG2jB,EAAOJ,KACVrjB,EAAGyjB,EAAOP,IACV3V,EAAG+W,EACH3Y,EAAG8a,EACHW,UAEFi1C,MAAO,CACLv8D,EAAG2jB,EAAOJ,KAAOc,EAAOzY,EACxB1L,EAAGyjB,EAAOP,IAAMiB,EAAOjb,EACvBqE,EAAG+W,EAAQH,EAAOzY,EAAIyY,EAAOrX,EAC7BnB,EAAG8a,EAAStC,EAAOjb,EAAIib,EAAOhjB,EAC9BimB,OAAQ,CACN8D,QAAS1pB,KAAK6B,IAAI,EAAG+jB,EAAO8D,QAAU1pB,KAAK6B,IAAI8gB,EAAOjb,EAAGib,EAAOzY,IAChE2f,SAAU7pB,KAAK6B,IAAI,EAAG+jB,EAAOiE,SAAW7pB,KAAK6B,IAAI8gB,EAAOjb,EAAGib,EAAOrX,IAClEqe,WAAY3pB,KAAK6B,IAAI,EAAG+jB,EAAO+D,WAAa3pB,KAAK6B,IAAI8gB,EAAOhjB,EAAGgjB,EAAOzY,IACtE0f,YAAa5pB,KAAK6B,IAAI,EAAG+jB,EAAOgE,YAAc5pB,KAAK6B,IAAI8gB,EAAOhjB,EAAGgjB,EAAOrX,MAI/E,CAED,SAAS8pC,GAAQspB,EAAKpgE,EAAGE,EAAG02C,GAC1B,MAAMkqB,EAAc,OAAN9gE,EACR+gE,EAAc,OAAN7gE,EAERyjB,EAASy8C,KADEU,GAASC,IACSZ,GAAaC,EAAKxpB,GAErD,OAAOjzB,IACHm9C,GAASr7D,EAAWzF,EAAG2jB,EAAOJ,KAAMI,EAAON,UAC3C09C,GAASt7D,EAAWvF,EAAGyjB,EAAOP,IAAKO,EAAOL,QAC/C,CAWD,SAAS09C,GAAkB9gD,EAAK+H,GAC9B/H,EAAI+H,KAAKA,EAAKjoB,EAAGioB,EAAK/nB,EAAG+nB,EAAKxa,EAAGwa,EAAKpc,EACvC,CAED,SAASo1D,GAAYh5C,EAAMi5C,GAAsB,IAAdC,EAAU,UAAH,6CAAG,CAAC,EAC5C,MAAMnhE,EAAIioB,EAAKjoB,IAAMmhE,EAAQnhE,GAAKkhE,EAAS,EACrChhE,EAAI+nB,EAAK/nB,IAAMihE,EAAQjhE,GAAKghE,EAAS,EACrCzzD,GAAKwa,EAAKjoB,EAAIioB,EAAKxa,IAAM0zD,EAAQnhE,EAAImhE,EAAQ1zD,EAAIyzD,EAAS,GAAKlhE,EAC/D6L,GAAKoc,EAAK/nB,EAAI+nB,EAAKpc,IAAMs1D,EAAQjhE,EAAIihE,EAAQt1D,EAAIq1D,EAAS,GAAKhhE,EACrE,MAAO,CACLF,EAAGioB,EAAKjoB,EAAIA,EACZE,EAAG+nB,EAAK/nB,EAAIA,EACZuN,EAAGwa,EAAKxa,EAAIA,EACZ5B,EAAGoc,EAAKpc,EAAIA,EACZyb,OAAQW,EAAKX,OAEhB,CAEc,MAAM85C,WAAmBxhB,GAEtCvc,UAAY,MAKZA,gBAAe,CACboK,cAAe,QACftlB,YAAa,EACbgyC,aAAc,EACdjsB,cAAe,OACf9mB,gBAAYha,GAMdi2B,qBAAuB,CACrBlkB,gBAAiB,kBACjBC,YAAa,eAGf/E,WAAAA,CAAY+jB,GACVuQ,QAEAn0B,KAAKpb,aAAUgO,EACfoN,KAAKkzB,gBAAatgC,EAClBoN,KAAK4rB,UAAOh5B,EACZoN,KAAKgK,WAAQpX,EACboN,KAAKmM,YAASvZ,EACdoN,KAAK0zB,mBAAgB9gC,EAEjBgxB,GACFhiC,OAAO8M,OAAOsR,KAAM4jB,EAEvB,CAEDzB,IAAAA,CAAKzc,GACH,MAAM,cAACguB,EAAe9uC,SAAS,YAACggB,EAAW,gBAAED,IAAoB3E,MAC3D,MAAC+hD,EAAK,MAAEsE,GAASN,GAAc/lD,MAC/B6mD,GApES/5C,EAoEeu5C,EAAMv5C,QAnExB8D,SAAW9D,EAAOiE,UAAYjE,EAAO+D,YAAc/D,EAAOgE,YAmExBH,GAAqB61C,GApEvE,IAAmB15C,EAsEfpH,EAAIsG,OAEAq6C,EAAMpzD,IAAM8uD,EAAM9uD,GAAKozD,EAAMh1D,IAAM0wD,EAAM1wD,IAC3CqU,EAAIwH,YACJ25C,EAAYnhD,EAAK+gD,GAAYJ,EAAO3yB,EAAequB,IACnDr8C,EAAIwI,OACJ24C,EAAYnhD,EAAK+gD,GAAY1E,GAAQruB,EAAe2yB,IACpD3gD,EAAI2J,UAAYzK,EAChBc,EAAIgI,KAAK,YAGXhI,EAAIwH,YACJ25C,EAAYnhD,EAAK+gD,GAAY1E,EAAOruB,IACpChuB,EAAI2J,UAAY1K,EAChBe,EAAIgI,OAEJhI,EAAI0G,SACL,CAEDkwB,OAAAA,CAAQipB,EAAQC,EAAQppB,GACtB,OAAOE,GAAQt8B,KAAMulD,EAAQC,EAAQppB,EACtC,CAEDqpB,QAAAA,CAASF,EAAQnpB,GACf,OAAOE,GAAQt8B,KAAMulD,EAAQ,KAAMnpB,EACpC,CAEDspB,QAAAA,CAASF,EAAQppB,GACf,OAAOE,GAAQt8B,KAAM,KAAMwlD,EAAQppB,EACpC,CAEDW,cAAAA,CAAeX,GACb,MAAM,EAAC52C,EAAC,EAAEE,EAAC,KAAEkmC,EAAI,WAAEsH,GAAuClzB,KAAKi9B,SAAS,CAAC,IAAK,IAAK,OAAQ,cAAeb,GAC1G,MAAO,CACL52C,EAAG0tC,GAAc1tC,EAAIomC,GAAQ,EAAIpmC,EACjCE,EAAGwtC,EAAaxtC,GAAKA,EAAIkmC,GAAQ,EAEpC,CAEDkQ,QAAAA,CAASnuC,GACP,MAAgB,MAATA,EAAeqS,KAAKgK,MAAQ,EAAIhK,KAAKmM,OAAS,CACtD,EC9KI,SAAS26C,GAAWj+D,EAAUw9C,EAAO56C,EAAMyc,GAChD,GAAIA,EACF,OAEF,IAAI1d,EAAQ67C,EAAMx9C,GACd4B,EAAMgB,EAAK5C,GAMf,MAJiB,UAAbA,IACF2B,EAAQF,EAAgBE,GACxBC,EAAMH,EAAgBG,IAEjB,CAAC5B,WAAU2B,QAAOC,MAC1B,CAqBM,SAASs8D,GAAgBv8D,EAAOC,EAAK2C,GAC1C,KAAM3C,EAAMD,EAAOC,IAAO,CACxB,MAAMqjB,EAAQ1gB,EAAO3C,GACrB,IAAK/B,MAAMolB,EAAMtoB,KAAOkD,MAAMolB,EAAMpoB,GAClC,KAEH,CACD,OAAO+E,CACR,CAED,SAASu8D,GAASpgE,EAAGC,EAAG4qB,EAAM3uB,GAC5B,OAAI8D,GAAKC,EACA/D,EAAG8D,EAAE6qB,GAAO5qB,EAAE4qB,IAEhB7qB,EAAIA,EAAE6qB,GAAQ5qB,EAAIA,EAAE4qB,GAAQ,CACpC,CCnFM,SAASw1C,GAAoBC,EAAU/3C,GAC5C,IAAI/hB,EAAS,GACT62B,GAAQ,EAUZ,OARIxiC,EAAQylE,IACVjjC,GAAQ,EAER72B,EAAS85D,GAET95D,EDwCG,SAA6B85D,EAAU/3C,GAC5C,MAAM,EAAC3pB,EAAI,KAAI,EAAEE,EAAI,MAAQwhE,GAAY,CAAC,EACpCC,EAAah4C,EAAK/hB,OAClBA,EAAS,GAaf,OAZA+hB,EAAKwQ,SAASxzB,SAAQi7D,IAAkB,IAAjB,MAAC58D,EAAK,IAAEC,GAAI,EACjCA,EAAMs8D,GAAgBv8D,EAAOC,EAAK08D,GAClC,MAAM9gB,EAAQ8gB,EAAW38D,GACnBiB,EAAO07D,EAAW18D,GACd,OAAN/E,GACF0H,EAAOlH,KAAK,CAACV,EAAG6gD,EAAM7gD,EAAGE,MACzB0H,EAAOlH,KAAK,CAACV,EAAGiG,EAAKjG,EAAGE,OACT,OAANF,IACT4H,EAAOlH,KAAK,CAACV,IAAGE,EAAG2gD,EAAM3gD,IACzB0H,EAAOlH,KAAK,CAACV,IAAGE,EAAG+F,EAAK/F,IACzB,IAEI0H,CACR,CCzDYi6D,CAAoBH,EAAU/3C,GAGlC/hB,EAAO5J,OAAS,IAAIihE,GAAY,CACrCr3D,SACAxI,QAAS,CAACk0B,QAAS,GACnBmL,QACAygC,UAAWzgC,IACR,IACN,CAEM,SAASqjC,GAAiBpjE,GAC/B,OAAOA,IAA0B,IAAhBA,EAAOwpB,IACzB,CC5BM,SAAS65C,GAAeviE,EAAShB,EAAOwjE,GAE7C,IAAI95C,EADW1oB,EAAQhB,GACL0pB,KAClB,MAAM+5C,EAAU,CAACzjE,GACjB,IAAII,EAEJ,IAAKojE,EACH,OAAO95C,EAGT,MAAgB,IAATA,IAA6C,IAA3B+5C,EAAQ/iE,QAAQgpB,IAAc,CACrD,IAAKtrB,EAASsrB,GACZ,OAAOA,EAIT,GADAtpB,EAASY,EAAQ0oB,IACZtpB,EACH,OAAO,EAGT,GAAIA,EAAOokB,QACT,OAAOkF,EAGT+5C,EAAQvhE,KAAKwnB,GACbA,EAAOtpB,EAAOspB,IACf,CAED,OAAO,CACR,CAOM,SAASg6C,GAAYv4C,EAAMnrB,EAAOuJ,GAEvC,MAAMmgB,EAwER,SAAyByB,GACvB,MAAMvqB,EAAUuqB,EAAKvqB,QACf+iE,EAAa/iE,EAAQ8oB,KAC3B,IAAIA,EAAOnrB,EAAeolE,GAAcA,EAAWvjE,OAAQujE,QAE9C/0D,IAAT8a,IACFA,IAAS9oB,EAAQ+f,iBAGnB,IAAa,IAAT+I,GAA2B,OAATA,EACpB,OAAO,EAGT,IAAa,IAATA,EACF,MAAO,SAET,OAAOA,CACR,CAzFck6C,CAAgBz4C,GAE7B,GAAIltB,EAASyrB,GACX,OAAOhlB,MAAMglB,EAAKlsB,QAAiBksB,EAGrC,IAAItpB,EAASxB,WAAW8qB,GAExB,OAAItrB,EAASgC,IAAW8C,KAAKoB,MAAMlE,KAAYA,EAOjD,SAA2ByjE,EAAS7jE,EAAOI,EAAQmJ,GACjC,MAAZs6D,GAA+B,MAAZA,IACrBzjE,EAASJ,EAAQI,GAGnB,GAAIA,IAAWJ,GAASI,EAAS,GAAKA,GAAUmJ,EAC9C,OAAO,EAGT,OAAOnJ,CACR,CAhBU0jE,CAAkBp6C,EAAK,GAAI1pB,EAAOI,EAAQmJ,GAG5C,CAAC,SAAU,QAAS,MAAO,QAAS,SAAS7I,QAAQgpB,IAAS,GAAKA,CAC3E,CCHD,SAASq6C,GAAe36D,EAAQ46D,EAAaC,GAC3C,MAAMC,EAAY,GAClB,IAAK,IAAIvpD,EAAI,EAAGA,EAAIspD,EAAWzkE,OAAQmb,IAAK,CAC1C,MAAMwQ,EAAO84C,EAAWtpD,IAClB,MAAC0nC,EAAK,KAAE56C,EAAI,MAAEqiB,GAASq6C,GAAUh5C,EAAM64C,EAAa,KAE1D,MAAKl6C,GAAUu4B,GAAS56C,GAGxB,GAAI46C,EAGF6hB,EAAUE,QAAQt6C,QAGlB,GADA1gB,EAAOlH,KAAK4nB,IACPriB,EAEH,KAGL,CACD2B,EAAOlH,QAAQgiE,EAChB,CAQD,SAASC,GAAUh5C,EAAM64C,EAAan/D,GACpC,MAAMilB,EAAQqB,EAAKtO,YAAYmnD,EAAan/D,GAC5C,IAAKilB,EACH,MAAO,CAAC,EAGV,MAAMu6C,EAAav6C,EAAMjlB,GACnB82B,EAAWxQ,EAAKwQ,SAChBwnC,EAAah4C,EAAK/hB,OACxB,IAAIi5C,GAAQ,EACR56C,GAAO,EACX,IAAK,IAAIpI,EAAI,EAAGA,EAAIs8B,EAASn8B,OAAQH,IAAK,CACxC,MAAM47B,EAAUU,EAASt8B,GACnBilE,EAAanB,EAAWloC,EAAQz0B,OAAO3B,GACvC0/D,EAAYpB,EAAWloC,EAAQx0B,KAAK5B,GAC1C,GAAIoC,EAAWo9D,EAAYC,EAAYC,GAAY,CACjDliB,EAAQgiB,IAAeC,EACvB78D,EAAO48D,IAAeE,EACtB,KACD,CACF,CACD,MAAO,CAACliB,QAAO56C,OAAMqiB,QACtB,CC1GM,MAAM06C,GACX3oD,WAAAA,CAAYkP,GACV/O,KAAKxa,EAAIupB,EAAKvpB,EACdwa,KAAKta,EAAIqpB,EAAKrpB,EACdsa,KAAK8M,OAASiC,EAAKjC,MACpB,CAEDu2C,WAAAA,CAAY39C,EAAKyD,EAAQ4F,GACvB,MAAM,EAACvpB,EAAC,EAAEE,EAAC,OAAEonB,GAAU9M,KAGvB,OAFAmJ,EAASA,GAAU,CAAC3e,MAAO,EAAGC,IAAKtD,GACnCue,EAAI0H,IAAI5nB,EAAGE,EAAGonB,EAAQ3D,EAAO1e,IAAK0e,EAAO3e,OAAO,IACxCukB,EAAK5F,MACd,CAEDtI,WAAAA,CAAYiN,GACV,MAAM,EAACtoB,EAAC,EAAEE,EAAC,OAAEonB,GAAU9M,KACjBjW,EAAQ+jB,EAAM/jB,MACpB,MAAO,CACLvE,EAAGA,EAAI0B,KAAK6I,IAAIhG,GAAS+iB,EACzBpnB,EAAGA,EAAIwB,KAAK4H,IAAI/E,GAAS+iB,EACzB/iB,QAEH,ECbI,SAASqpB,GAAWlvB,GACzB,MAAM,MAACkf,EAAK,KAAEsK,EAAI,KAAEyB,GAAQjrB,EAE5B,GAAI9B,EAASsrB,GACX,OAwBJ,SAAwBtK,EAAOpf,GAC7B,MAAMmJ,EAAOiW,EAAM8nB,eAAelnC,GAC5BwkB,EAAUrb,GAAQiW,EAAMy0B,iBAAiB7zC,GAC/C,OAAOwkB,EAAUrb,EAAKg9B,QAAU,IACjC,CA5BUs+B,CAAerlD,EAAOsK,GAG/B,GAAa,UAATA,EACF,OFNG,SAAyBxpB,GAC9B,MAAM,MAACsiB,EAAK,MAAExiB,EAAK,KAAEmrB,GAAQjrB,EACvBkJ,EAAS,GACTuyB,EAAWxQ,EAAKwQ,SAChB+oC,EAAev5C,EAAK/hB,OACpB66D,EAiBR,SAAuBzhD,EAAOxiB,GAC5B,MAAM2kE,EAAQ,GACRzf,EAAQ1iC,EAAMghB,wBAAwB,QAE5C,IAAK,IAAInkC,EAAI,EAAGA,EAAI6lD,EAAM1lD,OAAQH,IAAK,CACrC,MAAM8J,EAAO+7C,EAAM7lD,GACnB,GAAI8J,EAAKnJ,QAAUA,EACjB,MAEGmJ,EAAKwgC,QACRg7B,EAAMP,QAAQj7D,EAAKg9B,QAEtB,CACD,OAAOw+B,CACR,CA/BoBC,CAAcpiD,EAAOxiB,GACxCikE,EAAW/hE,KAAK+gE,GAAoB,CAACzhE,EAAG,KAAME,EAAG8gB,EAAMsC,QAASqG,IAEhE,IAAK,IAAI9rB,EAAI,EAAGA,EAAIs8B,EAASn8B,OAAQH,IAAK,CACxC,MAAM47B,EAAUU,EAASt8B,GACzB,IAAK,IAAIsb,EAAIsgB,EAAQz0B,MAAOmU,GAAKsgB,EAAQx0B,IAAKkU,IAC5CopD,GAAe36D,EAAQs7D,EAAa/pD,GAAIspD,EAE3C,CACD,OAAO,IAAIxD,GAAY,CAACr3D,SAAQxI,QAAS,CAAC,GAC3C,CETUikE,CAAgB3kE,GAGzB,GAAa,UAATwpB,EACF,OAAO,EAGT,MAAMw5C,EAmBR,SAAyBhjE,GACvB,MAAMsiB,EAAQtiB,EAAOsiB,OAAS,CAAC,EAE/B,GAAIA,EAAMsiD,yBACR,OAsBJ,SAAiC5kE,GAC/B,MAAM,MAACsiB,EAAK,KAAEkH,GAAQxpB,EAChBU,EAAU4hB,EAAM5hB,QAChBpB,EAASgjB,EAAMsmB,YAAYtpC,OAC3BgH,EAAQ5F,EAAQxB,QAAUojB,EAAMzd,IAAMyd,EAAM1d,IAC5CtH,EHuBD,SAAyBksB,EAAMlH,EAAO8rB,GAC3C,IAAI9wC,EAYJ,OATEA,EADW,UAATksB,EACM4kB,EACU,QAAT5kB,EACDlH,EAAM5hB,QAAQxB,QAAUojB,EAAM1d,IAAM0d,EAAMzd,IACzC9G,EAASyrB,GAEVA,EAAKlsB,MAELglB,EAAMynC,eAETzsD,CACR,CGrCeunE,CAAgBr7C,EAAMlH,EAAOhc,GACrCpG,EAAS,GAEf,GAAIQ,EAAQykB,KAAKk3C,SAAU,CACzB,MAAMzrB,EAAStuB,EAAMsiD,yBAAyB,EAAGt+D,GACjD,OAAO,IAAIg+D,GAAU,CACnBhjE,EAAGsvC,EAAOtvC,EACVE,EAAGovC,EAAOpvC,EACVonB,OAAQtG,EAAMwiD,8BAA8BxnE,IAE/C,CAED,IAAK,IAAI6B,EAAI,EAAGA,EAAIG,IAAUH,EAC5Be,EAAO8B,KAAKsgB,EAAMsiD,yBAAyBzlE,EAAG7B,IAEhD,OAAO4C,CACR,CA3CU6kE,CAAwB/kE,GAEjC,OAIF,SAA+BA,GAC7B,MAAM,MAACsiB,EAAQ,CAAC,EAAC,KAAEkH,GAAQxpB,EACrBwnB,EHqBD,SAAyBgC,EAAMlH,GACpC,IAAIkF,EAAQ,KAWZ,MAVa,UAATgC,EACFhC,EAAQlF,EAAMsC,OACI,QAAT4E,EACThC,EAAQlF,EAAMoC,IACL3mB,EAASyrB,GAElBhC,EAAQlF,EAAMzY,iBAAiB2f,EAAKlsB,OAC3BglB,EAAM6tB,eACf3oB,EAAQlF,EAAM6tB,gBAET3oB,CACR,CGlCew9C,CAAgBx7C,EAAMlH,GAEpC,GAAIpkB,EAASspB,GAAQ,CACnB,MAAMwnB,EAAa1sB,EAAM8tB,eAEzB,MAAO,CACL9uC,EAAG0tC,EAAaxnB,EAAQ,KACxBhmB,EAAGwtC,EAAa,KAAOxnB,EAE1B,CAED,OAAO,IACR,CAlBQy9C,CAAsBjlE,EAC9B,CA1BkBklE,CAAgBllE,GAEjC,OAAIgjE,aAAoBsB,GACftB,EAGFD,GAAoBC,EAAU/3C,EACtC,CC9BM,SAASk6C,GAAU3jD,EAAKxhB,EAAQ6pB,GACrC,MAAM3pB,EAASgvB,GAAWlvB,IACpB,KAACirB,EAAI,MAAE3I,EAAK,KAAE7Y,GAAQzJ,EACtBolE,EAAWn6C,EAAKvqB,QAChB+iE,EAAa2B,EAAS57C,KACtBnN,EAAQ+oD,EAAS3kD,iBACjB,MAAC4kD,EAAQhpD,EAAK,MAAEooD,EAAQpoD,GAASonD,GAAc,CAAC,EAClDvjE,GAAU+qB,EAAK/hB,OAAO5J,SACxByqB,GAASvI,EAAKqI,GAMlB,SAAgBrI,EAAKke,GACnB,MAAM,KAACzU,EAAI,OAAE/qB,EAAM,MAAEmlE,EAAK,MAAEZ,EAAK,KAAE56C,EAAI,MAAEvH,GAASod,EAC5C/6B,EAAWsmB,EAAK8U,MAAQ,QAAUL,EAAIj2B,KAE5C+X,EAAIsG,OAEa,MAAbnjB,GAAoB8/D,IAAUY,IAChCC,GAAa9jD,EAAKthB,EAAQ2pB,EAAKnF,KAC/B8E,GAAKhI,EAAK,CAACyJ,OAAM/qB,SAAQmc,MAAOgpD,EAAO/iD,QAAO3d,aAC9C6c,EAAI0G,UACJ1G,EAAIsG,OACJw9C,GAAa9jD,EAAKthB,EAAQ2pB,EAAKjF,SAEjC4E,GAAKhI,EAAK,CAACyJ,OAAM/qB,SAAQmc,MAAOooD,EAAOniD,QAAO3d,aAE9C6c,EAAI0G,SACL,CArBGq9C,CAAO/jD,EAAK,CAACyJ,OAAM/qB,SAAQmlE,QAAOZ,QAAO56C,OAAMvH,QAAO7Y,SACtDwgB,GAAWzI,GAEd,CAoBD,SAAS8jD,GAAa9jD,EAAKthB,EAAQslE,GACjC,MAAM,SAAC/pC,EAAQ,OAAEvyB,GAAUhJ,EAC3B,IAAIiiD,GAAQ,EACRsjB,GAAW,EAEfjkD,EAAIwH,YACJ,IAAK,MAAM+R,KAAWU,EAAU,CAC9B,MAAM,MAACn1B,EAAK,IAAEC,GAAOw0B,EACfrI,EAAaxpB,EAAO5C,GACpBowC,EAAYxtC,EAAO25D,GAAgBv8D,EAAOC,EAAK2C,IACjDi5C,GACF3gC,EAAI4H,OAAOsJ,EAAWpxB,EAAGoxB,EAAWlxB,GACpC2gD,GAAQ,IAER3gC,EAAI6H,OAAOqJ,EAAWpxB,EAAGkkE,GACzBhkD,EAAI6H,OAAOqJ,EAAWpxB,EAAGoxB,EAAWlxB,IAEtCikE,IAAavlE,EAAOi/D,YAAY39C,EAAKuZ,EAAS,CAAC4R,KAAM84B,IACjDA,EACFjkD,EAAI2H,YAEJ3H,EAAI6H,OAAOqtB,EAAUp1C,EAAGkkE,EAE3B,CAEDhkD,EAAI6H,OAAOnpB,EAAOiiD,QAAQ7gD,EAAGkkE,GAC7BhkD,EAAI2H,YACJ3H,EAAIwI,MACL,CAED,SAASR,GAAKhI,EAAKke,GACjB,MAAM,KAACzU,EAAI,OAAE/qB,EAAM,SAAEyE,EAAQ,MAAE0X,EAAK,MAAEiG,GAASod,EACzCjE,ENlED,SAAmBxQ,EAAM/qB,EAAQyE,GACtC,MAAM82B,EAAWxQ,EAAKwQ,SAChBvyB,EAAS+hB,EAAK/hB,OACdw8D,EAAUxlE,EAAOgJ,OACjBtH,EAAQ,GAEd,IAAK,MAAMm5B,KAAWU,EAAU,CAC9B,IAAI,MAACn1B,EAAK,IAAEC,GAAOw0B,EACnBx0B,EAAMs8D,GAAgBv8D,EAAOC,EAAK2C,GAElC,MAAM+b,EAAS29C,GAAWj+D,EAAUuE,EAAO5C,GAAQ4C,EAAO3C,GAAMw0B,EAAQ/W,MAExE,IAAK9jB,EAAOu7B,SAAU,CAGpB75B,EAAMI,KAAK,CACThC,OAAQ+6B,EACR76B,OAAQ+kB,EACR3e,MAAO4C,EAAO5C,GACdC,IAAK2C,EAAO3C,KAEd,QACD,CAGD,MAAMo/D,EAAiBnqC,GAAet7B,EAAQ+kB,GAE9C,IAAK,MAAM2gD,KAAOD,EAAgB,CAChC,MAAME,EAAYjD,GAAWj+D,EAAU+gE,EAAQE,EAAIt/D,OAAQo/D,EAAQE,EAAIr/D,KAAMq/D,EAAI5hD,MAC3E8hD,EAAchrC,GAAcC,EAAS7xB,EAAQ28D,GAEnD,IAAK,MAAME,KAAcD,EACvBlkE,EAAMI,KAAK,CACThC,OAAQ+lE,EACR7lE,OAAQ0lE,EACRt/D,MAAO,CACL,CAAC3B,GAAWm+D,GAAS79C,EAAQ4gD,EAAW,QAAS7iE,KAAK6B,MAExD0B,IAAK,CACH,CAAC5B,GAAWm+D,GAAS79C,EAAQ4gD,EAAW,MAAO7iE,KAAK4B,OAI3D,CACF,CACD,OAAOhD,CACR,CMoBkB8+D,CAAUz1C,EAAM/qB,EAAQyE,GAEzC,IAAK,MAAO3E,OAAQgmE,EAAK9lE,OAAQ0lE,EAAG,MAAEt/D,EAAK,IAAEC,KAAQk1B,EAAU,CAC7D,MAAOra,OAAO,gBAACX,EAAkBpE,GAAS,CAAC,GAAK2pD,EAC1CC,GAAsB,IAAX/lE,EAEjBshB,EAAIsG,OACJtG,EAAI2J,UAAY1K,EAEhBylD,GAAW1kD,EAAKc,EAAO2jD,GAAYrD,GAAWj+D,EAAU2B,EAAOC,IAE/Dib,EAAIwH,YAEJ,MAAMy8C,IAAax6C,EAAKk0C,YAAY39C,EAAKwkD,GAEzC,IAAIhiD,EACJ,GAAIiiD,EAAU,CACRR,EACFjkD,EAAI2H,YAEJg9C,GAAmB3kD,EAAKthB,EAAQqG,EAAK5B,GAGvC,MAAMyhE,IAAelmE,EAAOi/D,YAAY39C,EAAKokD,EAAK,CAACj5B,KAAM84B,EAAUvmE,SAAS,IAC5E8kB,EAAOyhD,GAAYW,EACdpiD,GACHmiD,GAAmB3kD,EAAKthB,EAAQoG,EAAO3B,EAE1C,CAED6c,EAAI2H,YACJ3H,EAAIgI,KAAKxF,EAAO,UAAY,WAE5BxC,EAAI0G,SACL,CACF,CAED,SAASg+C,GAAW1kD,EAAKc,EAAO2C,GAC9B,MAAM,IAACP,EAAG,OAAEE,GAAUtC,EAAMpD,MAAMqrB,WAC5B,SAAC5lC,EAAQ,MAAE2B,EAAK,IAAEC,GAAO0e,GAAU,CAAC,EACzB,MAAbtgB,IACF6c,EAAIwH,YACJxH,EAAI+H,KAAKjjB,EAAOoe,EAAKne,EAAMD,EAAOse,EAASF,GAC3ClD,EAAIwI,OAEP,CAED,SAASm8C,GAAmB3kD,EAAKthB,EAAQ0pB,EAAOjlB,GAC9C,MAAM0hE,EAAoBnmE,EAAOyc,YAAYiN,EAAOjlB,GAChD0hE,GACF7kD,EAAI6H,OAAOg9C,EAAkB/kE,EAAG+kE,EAAkB7kE,EAErD,CC7GD,OAAe,CACbpE,GAAI,SAEJkpE,mBAAAA,CAAoBpnD,EAAOqnD,EAAO7lE,GAChC,MAAM2I,GAAS6V,EAAM+H,KAAKtG,UAAY,IAAIrhB,OACpCwB,EAAU,GAChB,IAAImI,EAAM9J,EAAG8rB,EAAMjrB,EAEnB,IAAKb,EAAI,EAAGA,EAAIkK,IAASlK,EACvB8J,EAAOiW,EAAM8nB,eAAe7nC,GAC5B8rB,EAAOhiB,EAAKg9B,QACZjmC,EAAS,KAELirB,GAAQA,EAAKvqB,SAAWuqB,aAAgBs1C,KAC1CvgE,EAAS,CACPskB,QAASpF,EAAMy0B,iBAAiBx0C,GAChCW,MAAOX,EACPqqB,KAAMg6C,GAAYv4C,EAAM9rB,EAAGkK,GAC3B6V,QACAzV,KAAMR,EAAKu6B,WAAW9iC,QAAQihB,UAC9BW,MAAOrZ,EAAKm6B,OACZnY,SAIJhiB,EAAKu9D,QAAUxmE,EACfc,EAAQkB,KAAKhC,GAGf,IAAKb,EAAI,EAAGA,EAAIkK,IAASlK,EACvBa,EAASc,EAAQ3B,GACZa,IAA0B,IAAhBA,EAAOwpB,OAItBxpB,EAAOwpB,KAAO65C,GAAeviE,EAAS3B,EAAGuB,EAAQ4iE,WAEpD,EAEDmD,UAAAA,CAAWvnD,EAAOqnD,EAAO7lE,GACvB,MAAMu9B,EAA4B,eAArBv9B,EAAQgmE,SACfrkC,EAAWnjB,EAAM84B,+BACjBnuB,EAAO3K,EAAMqrB,UACnB,IAAK,IAAIprC,EAAIkjC,EAAS/iC,OAAS,EAAGH,GAAK,IAAKA,EAAG,CAC7C,MAAMa,EAASqiC,EAASljC,GAAGqnE,QACtBxmE,IAILA,EAAOirB,KAAK0rB,oBAAoB9sB,EAAM7pB,EAAOyJ,MACzCw0B,GAAQj+B,EAAOwpB,MACjB27C,GAAUjmD,EAAMsC,IAAKxhB,EAAQ6pB,GAEhC,CACF,EAED88C,kBAAAA,CAAmBznD,EAAOqnD,EAAO7lE,GAC/B,GAAyB,uBAArBA,EAAQgmE,SACV,OAGF,MAAMrkC,EAAWnjB,EAAM84B,+BACvB,IAAK,IAAI74C,EAAIkjC,EAAS/iC,OAAS,EAAGH,GAAK,IAAKA,EAAG,CAC7C,MAAMa,EAASqiC,EAASljC,GAAGqnE,QAEvBpD,GAAiBpjE,IACnBmlE,GAAUjmD,EAAMsC,IAAKxhB,EAAQkf,EAAMqrB,UAEtC,CACF,EAEDq8B,iBAAAA,CAAkB1nD,EAAOrgB,EAAM6B,GAC7B,MAAMV,EAASnB,EAAKoK,KAAKu9D,QAEpBpD,GAAiBpjE,IAAgC,sBAArBU,EAAQgmE,UAIzCvB,GAAUjmD,EAAMsC,IAAKxhB,EAAQkf,EAAMqrB,UACpC,EAED3mB,SAAU,CACR0/C,WAAW,EACXoD,SAAU,sBCvEd,MAAMG,GAAaA,CAACC,EAAWrZ,KAC7B,IAAI,UAACsZ,EAAYtZ,EAAQ,SAAEuZ,EAAWvZ,GAAYqZ,EAOlD,OALIA,EAAUG,gBACZF,EAAY/jE,KAAK4B,IAAImiE,EAAWtZ,GAChCuZ,EAAWF,EAAUI,iBAAmBlkE,KAAK4B,IAAIoiE,EAAUvZ,IAGtD,CACLuZ,WACAD,YACAI,WAAYnkE,KAAK6B,IAAI4oD,EAAUsZ,GAChC,EAKI,MAAMK,WAAelmB,GAK1BvlC,WAAAA,CAAYolB,GACVkP,QAEAn0B,KAAKurD,QAAS,EAGdvrD,KAAKwrD,eAAiB,GAKtBxrD,KAAKyrD,aAAe,KAGpBzrD,KAAK0rD,cAAe,EAEpB1rD,KAAKoD,MAAQ6hB,EAAO7hB,MACpBpD,KAAKpb,QAAUqgC,EAAOrgC,QACtBob,KAAK0F,IAAMuf,EAAOvf,IAClB1F,KAAK2rD,iBAAc/4D,EACnBoN,KAAK4rD,iBAAch5D,EACnBoN,KAAK6rD,gBAAaj5D,EAClBoN,KAAK6b,eAAYjpB,EACjBoN,KAAK6P,cAAWjd,EAChBoN,KAAK4I,SAAMhW,EACXoN,KAAK8I,YAASlW,EACdoN,KAAK+I,UAAOnW,EACZoN,KAAK6I,WAAQjW,EACboN,KAAKmM,YAASvZ,EACdoN,KAAKgK,WAAQpX,EACboN,KAAK8nC,cAAWl1C,EAChBoN,KAAKg8B,cAAWppC,EAChBoN,KAAKQ,YAAS5N,EACdoN,KAAKs+B,cAAW1rC,CACjB,CAED2xB,MAAAA,CAAO1U,EAAUgM,EAAWD,GAC1B5b,KAAK6P,SAAWA,EAChB7P,KAAK6b,UAAYA,EACjB7b,KAAK8nC,SAAWlsB,EAEhB5b,KAAKypC,gBACLzpC,KAAK8rD,cACL9rD,KAAK2qC,KACN,CAEDlB,aAAAA,GACMzpC,KAAKs0B,gBACPt0B,KAAKgK,MAAQhK,KAAK6P,SAClB7P,KAAK+I,KAAO/I,KAAK8nC,SAAS/+B,KAC1B/I,KAAK6I,MAAQ7I,KAAKgK,QAElBhK,KAAKmM,OAASnM,KAAK6b,UACnB7b,KAAK4I,IAAM5I,KAAK8nC,SAASl/B,IACzB5I,KAAK8I,OAAS9I,KAAKmM,OAEtB,CAED2/C,WAAAA,GACE,MAAMd,EAAYhrD,KAAKpb,QAAQioC,QAAU,CAAC,EAC1C,IAAI8+B,EAAc5pE,EAAKipE,EAAU7zB,eAAgB,CAACn3B,KAAKoD,OAAQpD,OAAS,GAEpEgrD,EAAU11C,SACZq2C,EAAcA,EAAYr2C,QAAQvuB,GAASikE,EAAU11C,OAAOvuB,EAAMiZ,KAAKoD,MAAM+H,SAG3E6/C,EAAUl5B,OACZ65B,EAAcA,EAAY75B,MAAK,CAAClrC,EAAGC,IAAMmkE,EAAUl5B,KAAKlrC,EAAGC,EAAGmZ,KAAKoD,MAAM+H,SAGvEnL,KAAKpb,QAAQxB,SACfuoE,EAAYvoE,UAGd4c,KAAK2rD,YAAcA,CACpB,CAEDhhB,GAAAA,GACE,MAAM,QAAC/lD,EAAO,IAAE8gB,GAAO1F,KAMvB,IAAKpb,EAAQokB,QAEX,YADAhJ,KAAKgK,MAAQhK,KAAKmM,OAAS,GAI7B,MAAM6+C,EAAYpmE,EAAQioC,OACpBk/B,EAAYl6C,GAAOm5C,EAAU5lD,MAC7BusC,EAAWoa,EAAUjlE,KACrBqlD,EAAcnsC,KAAKgsD,uBACnB,SAACd,EAAQ,WAAEG,GAAcN,GAAWC,EAAWrZ,GAErD,IAAI3nC,EAAOmC,EAEXzG,EAAIN,KAAO2mD,EAAUzgD,OAEjBtL,KAAKs0B,gBACPtqB,EAAQhK,KAAK6P,SACb1D,EAASnM,KAAKisD,SAAS9f,EAAawF,EAAUuZ,EAAUG,GAAc,KAEtEl/C,EAASnM,KAAK6b,UACd7R,EAAQhK,KAAKksD,SAAS/f,EAAa4f,EAAWb,EAAUG,GAAc,IAGxErrD,KAAKgK,MAAQ9iB,KAAK4B,IAAIkhB,EAAOplB,EAAQirB,UAAY7P,KAAK6P,UACtD7P,KAAKmM,OAASjlB,KAAK4B,IAAIqjB,EAAQvnB,EAAQi3B,WAAa7b,KAAK6b,UAC1D,CAKDowC,QAAAA,CAAS9f,EAAawF,EAAUuZ,EAAUG,GACxC,MAAM,IAAC3lD,EAAG,SAAEmK,EAAUjrB,SAAUioC,QAAQ,QAAClkB,KAAa3I,KAChDmsD,EAAWnsD,KAAKwrD,eAAiB,GAEjCK,EAAa7rD,KAAK6rD,WAAa,CAAE,GACjCtmD,EAAa8lD,EAAa1iD,EAChC,IAAIyjD,EAAcjgB,EAElBzmC,EAAI4J,UAAY,OAChB5J,EAAI6J,aAAe,SAEnB,IAAI88C,GAAO,EACPzjD,GAAOrD,EAgBX,OAfAvF,KAAK2rD,YAAYx/D,SAAQ,CAACkrC,EAAYh0C,KACpC,MAAM46B,EAAYitC,EAAYvZ,EAAW,EAAKjsC,EAAI8F,YAAY6rB,EAAWntB,MAAMF,OAErE,IAAN3mB,GAAWwoE,EAAWA,EAAWroE,OAAS,GAAKy6B,EAAY,EAAItV,EAAUkH,KAC3Eu8C,GAAe7mD,EACfsmD,EAAWA,EAAWroE,QAAUH,EAAI,EAAI,EAAI,IAAM,EAClDulB,GAAOrD,EACP8mD,KAGFF,EAAS9oE,GAAK,CAAC0lB,KAAM,EAAGH,MAAKyjD,MAAKriD,MAAOiU,EAAW9R,OAAQk/C,GAE5DQ,EAAWA,EAAWroE,OAAS,IAAMy6B,EAAYtV,CAAO,IAGnDyjD,CACR,CAEDF,QAAAA,CAAS/f,EAAa4f,EAAWb,EAAUoB,GACzC,MAAM,IAAC5mD,EAAG,UAAEmW,EAAWj3B,SAAUioC,QAAQ,QAAClkB,KAAa3I,KACjDmsD,EAAWnsD,KAAKwrD,eAAiB,GACjCI,EAAc5rD,KAAK4rD,YAAc,GACjCW,EAAc1wC,EAAYswB,EAEhC,IAAIqgB,EAAa7jD,EACb8jD,EAAkB,EAClBC,EAAmB,EAEnB3jD,EAAO,EACP4jD,EAAM,EAyBV,OAvBA3sD,KAAK2rD,YAAYx/D,SAAQ,CAACkrC,EAAYh0C,KACpC,MAAM,UAAC46B,EAAS,WAAEotC,GA8VxB,SAA2BH,EAAUa,EAAWrmD,EAAK2xB,EAAYi1B,GAC/D,MAAMruC,EAKR,SAA4BoZ,EAAY6zB,EAAUa,EAAWrmD,GAC3D,IAAIknD,EAAiBv1B,EAAWntB,KAC5B0iD,GAA4C,kBAAnBA,IAC3BA,EAAiBA,EAAe9pC,QAAO,CAACl8B,EAAGC,IAAMD,EAAEpD,OAASqD,EAAErD,OAASoD,EAAIC,KAE7E,OAAOqkE,EAAYa,EAAUjlE,KAAO,EAAK4e,EAAI8F,YAAYohD,GAAgB5iD,KAC1E,CAXmB6iD,CAAmBx1B,EAAY6zB,EAAUa,EAAWrmD,GAChE2lD,EAYR,SAA6BiB,EAAaj1B,EAAYy1B,GACpD,IAAIzB,EAAaiB,EACc,kBAApBj1B,EAAWntB,OACpBmhD,EAAa0B,GAA0B11B,EAAYy1B,IAErD,OAAOzB,CACR,CAlBoB2B,CAAoBV,EAAaj1B,EAAY00B,EAAUxmD,YAC1E,MAAO,CAAC0Y,YAAWotC,aACpB,CAlWqC4B,CAAkB/B,EAAUa,EAAWrmD,EAAK2xB,EAAYi1B,GAGpFjpE,EAAI,GAAKqpE,EAAmBrB,EAAa,EAAI1iD,EAAU4jD,IACzDC,GAAcC,EAAkB9jD,EAChCijD,EAAY1lE,KAAK,CAAC8jB,MAAOyiD,EAAiBtgD,OAAQugD,IAClD3jD,GAAQ0jD,EAAkB9jD,EAC1BgkD,IACAF,EAAkBC,EAAmB,GAIvCP,EAAS9oE,GAAK,CAAC0lB,OAAMH,IAAK8jD,EAAkBC,MAAK3iD,MAAOiU,EAAW9R,OAAQk/C,GAG3EoB,EAAkBvlE,KAAK6B,IAAI0jE,EAAiBxuC,GAC5CyuC,GAAoBrB,EAAa1iD,CAAO,IAG1C6jD,GAAcC,EACdb,EAAY1lE,KAAK,CAAC8jB,MAAOyiD,EAAiBtgD,OAAQugD,IAE3CF,CACR,CAEDU,cAAAA,GACE,IAAKltD,KAAKpb,QAAQokB,QAChB,OAEF,MAAMmjC,EAAcnsC,KAAKgsD,uBAClBR,eAAgBW,EAAUvnE,SAAS,MAACoI,EAAO6/B,QAAQ,QAAClkB,GAAQ,IAAEiV,IAAQ5d,KACvEmtD,EAAYxvC,GAAcC,EAAK5d,KAAK+I,KAAM/I,KAAKgK,OACrD,GAAIhK,KAAKs0B,eAAgB,CACvB,IAAI+3B,EAAM,EACNtjD,EAAO9b,GAAeD,EAAOgT,KAAK+I,KAAOJ,EAAS3I,KAAK6I,MAAQ7I,KAAK6rD,WAAWQ,IACnF,IAAK,MAAMe,KAAUjB,EACfE,IAAQe,EAAOf,MACjBA,EAAMe,EAAOf,IACbtjD,EAAO9b,GAAeD,EAAOgT,KAAK+I,KAAOJ,EAAS3I,KAAK6I,MAAQ7I,KAAK6rD,WAAWQ,KAEjFe,EAAOxkD,KAAO5I,KAAK4I,IAAMujC,EAAcxjC,EACvCykD,EAAOrkD,KAAOokD,EAAUnvC,WAAWmvC,EAAU3nE,EAAEujB,GAAOqkD,EAAOpjD,OAC7DjB,GAAQqkD,EAAOpjD,MAAQrB,MAEpB,CACL,IAAIgkD,EAAM,EACN/jD,EAAM3b,GAAeD,EAAOgT,KAAK4I,IAAMujC,EAAcxjC,EAAS3I,KAAK8I,OAAS9I,KAAK4rD,YAAYe,GAAKxgD,QACtG,IAAK,MAAMihD,KAAUjB,EACfiB,EAAOT,MAAQA,IACjBA,EAAMS,EAAOT,IACb/jD,EAAM3b,GAAeD,EAAOgT,KAAK4I,IAAMujC,EAAcxjC,EAAS3I,KAAK8I,OAAS9I,KAAK4rD,YAAYe,GAAKxgD,SAEpGihD,EAAOxkD,IAAMA,EACbwkD,EAAOrkD,MAAQ/I,KAAK+I,KAAOJ,EAC3BykD,EAAOrkD,KAAOokD,EAAUnvC,WAAWmvC,EAAU3nE,EAAE4nE,EAAOrkD,MAAOqkD,EAAOpjD,OACpEpB,GAAOwkD,EAAOjhD,OAASxD,CAE1B,CACF,CAED2rB,YAAAA,GACE,MAAiC,QAA1Bt0B,KAAKpb,QAAQo3C,UAAgD,WAA1Bh8B,KAAKpb,QAAQo3C,QACxD,CAED7Z,IAAAA,GACE,GAAIniB,KAAKpb,QAAQokB,QAAS,CACxB,MAAMtD,EAAM1F,KAAK0F,IACjBuI,GAASvI,EAAK1F,MAEdA,KAAKqtD,QAELl/C,GAAWzI,EACZ,CACF,CAKD2nD,KAAAA,GACE,MAAOzoE,QAASmqB,EAAI,YAAE68C,EAAW,WAAEC,EAAU,IAAEnmD,GAAO1F,MAChD,MAAChT,EAAO6/B,OAAQm+B,GAAaj8C,EAC7Bu+C,EAAexlD,GAASvH,MACxB4sD,EAAYxvC,GAAc5O,EAAK6O,IAAK5d,KAAK+I,KAAM/I,KAAKgK,OACpD+hD,EAAYl6C,GAAOm5C,EAAU5lD,OAC7B,QAACuD,GAAWqiD,EACZrZ,EAAWoa,EAAUjlE,KACrBymE,EAAe5b,EAAW,EAChC,IAAI6b,EAEJxtD,KAAKkxC,YAGLxrC,EAAI4J,UAAY69C,EAAU79C,UAAU,QACpC5J,EAAI6J,aAAe,SACnB7J,EAAI4D,UAAY,GAChB5D,EAAIN,KAAO2mD,EAAUzgD,OAErB,MAAM,SAAC4/C,EAAQ,UAAED,EAAS,WAAEI,GAAcN,GAAWC,EAAWrZ,GAyE1Drd,EAAet0B,KAAKs0B,eACpB6X,EAAcnsC,KAAKgsD,sBAEvBwB,EADEl5B,EACO,CACP9uC,EAAGyH,GAAeD,EAAOgT,KAAK+I,KAAOJ,EAAS3I,KAAK6I,MAAQgjD,EAAW,IACtEnmE,EAAGsa,KAAK4I,IAAMD,EAAUwjC,EACxBh9B,KAAM,GAGC,CACP3pB,EAAGwa,KAAK+I,KAAOJ,EACfjjB,EAAGuH,GAAeD,EAAOgT,KAAK4I,IAAMujC,EAAcxjC,EAAS3I,KAAK8I,OAAS8iD,EAAY,GAAGz/C,QACxFgD,KAAM,GAIViP,GAAsBpe,KAAK0F,IAAKqJ,EAAK0+C,eAErC,MAAMloD,EAAa8lD,EAAa1iD,EAChC3I,KAAK2rD,YAAYx/D,SAAQ,CAACkrC,EAAYh0C,KACpCqiB,EAAIiK,YAAc0nB,EAAWD,UAC7B1xB,EAAI2J,UAAYgoB,EAAWD,UAE3B,MAAM7rB,EAAY7F,EAAI8F,YAAY6rB,EAAWntB,MAAMF,MAC7CsF,EAAY69C,EAAU79C,UAAU+nB,EAAW/nB,YAAc+nB,EAAW/nB,UAAY07C,EAAU17C,YAC1FtF,EAAQkhD,EAAWqC,EAAehiD,EACxC,IAAI/lB,EAAIgoE,EAAOhoE,EACXE,EAAI8nE,EAAO9nE,EAEfynE,EAAUrvC,SAAS9d,KAAKgK,OAEpBsqB,EACEjxC,EAAI,GAAKmC,EAAIwkB,EAAQrB,EAAU3I,KAAK6I,QACtCnjB,EAAI8nE,EAAO9nE,GAAK6f,EAChBioD,EAAOr+C,OACP3pB,EAAIgoE,EAAOhoE,EAAIyH,GAAeD,EAAOgT,KAAK+I,KAAOJ,EAAS3I,KAAK6I,MAAQgjD,EAAW2B,EAAOr+C,QAElF9rB,EAAI,GAAKqC,EAAI6f,EAAavF,KAAK8I,SACxCtjB,EAAIgoE,EAAOhoE,EAAIA,EAAIomE,EAAY4B,EAAOr+C,MAAMnF,MAAQrB,EACpD6kD,EAAOr+C,OACPzpB,EAAI8nE,EAAO9nE,EAAIuH,GAAeD,EAAOgT,KAAK4I,IAAMujC,EAAcxjC,EAAS3I,KAAK8I,OAAS8iD,EAAY4B,EAAOr+C,MAAMhD,SAYhH,GA1HoB,SAAS3mB,EAAGE,EAAG2xC,GACnC,GAAI3uC,MAAMwiE,IAAaA,GAAY,GAAKxiE,MAAMuiE,IAAcA,EAAY,EACtE,OAIFvlD,EAAIsG,OAEJ,MAAM1C,EAAY/mB,EAAe80C,EAAW/tB,UAAW,GAUvD,GATA5D,EAAI2J,UAAY9sB,EAAe80C,EAAWhoB,UAAWi+C,GACrD5nD,EAAIo9C,QAAUvgE,EAAe80C,EAAWyrB,QAAS,QACjDp9C,EAAIorC,eAAiBvuD,EAAe80C,EAAWyZ,eAAgB,GAC/DprC,EAAIs8C,SAAWz/D,EAAe80C,EAAW2qB,SAAU,SACnDt8C,EAAI4D,UAAYA,EAChB5D,EAAIiK,YAAcptB,EAAe80C,EAAW1nB,YAAa29C,GAEzD5nD,EAAImrC,YAAYtuD,EAAe80C,EAAWq2B,SAAU,KAEhD1C,EAAUG,cAAe,CAG3B,MAAMwC,EAAc,CAClB7gD,OAAQm+C,EAAY/jE,KAAK0mE,MAAQ,EACjChhD,WAAYyqB,EAAWzqB,WACvBC,SAAUwqB,EAAWxqB,SACrBc,YAAarE,GAETswB,EAAUuzB,EAAUpvC,MAAMv4B,EAAG0lE,EAAW,GAI9C5+C,GAAgB5G,EAAKioD,EAAa/zB,EAHlBl0C,EAAI6nE,EAGgCvC,EAAUI,iBAAmBF,OAC5E,CAGL,MAAM2C,EAAUnoE,EAAIwB,KAAK6B,KAAK4oD,EAAWsZ,GAAa,EAAG,GACnD6C,EAAWX,EAAUnvC,WAAWx4B,EAAG0lE,GACnCvL,EAAehuC,GAAc0lB,EAAWsoB,cAE9Cj6C,EAAIwH,YAEAtrB,OAAOohB,OAAO28C,GAAcvK,MAAK7vD,GAAW,IAANA,IACxCorB,GAAmBjL,EAAK,CACtBlgB,EAAGsoE,EACHpoE,EAAGmoE,EACH56D,EAAGi4D,EACH75D,EAAG45D,EACHn+C,OAAQ6yC,IAGVj6C,EAAI+H,KAAKqgD,EAAUD,EAAS3C,EAAUD,GAGxCvlD,EAAIgI,OACc,IAAdpE,GACF5D,EAAIkI,QAEP,CAEDlI,EAAI0G,UAwDJ2hD,CAFcZ,EAAU3nE,EAAEA,GAELE,EAAG2xC,GAExB7xC,EtD3VgBwoE,EAAChhE,EAAoC+b,EAAcF,EAAe+U,IAE/E5wB,KADO4wB,EAAM,OAAS,SACJ/U,EAAkB,WAAV7b,GAAsB+b,EAAOF,GAAS,EAAIE,EsDyVnEilD,CAAO1+C,EAAW9pB,EAAI0lE,EAAWqC,EAAcj5B,EAAe9uC,EAAIwkB,EAAQhK,KAAK6I,MAAOkG,EAAK6O,KAvDhF,SAASp4B,EAAGE,EAAG2xC,GAC9BvoB,GAAWpJ,EAAK2xB,EAAWntB,KAAM1kB,EAAGE,EAAK2lE,EAAa,EAAIU,EAAW,CACnE/7C,cAAeqnB,EAAW1J,OAC1Bre,UAAW69C,EAAU79C,UAAU+nB,EAAW/nB,aAuD5CQ,CAASq9C,EAAU3nE,EAAEA,GAAIE,EAAG2xC,GAExB/C,EACFk5B,EAAOhoE,GAAKwkB,EAAQrB,OACf,GAA+B,kBAApB0uB,EAAWntB,KAAmB,CAC9C,MAAM4iD,EAAiBf,EAAUxmD,WACjCioD,EAAO9nE,GAAKqnE,GAA0B11B,EAAYy1B,QAElDU,EAAO9nE,GAAK6f,CACb,IAGHmZ,GAAqB1e,KAAK0F,IAAKqJ,EAAK0+C,cACrC,CAKDvc,SAAAA,GACE,MAAMniC,EAAO/O,KAAKpb,QACZqnD,EAAYl9B,EAAK9E,MACjBgkD,EAAYp8C,GAAOo6B,EAAU7mC,MAC7B8oD,EAAet8C,GAAUq6B,EAAUtjC,SAEzC,IAAKsjC,EAAUjjC,QACb,OAGF,MAAMmkD,EAAYxvC,GAAc5O,EAAK6O,IAAK5d,KAAK+I,KAAM/I,KAAKgK,OACpDtE,EAAM1F,KAAK0F,IACXs2B,EAAWiQ,EAAUjQ,SACrBuxB,EAAeU,EAAUnnE,KAAO,EAChCqnE,EAA6BD,EAAatlD,IAAM2kD,EACtD,IAAI7nE,EAIAqjB,EAAO/I,KAAK+I,KACZ8G,EAAW7P,KAAKgK,MAEpB,GAAIhK,KAAKs0B,eAEPzkB,EAAW3oB,KAAK6B,OAAOiX,KAAK6rD,YAC5BnmE,EAAIsa,KAAK4I,IAAMulD,EACfplD,EAAO9b,GAAe8hB,EAAK/hB,MAAO+b,EAAM/I,KAAK6I,MAAQgH,OAChD,CAEL,MAAMgM,EAAY7b,KAAK4rD,YAAY9oC,QAAO,CAACC,EAAKj8B,IAASI,KAAK6B,IAAIg6B,EAAKj8B,EAAKqlB,SAAS,GACrFzmB,EAAIyoE,EAA6BlhE,GAAe8hB,EAAK/hB,MAAOgT,KAAK4I,IAAK5I,KAAK8I,OAAS+S,EAAY9M,EAAK8d,OAAOlkB,QAAU3I,KAAKgsD,sBAC5H,CAID,MAAMxmE,EAAIyH,GAAe+uC,EAAUjzB,EAAMA,EAAO8G,GAGhDnK,EAAI4J,UAAY69C,EAAU79C,UAAUviB,GAAmBivC,IACvDt2B,EAAI6J,aAAe,SACnB7J,EAAIiK,YAAcs8B,EAAU1rC,MAC5BmF,EAAI2J,UAAY48B,EAAU1rC,MAC1BmF,EAAIN,KAAO6oD,EAAU3iD,OAErBwD,GAAWpJ,EAAKumC,EAAU/hC,KAAM1kB,EAAGE,EAAGuoE,EACvC,CAKDjC,mBAAAA,GACE,MAAM/f,EAAYjsC,KAAKpb,QAAQqlB,MACzBgkD,EAAYp8C,GAAOo6B,EAAU7mC,MAC7B8oD,EAAet8C,GAAUq6B,EAAUtjC,SACzC,OAAOsjC,EAAUjjC,QAAUilD,EAAU1oD,WAAa2oD,EAAa/hD,OAAS,CACzE,CAKDiiD,gBAAAA,CAAiB5oE,EAAGE,GAClB,IAAIrC,EAAGgrE,EAAQC,EAEf,GAAIrjE,EAAWzF,EAAGwa,KAAK+I,KAAM/I,KAAK6I,QAC7B5d,EAAWvF,EAAGsa,KAAK4I,IAAK5I,KAAK8I,QAGhC,IADAwlD,EAAKtuD,KAAKwrD,eACLnoE,EAAI,EAAGA,EAAIirE,EAAG9qE,SAAUH,EAG3B,GAFAgrE,EAASC,EAAGjrE,GAER4H,EAAWzF,EAAG6oE,EAAOtlD,KAAMslD,EAAOtlD,KAAOslD,EAAOrkD,QAC/C/e,EAAWvF,EAAG2oE,EAAOzlD,IAAKylD,EAAOzlD,IAAMylD,EAAOliD,QAEjD,OAAOnM,KAAK2rD,YAAYtoE,GAK9B,OAAO,IACR,CAMDkrE,WAAAA,CAAYjlE,GACV,MAAMylB,EAAO/O,KAAKpb,QAClB,IAoDJ,SAAoBjD,EAAMotB,GACxB,IAAc,cAATptB,GAAiC,aAATA,KAAyBotB,EAAK5I,SAAW4I,EAAKy/C,SACzE,OAAO,EAET,GAAIz/C,EAAK3I,UAAqB,UAATzkB,GAA6B,YAATA,GACvC,OAAO,EAET,OAAO,CACR,CA5DQ8sE,CAAWnlE,EAAE3H,KAAMotB,GACtB,OAIF,MAAM2/C,EAAc1uD,KAAKouD,iBAAiB9kE,EAAE9D,EAAG8D,EAAE5D,GAEjD,GAAe,cAAX4D,EAAE3H,MAAmC,aAAX2H,EAAE3H,KAAqB,CACnD,MAAM0sB,EAAWrO,KAAKyrD,aAChBkD,GApfW9nE,EAofqB6nE,EApfT,QAAf9nE,EAofcynB,IApfe,OAANxnB,GAAcD,EAAE7C,eAAiB8C,EAAE9C,cAAgB6C,EAAE5C,QAAU6C,EAAE7C,OAqflGqqB,IAAasgD,GACf5sE,EAAKgtB,EAAKy/C,QAAS,CAACllE,EAAG+kB,EAAUrO,MAAOA,MAG1CA,KAAKyrD,aAAeiD,EAEhBA,IAAgBC,GAClB5sE,EAAKgtB,EAAK5I,QAAS,CAAC7c,EAAGolE,EAAa1uD,MAAOA,WAEpC0uD,GACT3sE,EAAKgtB,EAAK3I,QAAS,CAAC9c,EAAGolE,EAAa1uD,MAAOA,MA/f9B4uD,IAAChoE,EAAGC,CAigBpB,EAyBH,SAASkmE,GAA0B11B,EAAYy1B,GAE7C,OAAOA,GADaz1B,EAAWntB,KAAOmtB,EAAWntB,KAAK1mB,OAAS,GAAM,EAEtE,CAYD,OAAe,CACblC,GAAI,SAMJutE,SAAUvD,GAEV9gE,KAAAA,CAAM4Y,EAAOqnD,EAAO7lE,GAClB,MAAMsyC,EAAS9zB,EAAM8zB,OAAS,IAAIo0B,GAAO,CAAC5lD,IAAKtC,EAAMsC,IAAK9gB,UAASwe,UACnEy6B,GAAQ1Y,UAAU/hB,EAAO8zB,EAAQtyC,GACjCi5C,GAAQmC,OAAO58B,EAAO8zB,EACvB,EAEDhU,IAAAA,CAAK9f,GACHy6B,GAAQsC,UAAU/8B,EAAOA,EAAM8zB,eACxB9zB,EAAM8zB,MACd,EAKDoS,YAAAA,CAAalmC,EAAOqnD,EAAO7lE,GACzB,MAAMsyC,EAAS9zB,EAAM8zB,OACrB2G,GAAQ1Y,UAAU/hB,EAAO8zB,EAAQtyC,GACjCsyC,EAAOtyC,QAAUA,CAClB,EAIDimD,WAAAA,CAAYznC,GACV,MAAM8zB,EAAS9zB,EAAM8zB,OACrBA,EAAO40B,cACP50B,EAAOg2B,gBACR,EAGD4B,UAAAA,CAAW1rD,EAAOrgB,GACXA,EAAK87D,QACRz7C,EAAM8zB,OAAOq3B,YAAYxrE,EAAKy3B,MAEjC,EAED1S,SAAU,CACRkB,SAAS,EACTgzB,SAAU,MACVhvC,MAAO,SACPsxC,UAAU,EACVl7C,SAAS,EACTod,OAAQ,IAGR4F,OAAAA,CAAQ9c,EAAG+tC,EAAYH,GACrB,MAAMlzC,EAAQqzC,EAAWtzC,aACnBgrE,EAAK73B,EAAO9zB,MACd2rD,EAAGl3B,iBAAiB7zC,IACtB+qE,EAAGtmD,KAAKzkB,GACRqzC,EAAW1J,QAAS,IAEpBohC,EAAGzmD,KAAKtkB,GACRqzC,EAAW1J,QAAS,EAEvB,EAEDxnB,QAAS,KACTqoD,QAAS,KAET3hC,OAAQ,CACNtsB,MAAQmF,GAAQA,EAAItC,MAAMxe,QAAQ2b,MAClC2qD,SAAU,GACVviD,QAAS,GAYTwuB,cAAAA,CAAe/zB,GACb,MAAMyB,EAAWzB,EAAM+H,KAAKtG,UACrBgoB,QAAQ,cAACs+B,EAAa,WAAEv+C,EAAU,UAAE0C,EAAS,MAAE/O,EAAK,gBAAEyuD,EAAe,aAAErP,IAAiBv8C,EAAM8zB,OAAOtyC,QAE5G,OAAOwe,EAAMojB,yBAAyBriC,KAAKgJ,IACzC,MAAMmY,EAAQnY,EAAKu6B,WAAWrK,SAAS8tC,EAAgB,OAAIv4D,GACrD+a,EAAciE,GAAUtM,EAAMqI,aAEpC,MAAO,CACLzD,KAAMrF,EAAS1X,EAAKnJ,OAAOmqC,MAC3B9e,UAAW/J,EAAMX,gBACjByyB,UAAW72B,EACXotB,QAASxgC,EAAKqb,QACds6C,QAASx9C,EAAMub,eACf6sC,SAAUpoD,EAAMwb,WAChBgwB,eAAgBxrC,EAAMyb,iBACtBihC,SAAU18C,EAAM0b,gBAChB1X,WAAYqE,EAAY3D,MAAQ2D,EAAYxB,QAAU,EACtDwD,YAAarK,EAAMV,YACnBgI,WAAYA,GAActH,EAAMsH,WAChCC,SAAUvH,EAAMuH,SAChByC,UAAWA,GAAahK,EAAMgK,UAC9BqwC,aAAcqP,IAAoBrP,GAAgBr6C,EAAMq6C,cAGxD57D,aAAcoJ,EAAKnJ,MACpB,GACAgc,KACJ,GAGHiK,MAAO,CACL1J,MAAQmF,GAAQA,EAAItC,MAAMxe,QAAQ2b,MAClCyI,SAAS,EACTgzB,SAAU,SACV9xB,KAAM,KAIVhG,YAAa,CACXwD,YAAcX,IAAUA,EAAKY,WAAW,MACxCklB,OAAQ,CACNnlB,YAAcX,IAAU,CAAC,iBAAkB,SAAU,QAAQ/C,SAAS+C,MCtsBrE,MAAMkoD,WAAc7pB,GAIzBvlC,WAAAA,CAAYolB,GACVkP,QAEAn0B,KAAKoD,MAAQ6hB,EAAO7hB,MACpBpD,KAAKpb,QAAUqgC,EAAOrgC,QACtBob,KAAK0F,IAAMuf,EAAOvf,IAClB1F,KAAKkvD,cAAWt8D,EAChBoN,KAAK4I,SAAMhW,EACXoN,KAAK8I,YAASlW,EACdoN,KAAK+I,UAAOnW,EACZoN,KAAK6I,WAAQjW,EACboN,KAAKgK,WAAQpX,EACboN,KAAKmM,YAASvZ,EACdoN,KAAKg8B,cAAWppC,EAChBoN,KAAKQ,YAAS5N,EACdoN,KAAKs+B,cAAW1rC,CACjB,CAED2xB,MAAAA,CAAO1U,EAAUgM,GACf,MAAM9M,EAAO/O,KAAKpb,QAKlB,GAHAob,KAAK+I,KAAO,EACZ/I,KAAK4I,IAAM,GAENmG,EAAK/F,QAER,YADAhJ,KAAKgK,MAAQhK,KAAKmM,OAASnM,KAAK6I,MAAQ7I,KAAK8I,OAAS,GAIxD9I,KAAKgK,MAAQhK,KAAK6I,MAAQgH,EAC1B7P,KAAKmM,OAASnM,KAAK8I,OAAS+S,EAE5B,MAAMo0B,EAAYxuD,EAAQstB,EAAK7E,MAAQ6E,EAAK7E,KAAK1mB,OAAS,EAC1Dwc,KAAKkvD,SAAWt9C,GAAU7C,EAAKpG,SAC/B,MAAMwmD,EAAWlf,EAAYp+B,GAAO9C,EAAK3J,MAAMG,WAAavF,KAAKkvD,SAAS/iD,OAEtEnM,KAAKs0B,eACPt0B,KAAKmM,OAASgjD,EAEdnvD,KAAKgK,MAAQmlD,CAEhB,CAED76B,YAAAA,GACE,MAAMha,EAAMta,KAAKpb,QAAQo3C,SACzB,MAAe,QAAR1hB,GAAyB,WAARA,CACzB,CAED80C,SAAAA,CAAUnmD,GACR,MAAM,IAACL,EAAG,KAAEG,EAAI,OAAED,EAAM,MAAED,EAAK,QAAEjkB,GAAWob,KACtChT,EAAQpI,EAAQoI,MACtB,IACI6iB,EAAUshC,EAAQC,EADlBvkC,EAAW,EAmBf,OAhBI7M,KAAKs0B,gBACP6c,EAASlkD,GAAeD,EAAO+b,EAAMF,GACrCuoC,EAASxoC,EAAMK,EACf4G,EAAWhH,EAAQE,IAEM,SAArBnkB,EAAQo3C,UACVmV,EAASpoC,EAAOE,EAChBmoC,EAASnkD,GAAeD,EAAO8b,EAAQF,GACvCiE,GAAiB,GAAN5lB,IAEXkqD,EAAStoC,EAAQI,EACjBmoC,EAASnkD,GAAeD,EAAO4b,EAAKE,GACpC+D,EAAgB,GAAL5lB,GAEb4oB,EAAW/G,EAASF,GAEf,CAACuoC,SAAQC,SAAQvhC,WAAUhD,WACnC,CAEDsV,IAAAA,GACE,MAAMzc,EAAM1F,KAAK0F,IACXqJ,EAAO/O,KAAKpb,QAElB,IAAKmqB,EAAK/F,QACR,OAGF,MAAMqmD,EAAWx9C,GAAO9C,EAAK3J,MAEvB6D,EADaomD,EAAS9pD,WACA,EAAIvF,KAAKkvD,SAAStmD,KACxC,OAACuoC,EAAM,OAAEC,EAAM,SAAEvhC,EAAQ,SAAEhD,GAAY7M,KAAKovD,UAAUnmD,GAE5D6F,GAAWpJ,EAAKqJ,EAAK7E,KAAM,EAAG,EAAGmlD,EAAU,CACzC9uD,MAAOwO,EAAKxO,MACZsP,WACAhD,WACAyC,UAAWviB,GAAmBgiB,EAAK/hB,OACnCuiB,aAAc,SACdH,YAAa,CAAC+hC,EAAQC,IAEzB,EAeH,OAAe,CACb9vD,GAAI,QAMJutE,SAAUI,GAEVzkE,KAAAA,CAAM4Y,EAAOqnD,EAAO7lE,IArBtB,SAAqBwe,EAAO6oC,GAC1B,MAAMhiC,EAAQ,IAAIglD,GAAM,CACtBvpD,IAAKtC,EAAMsC,IACX9gB,QAASqnD,EACT7oC,UAGFy6B,GAAQ1Y,UAAU/hB,EAAO6G,EAAOgiC,GAChCpO,GAAQmC,OAAO58B,EAAO6G,GACtB7G,EAAMksD,WAAarlD,CACpB,CAYGslD,CAAYnsD,EAAOxe,EACpB,EAEDs+B,IAAAA,CAAK9f,GACH,MAAMksD,EAAalsD,EAAMksD,WACzBzxB,GAAQsC,UAAU/8B,EAAOksD,UAClBlsD,EAAMksD,UACd,EAEDhmB,YAAAA,CAAalmC,EAAOqnD,EAAO7lE,GACzB,MAAMqlB,EAAQ7G,EAAMksD,WACpBzxB,GAAQ1Y,UAAU/hB,EAAO6G,EAAOrlB,GAChCqlB,EAAMrlB,QAAUA,CACjB,EAEDkjB,SAAU,CACR9a,MAAO,SACPgc,SAAS,EACT5D,KAAM,CACJ5E,OAAQ,QAEV89B,UAAU,EACV31B,QAAS,GACTqzB,SAAU,MACV9xB,KAAM,GACN1J,OAAQ,KAGV2xC,cAAe,CACb5xC,MAAO,SAGT2D,YAAa,CACXwD,aAAa,EACbE,YAAY,IChKJ,IAAI4nD,QCahB,MAAMC,GAAc,CAIlBC,OAAAA,CAAQrjE,GACN,IAAKA,EAAM7I,OACT,OAAO,EAGT,IAAIH,EAAGC,EACHkC,EAAI,EACJE,EAAI,EACJ6H,EAAQ,EAEZ,IAAKlK,EAAI,EAAGC,EAAM+I,EAAM7I,OAAQH,EAAIC,IAAOD,EAAG,CAC5C,MAAM85B,EAAK9wB,EAAMhJ,GAAGy2B,QACpB,GAAIqD,GAAMA,EAAGmoB,WAAY,CACvB,MAAMhrB,EAAM6C,EAAGkoB,kBACf7/C,GAAK80B,EAAI90B,EACTE,GAAK40B,EAAI50B,IACP6H,CACH,CACF,CAED,MAAO,CACL/H,EAAGA,EAAI+H,EACP7H,EAAGA,EAAI6H,EAEV,EAKDgwC,OAAAA,CAAQlxC,EAAOsjE,GACb,IAAKtjE,EAAM7I,OACT,OAAO,EAGT,IAGIH,EAAGC,EAAKssE,EAHRpqE,EAAImqE,EAAcnqE,EAClBE,EAAIiqE,EAAcjqE,EAClBo3C,EAAc36C,OAAOmF,kBAGzB,IAAKjE,EAAI,EAAGC,EAAM+I,EAAM7I,OAAQH,EAAIC,IAAOD,EAAG,CAC5C,MAAM85B,EAAK9wB,EAAMhJ,GAAGy2B,QACpB,GAAIqD,GAAMA,EAAGmoB,WAAY,CACvB,MACMr0C,EAAI/G,EAAsBylE,EADjBxyC,EAAG4f,kBAGd9rC,EAAI6rC,IACNA,EAAc7rC,EACd2+D,EAAiBzyC,EAEpB,CACF,CAED,GAAIyyC,EAAgB,CAClB,MAAMC,EAAKD,EAAevqB,kBAC1B7/C,EAAIqqE,EAAGrqE,EACPE,EAAImqE,EAAGnqE,CACR,CAED,MAAO,CACLF,IACAE,IAEH,GAIH,SAASoqE,GAAalkC,EAAMmkC,GAU1B,OATIA,IACEtuE,EAAQsuE,GAEVruE,MAAMG,UAAUqE,KAAKjD,MAAM2oC,EAAMmkC,GAEjCnkC,EAAK1lC,KAAK6pE,IAIPnkC,CACR,CAQD,SAASokC,GAAc1pE,GACrB,OAAoB,kBAARA,GAAoBA,aAAe2pE,SAAW3pE,EAAI5B,QAAQ,OAAS,EACtE4B,EAAIP,MAAM,MAEZO,CACR,CASD,SAAS4pE,GAAkB9sD,EAAOrc,GAChC,MAAM,QAAC+yB,EAAO,aAAE/1B,EAAY,MAAEC,GAAS+C,EACjC2gC,EAAatkB,EAAM8nB,eAAennC,GAAc2jC,YAChD,MAACyG,EAAK,MAAE3sC,GAASkmC,EAAWwG,iBAAiBlqC,GAEnD,MAAO,CACLof,QACA+qB,QACAxG,OAAQD,EAAWwF,UAAUlpC,GAC7B6qC,IAAKzrB,EAAM+H,KAAKtG,SAAS9gB,GAAconB,KAAKnnB,GAC5CmsE,eAAgB3uE,EAChB2oC,QAASzC,EAAW0C,aACpBwE,UAAW5qC,EACXD,eACA+1B,UAEH,CAKD,SAASs2C,GAAeC,EAASzrE,GAC/B,MAAM8gB,EAAM2qD,EAAQjtD,MAAMsC,KACpB,KAAC4qD,EAAI,OAAEC,EAAM,MAAEtmD,GAASomD,GACxB,SAACnF,EAAQ,UAAED,GAAarmE,EACxB4rE,EAAW3+C,GAAOjtB,EAAQ4rE,UAC1BvC,EAAYp8C,GAAOjtB,EAAQqpE,WAC3BwC,EAAa5+C,GAAOjtB,EAAQ6rE,YAC5BC,EAAiBzmD,EAAMzmB,OACvBmtE,EAAkBJ,EAAO/sE,OACzBotE,EAAoBN,EAAK9sE,OAEzBmlB,EAAUiJ,GAAUhtB,EAAQ+jB,SAClC,IAAIwD,EAASxD,EAAQwD,OACjBnC,EAAQ,EAGR6mD,EAAqBP,EAAKxtC,QAAO,CAACv1B,EAAOujE,IAAavjE,EAAQujE,EAASC,OAAOvtE,OAASstE,EAAS9hD,MAAMxrB,OAASstE,EAASE,MAAMxtE,QAAQ,GAQ1I,GAPAqtE,GAAsBR,EAAQY,WAAWztE,OAAS6sE,EAAQa,UAAU1tE,OAEhEktE,IACFvkD,GAAUukD,EAAiBzC,EAAU1oD,YACnCmrD,EAAiB,GAAK9rE,EAAQusE,aAC/BvsE,EAAQwsE,mBAEPP,EAAoB,CAGtB1kD,GAAUykD,GADahsE,EAAQysE,cAAgBnqE,KAAK6B,IAAIkiE,EAAWuF,EAASjrD,YAAcirD,EAASjrD,aAEjGsrD,EAAqBD,GAAqBJ,EAASjrD,YACnDsrD,EAAqB,GAAKjsE,EAAQ0sE,WACrC,CACGX,IACFxkD,GAAUvnB,EAAQ2sE,gBACjBZ,EAAkBF,EAAWlrD,YAC5BorD,EAAkB,GAAK/rE,EAAQ4sE,eAInC,IAAIC,EAAe,EACnB,MAAMC,EAAe,SAASviD,GAC5BnF,EAAQ9iB,KAAK6B,IAAIihB,EAAOtE,EAAI8F,YAAY2D,GAAMnF,MAAQynD,IAgCxD,OA7BA/rD,EAAIsG,OAEJtG,EAAIN,KAAO6oD,EAAU3iD,OACrBpoB,EAAKmtE,EAAQpmD,MAAOynD,GAGpBhsD,EAAIN,KAAOorD,EAASllD,OACpBpoB,EAAKmtE,EAAQY,WAAWp/B,OAAOw+B,EAAQa,WAAYQ,GAGnDD,EAAe7sE,EAAQysE,cAAiBnG,EAAW,EAAItmE,EAAQg6C,WAAc,EAC7E17C,EAAKotE,GAAOQ,IACV5tE,EAAK4tE,EAASC,OAAQW,GACtBxuE,EAAK4tE,EAAS9hD,MAAO0iD,GACrBxuE,EAAK4tE,EAASE,MAAOU,EAAa,IAIpCD,EAAe,EAGf/rD,EAAIN,KAAOqrD,EAAWnlD,OACtBpoB,EAAKmtE,EAAQE,OAAQmB,GAErBhsD,EAAI0G,UAGJpC,GAASrB,EAAQqB,MAEV,CAACA,QAAOmC,SAChB,CAyBD,SAASwlD,GAAgBvuD,EAAOxe,EAASkC,EAAM8qE,GAC7C,MAAM,EAACpsE,EAAC,MAAEwkB,GAASljB,GACZkjB,MAAO6nD,EAAYpjC,WAAW,KAAC1lB,EAAI,MAAEF,IAAUzF,EACtD,IAAI0uD,EAAS,SAcb,MAZe,WAAXF,EACFE,EAAStsE,IAAMujB,EAAOF,GAAS,EAAI,OAAS,QACnCrjB,GAAKwkB,EAAQ,EACtB8nD,EAAS,OACAtsE,GAAKqsE,EAAa7nD,EAAQ,IACnC8nD,EAAS,SAtBb,SAA6BA,EAAQ1uD,EAAOxe,EAASkC,GACnD,MAAM,EAACtB,EAAC,MAAEwkB,GAASljB,EACbirE,EAAQntE,EAAQotE,UAAYptE,EAAQqtE,aAC1C,MAAe,SAAXH,GAAqBtsE,EAAIwkB,EAAQ+nD,EAAQ3uD,EAAM4G,OAIpC,UAAX8nD,GAAsBtsE,EAAIwkB,EAAQ+nD,EAAQ,QAA9C,CAGD,CAeKG,CAAoBJ,EAAQ1uD,EAAOxe,EAASkC,KAC9CgrE,EAAS,UAGJA,CACR,CAKD,SAASK,GAAmB/uD,EAAOxe,EAASkC,GAC1C,MAAM8qE,EAAS9qE,EAAK8qE,QAAUhtE,EAAQgtE,QA/CxC,SAAyBxuD,EAAOtc,GAC9B,MAAM,EAACpB,EAAC,OAAEymB,GAAUrlB,EAEpB,OAAIpB,EAAIymB,EAAS,EACR,MACEzmB,EAAK0d,EAAM+I,OAASA,EAAS,EAC/B,SAEF,QACR,CAsCiDimD,CAAgBhvD,EAAOtc,GAEvE,MAAO,CACLgrE,OAAQhrE,EAAKgrE,QAAUltE,EAAQktE,QAAUH,GAAgBvuD,EAAOxe,EAASkC,EAAM8qE,GAC/EA,SAEH,CA4BD,SAASS,GAAmBztE,EAASkC,EAAMwrE,EAAWlvD,GACpD,MAAM,UAAC4uD,EAAS,aAAEC,EAAY,aAAExlD,GAAgB7nB,GAC1C,OAACktE,EAAM,OAAEF,GAAUU,EACnBC,EAAiBP,EAAYC,GAC7B,QAACrhD,EAAO,SAAEG,EAAQ,WAAEF,EAAU,YAAEC,GAAea,GAAclF,GAEnE,IAAIjnB,EAhCN,SAAgBsB,EAAMgrE,GACpB,IAAI,EAACtsE,EAAC,MAAEwkB,GAASljB,EAMjB,MALe,UAAXgrE,EACFtsE,GAAKwkB,EACe,WAAX8nD,IACTtsE,GAAMwkB,EAAQ,GAETxkB,CACR,CAwBSgtE,CAAO1rE,EAAMgrE,GACrB,MAAMpsE,EAvBR,SAAgBoB,EAAM8qE,EAAQW,GAE5B,IAAI,EAAC7sE,EAAC,OAAEymB,GAAUrlB,EAQlB,MAPe,QAAX8qE,EACFlsE,GAAK6sE,EAEL7sE,GADoB,WAAXksE,EACJzlD,EAASomD,EAERpmD,EAAS,EAEVzmB,CACR,CAYW+sE,CAAO3rE,EAAM8qE,EAAQW,GAc/B,MAZe,WAAXX,EACa,SAAXE,EACFtsE,GAAK+sE,EACe,UAAXT,IACTtsE,GAAK+sE,GAEa,SAAXT,EACTtsE,GAAK0B,KAAK6B,IAAI6nB,EAASC,GAAcmhD,EACjB,UAAXF,IACTtsE,GAAK0B,KAAK6B,IAAIgoB,EAAUD,GAAekhD,GAGlC,CACLxsE,EAAGwF,EAAYxF,EAAG,EAAG4d,EAAM4G,MAAQljB,EAAKkjB,OACxCtkB,EAAGsF,EAAYtF,EAAG,EAAG0d,EAAM+I,OAASrlB,EAAKqlB,QAE5C,CAED,SAASumD,GAAYrC,EAASrjE,EAAOpI,GACnC,MAAM+jB,EAAUiJ,GAAUhtB,EAAQ+jB,SAElC,MAAiB,WAAV3b,EACHqjE,EAAQ7qE,EAAI6qE,EAAQrmD,MAAQ,EAClB,UAAVhd,EACEqjE,EAAQ7qE,EAAI6qE,EAAQrmD,MAAQrB,EAAQE,MACpCwnD,EAAQ7qE,EAAImjB,EAAQI,IAC3B,CAKD,SAAS4pD,GAAwB9vE,GAC/B,OAAOitE,GAAa,GAAIE,GAAcntE,GACvC,CAUD,SAAS+vE,GAAkBnxC,EAAW1c,GACpC,MAAM8B,EAAW9B,GAAWA,EAAQolB,SAAWplB,EAAQolB,QAAQkmC,SAAWtrD,EAAQolB,QAAQkmC,QAAQ5uC,UAClG,OAAO5a,EAAW4a,EAAU5a,SAASA,GAAY4a,CAClD,CAED,MAAMoxC,GAAmB,CAEvBC,YAAa1xE,EACb6oB,KAAAA,CAAM8oD,GACJ,GAAIA,EAAavvE,OAAS,EAAG,CAC3B,MAAMuD,EAAOgsE,EAAa,GACpBlmC,EAAS9lC,EAAKqc,MAAM+H,KAAK0hB,OACzBmmC,EAAanmC,EAASA,EAAOrpC,OAAS,EAE5C,GAAIwc,MAAQA,KAAKpb,SAAiC,YAAtBob,KAAKpb,QAAQmhB,KACvC,OAAOhf,EAAKojC,QAAQgE,OAAS,GACxB,GAAIpnC,EAAKonC,MACd,OAAOpnC,EAAKonC,MACP,GAAI6kC,EAAa,GAAKjsE,EAAK6nC,UAAYokC,EAC5C,OAAOnmC,EAAO9lC,EAAK6nC,UAEtB,CAED,MAAO,EACR,EACDqkC,WAAY7xE,EAGZ6vE,WAAY7vE,EAGZ8xE,YAAa9xE,EACb+sC,KAAAA,CAAMglC,GACJ,GAAInzD,MAAQA,KAAKpb,SAAiC,YAAtBob,KAAKpb,QAAQmhB,KACvC,OAAOotD,EAAYhlC,MAAQ,KAAOglC,EAAYhD,gBAAkBgD,EAAYhD,eAG9E,IAAIhiC,EAAQglC,EAAYhpC,QAAQgE,OAAS,GAErCA,IACFA,GAAS,MAEX,MAAM3sC,EAAQ2xE,EAAYhD,eAI1B,OAHK5uE,EAAcC,KACjB2sC,GAAS3sC,GAEJ2sC,CACR,EACDilC,UAAAA,CAAWD,GACT,MACMvuE,EADOuuE,EAAY/vD,MAAM8nB,eAAeioC,EAAYpvE,cACrC2jC,WAAWrK,SAAS81C,EAAYvkC,WACrD,MAAO,CACLhqB,YAAahgB,EAAQggB,YACrBD,gBAAiB/f,EAAQ+f,gBACzBgJ,YAAa/oB,EAAQ+oB,YACrBmT,WAAYl8B,EAAQk8B,WACpBC,iBAAkBn8B,EAAQm8B,iBAC1B4+B,aAAc,EAEjB,EACD0T,cAAAA,GACE,OAAOrzD,KAAKpb,QAAQ0uE,SACrB,EACDC,eAAAA,CAAgBJ,GACd,MACMvuE,EADOuuE,EAAY/vD,MAAM8nB,eAAeioC,EAAYpvE,cACrC2jC,WAAWrK,SAAS81C,EAAYvkC,WACrD,MAAO,CACLhiB,WAAYhoB,EAAQgoB,WACpBC,SAAUjoB,EAAQioB,SAErB,EACD2mD,WAAYpyE,EAGZ8vE,UAAW9vE,EAGXqyE,aAAcryE,EACdmvE,OAAQnvE,EACRsyE,YAAatyE,GAYf,SAASuyE,GAA2BlyC,EAAW1a,EAAMrB,EAAKiuC,GACxD,MAAMt5B,EAASoH,EAAU1a,GAAMhlB,KAAK2jB,EAAKiuC,GAEzC,MAAsB,qBAAXt5B,EACFw4C,GAAiB9rD,GAAMhlB,KAAK2jB,EAAKiuC,GAGnCt5B,CACR,CAEM,MAAMu5C,WAAgBxuB,GAK3Bvc,mBAAqB,KAAA4mC,GAAA,GAErB5vD,WAAAA,CAAYolB,GACVkP,QAEAn0B,KAAK6zD,QAAU,EACf7zD,KAAKoiB,QAAU,GACfpiB,KAAK8zD,oBAAiBlhE,EACtBoN,KAAK+zD,WAAQnhE,EACboN,KAAKg0D,uBAAoBphE,EACzBoN,KAAKi0D,cAAgB,GACrBj0D,KAAK2lB,iBAAc/yB,EACnBoN,KAAKypB,cAAW72B,EAChBoN,KAAKoD,MAAQ6hB,EAAO7hB,MACpBpD,KAAKpb,QAAUqgC,EAAOrgC,QACtBob,KAAKk0D,gBAAathE,EAClBoN,KAAKiK,WAAQrX,EACboN,KAAKixD,gBAAar+D,EAClBoN,KAAKswD,UAAO19D,EACZoN,KAAKkxD,eAAYt+D,EACjBoN,KAAKuwD,YAAS39D,EACdoN,KAAK8xD,YAASl/D,EACdoN,KAAK4xD,YAASh/D,EACdoN,KAAKxa,OAAIoN,EACToN,KAAKta,OAAIkN,EACToN,KAAKmM,YAASvZ,EACdoN,KAAKgK,WAAQpX,EACboN,KAAKm0D,YAASvhE,EACdoN,KAAKo0D,YAASxhE,EAGdoN,KAAKq0D,iBAAczhE,EACnBoN,KAAKs0D,sBAAmB1hE,EACxBoN,KAAKu0D,qBAAkB3hE,CACxB,CAEDi3B,UAAAA,CAAWjlC,GACTob,KAAKpb,QAAUA,EACfob,KAAKg0D,uBAAoBphE,EACzBoN,KAAKypB,cAAW72B,CACjB,CAKD08B,kBAAAA,GACE,MAAM5G,EAAS1oB,KAAKg0D,kBAEpB,GAAItrC,EACF,OAAOA,EAGT,MAAMtlB,EAAQpD,KAAKoD,MACbxe,EAAUob,KAAKpb,QAAQiwB,WAAW7U,KAAK+L,cACvCgD,EAAOnqB,EAAQshD,SAAW9iC,EAAMxe,QAAQ8f,WAAa9f,EAAQ2jB,WAC7DA,EAAa,IAAIyc,GAAWhlB,KAAKoD,MAAO2L,GAK9C,OAJIA,EAAKkE,aACPjT,KAAKg0D,kBAAoBpyE,OAAOytC,OAAO9mB,IAGlCA,CACR,CAKDwD,UAAAA,GACE,OAAO/L,KAAKypB,WACZzpB,KAAKypB,UAtLqB1T,EAsLW/V,KAAKoD,MAAM2I,aAtLdskD,EAsL4BrwD,KAtLnB+yD,EAsLyB/yD,KAAKi0D,cArLpE3hD,GAAcyD,EAAQ,CAC3Bs6C,UACA0C,eACApxE,KAAM,cAJV,IAA8Bo0B,EAAQs6C,EAAS0C,CAuL5C,CAEDyB,QAAAA,CAASzvD,EAASngB,GAChB,MAAM,UAAC68B,GAAa78B,EAEdkuE,EAAca,GAA2BlyC,EAAW,cAAezhB,KAAM+E,GACzEkF,EAAQ0pD,GAA2BlyC,EAAW,QAASzhB,KAAM+E,GAC7DkuD,EAAaU,GAA2BlyC,EAAW,aAAczhB,KAAM+E,GAE7E,IAAIiK,EAAQ,GAKZ,OAJAA,EAAQ8gD,GAAa9gD,EAAOghD,GAAc8C,IAC1C9jD,EAAQ8gD,GAAa9gD,EAAOghD,GAAc/lD,IAC1C+E,EAAQ8gD,GAAa9gD,EAAOghD,GAAciD,IAEnCjkD,CACR,CAEDylD,aAAAA,CAAc1B,EAAcnuE,GAC1B,OAAO+tE,GACLgB,GAA2B/uE,EAAQ68B,UAAW,aAAczhB,KAAM+yD,GAErE,CAED2B,OAAAA,CAAQ3B,EAAcnuE,GACpB,MAAM,UAAC68B,GAAa78B,EACd+vE,EAAY,GAgBlB,OAdAzxE,EAAK6vE,GAAehuD,IAClB,MAAM+rD,EAAW,CACfC,OAAQ,GACR/hD,MAAO,GACPgiD,MAAO,IAEH4D,EAAShC,GAAkBnxC,EAAW1c,GAC5C+qD,GAAagB,EAASC,OAAQf,GAAc2D,GAA2BiB,EAAQ,cAAe50D,KAAM+E,KACpG+qD,GAAagB,EAAS9hD,MAAO2kD,GAA2BiB,EAAQ,QAAS50D,KAAM+E,IAC/E+qD,GAAagB,EAASE,MAAOhB,GAAc2D,GAA2BiB,EAAQ,aAAc50D,KAAM+E,KAElG4vD,EAAUzuE,KAAK4qE,EAAS,IAGnB6D,CACR,CAEDE,YAAAA,CAAa9B,EAAcnuE,GACzB,OAAO+tE,GACLgB,GAA2B/uE,EAAQ68B,UAAW,YAAazhB,KAAM+yD,GAEpE,CAGD+B,SAAAA,CAAU/B,EAAcnuE,GACtB,MAAM,UAAC68B,GAAa78B,EAEd6uE,EAAeE,GAA2BlyC,EAAW,eAAgBzhB,KAAM+yD,GAC3ExC,EAASoD,GAA2BlyC,EAAW,SAAUzhB,KAAM+yD,GAC/DW,EAAcC,GAA2BlyC,EAAW,cAAezhB,KAAM+yD,GAE/E,IAAI/jD,EAAQ,GAKZ,OAJAA,EAAQ8gD,GAAa9gD,EAAOghD,GAAcyD,IAC1CzkD,EAAQ8gD,GAAa9gD,EAAOghD,GAAcO,IAC1CvhD,EAAQ8gD,GAAa9gD,EAAOghD,GAAc0D,IAEnC1kD,CACR,CAKD+lD,YAAAA,CAAanwE,GACX,MAAMwjB,EAASpI,KAAKoiB,QACdjX,EAAOnL,KAAKoD,MAAM+H,KAClBkpD,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACxB,IACIlxE,EAAGC,EADHyvE,EAAe,GAGnB,IAAK1vE,EAAI,EAAGC,EAAM8kB,EAAO5kB,OAAQH,EAAIC,IAAOD,EAC1C0vE,EAAa7sE,KAAKgqE,GAAkBlwD,KAAKoD,MAAOgF,EAAO/kB,KAyBzD,OArBIuB,EAAQ0wB,SACVy9C,EAAeA,EAAaz9C,QAAO,CAACwE,EAAS91B,EAAO4E,IAAUhE,EAAQ0wB,OAAOwE,EAAS91B,EAAO4E,EAAOuiB,MAIlGvmB,EAAQowE,WACVjC,EAAeA,EAAajhC,MAAK,CAAClrC,EAAGC,IAAMjC,EAAQowE,SAASpuE,EAAGC,EAAGskB,MAIpEjoB,EAAK6vE,GAAehuD,IAClB,MAAM6vD,EAAShC,GAAkBhuE,EAAQ68B,UAAW1c,GACpDsvD,EAAYnuE,KAAKytE,GAA2BiB,EAAQ,aAAc50D,KAAM+E,IACxEuvD,EAAiBpuE,KAAKytE,GAA2BiB,EAAQ,kBAAmB50D,KAAM+E,IAClFwvD,EAAgBruE,KAAKytE,GAA2BiB,EAAQ,iBAAkB50D,KAAM+E,GAAS,IAG3F/E,KAAKq0D,YAAcA,EACnBr0D,KAAKs0D,iBAAmBA,EACxBt0D,KAAKu0D,gBAAkBA,EACvBv0D,KAAKk0D,WAAanB,EACXA,CACR,CAEDxuC,MAAAA,CAAO91B,EAASowD,GACd,MAAMj6D,EAAUob,KAAKpb,QAAQiwB,WAAW7U,KAAK+L,cACvC3D,EAASpI,KAAKoiB,QACpB,IAAIja,EACA4qD,EAAe,GAEnB,GAAK3qD,EAAO5kB,OAML,CACL,MAAMw4C,EAAWyzB,GAAY7qE,EAAQo3C,UAAUj6C,KAAKie,KAAMoI,EAAQpI,KAAK8zD,gBACvEf,EAAe/yD,KAAK+0D,aAAanwE,GAEjCob,KAAKiK,MAAQjK,KAAKw0D,SAASzB,EAAcnuE,GACzCob,KAAKixD,WAAajxD,KAAKy0D,cAAc1B,EAAcnuE,GACnDob,KAAKswD,KAAOtwD,KAAK00D,QAAQ3B,EAAcnuE,GACvCob,KAAKkxD,UAAYlxD,KAAK60D,aAAa9B,EAAcnuE,GACjDob,KAAKuwD,OAASvwD,KAAK80D,UAAU/B,EAAcnuE,GAE3C,MAAMkC,EAAOkZ,KAAK+zD,MAAQ3D,GAAepwD,KAAMpb,GACzCqwE,EAAkBrzE,OAAO8M,OAAO,CAAC,EAAGstC,EAAUl1C,GAC9CwrE,EAAYH,GAAmBnyD,KAAKoD,MAAOxe,EAASqwE,GACpDC,EAAkB7C,GAAmBztE,EAASqwE,EAAiB3C,EAAWtyD,KAAKoD,OAErFpD,KAAK8xD,OAASQ,EAAUR,OACxB9xD,KAAK4xD,OAASU,EAAUV,OAExBzpD,EAAa,CACX0rD,QAAS,EACTruE,EAAG0vE,EAAgB1vE,EACnBE,EAAGwvE,EAAgBxvE,EACnBskB,MAAOljB,EAAKkjB,MACZmC,OAAQrlB,EAAKqlB,OACbgoD,OAAQn4B,EAASx2C,EACjB4uE,OAAQp4B,EAASt2C,EAEpB,MAhCsB,IAAjBsa,KAAK6zD,UACP1rD,EAAa,CACX0rD,QAAS,IAgCf7zD,KAAKi0D,cAAgBlB,EACrB/yD,KAAKypB,cAAW72B,EAEZuV,GACFnI,KAAKsvB,qBAAqB/K,OAAOvkB,KAAMmI,GAGrC1Z,GAAW7J,EAAQuwE,UACrBvwE,EAAQuwE,SAASpzE,KAAKie,KAAM,CAACoD,MAAOpD,KAAKoD,MAAOitD,QAASrwD,KAAM6+C,UAElE,CAEDuW,SAAAA,CAAUC,EAAc3vD,EAAK5e,EAAMlC,GACjC,MAAM0wE,EAAgBt1D,KAAKu1D,iBAAiBF,EAAcvuE,EAAMlC,GAEhE8gB,EAAI6H,OAAO+nD,EAAcpmB,GAAIomB,EAAcnmB,IAC3CzpC,EAAI6H,OAAO+nD,EAAclmB,GAAIkmB,EAAcjmB,IAC3C3pC,EAAI6H,OAAO+nD,EAAcE,GAAIF,EAAcG,GAC5C,CAEDF,gBAAAA,CAAiBF,EAAcvuE,EAAMlC,GACnC,MAAM,OAACktE,EAAM,OAAEF,GAAU5xD,MACnB,UAACgyD,EAAS,aAAEvlD,GAAgB7nB,GAC5B,QAACgsB,EAAO,SAAEG,EAAQ,WAAEF,EAAU,YAAEC,GAAea,GAAclF,IAC5DjnB,EAAGkwE,EAAKhwE,EAAGiwE,GAAON,GACnB,MAACrrD,EAAK,OAAEmC,GAAUrlB,EACxB,IAAIooD,EAAIE,EAAIomB,EAAIrmB,EAAIE,EAAIomB,EAgDxB,MA9Ce,WAAX7D,GACFviB,EAAKsmB,EAAOxpD,EAAS,EAEN,SAAX2lD,GACF5iB,EAAKwmB,EACLtmB,EAAKF,EAAK8iB,EAGV7iB,EAAKE,EAAK2iB,EACVyD,EAAKpmB,EAAK2iB,IAEV9iB,EAAKwmB,EAAM1rD,EACXolC,EAAKF,EAAK8iB,EAGV7iB,EAAKE,EAAK2iB,EACVyD,EAAKpmB,EAAK2iB,GAGZwD,EAAKtmB,IAGHE,EADa,SAAX0iB,EACG4D,EAAMxuE,KAAK6B,IAAI6nB,EAASC,GAAemhD,EACxB,UAAXF,EACJ4D,EAAM1rD,EAAQ9iB,KAAK6B,IAAIgoB,EAAUD,GAAekhD,EAEhDhyD,KAAKm0D,OAGG,QAAXvC,GACFziB,EAAKwmB,EACLtmB,EAAKF,EAAK6iB,EAGV9iB,EAAKE,EAAK4iB,EACVwD,EAAKpmB,EAAK4iB,IAEV7iB,EAAKwmB,EAAMxpD,EACXkjC,EAAKF,EAAK6iB,EAGV9iB,EAAKE,EAAK4iB,EACVwD,EAAKpmB,EAAK4iB,GAEZyD,EAAKtmB,GAEA,CAACD,KAAIE,KAAIomB,KAAIrmB,KAAIE,KAAIomB,KAC7B,CAEDvkB,SAAAA,CAAU14B,EAAI9S,EAAK9gB,GACjB,MAAMqlB,EAAQjK,KAAKiK,MACbzmB,EAASymB,EAAMzmB,OACrB,IAAIyqE,EAAWkD,EAAc9tE,EAE7B,GAAIG,EAAQ,CACV,MAAM2pE,EAAYxvC,GAAc/4B,EAAQg5B,IAAK5d,KAAKxa,EAAGwa,KAAKgK,OAa1D,IAXAwO,EAAGhzB,EAAIktE,GAAY1yD,KAAMpb,EAAQ+iD,WAAY/iD,GAE7C8gB,EAAI4J,UAAY69C,EAAU79C,UAAU1qB,EAAQ+iD,YAC5CjiC,EAAI6J,aAAe,SAEnB0+C,EAAYp8C,GAAOjtB,EAAQqpE,WAC3BkD,EAAevsE,EAAQusE,aAEvBzrD,EAAI2J,UAAYzqB,EAAQgxE,WACxBlwD,EAAIN,KAAO6oD,EAAU3iD,OAEhBjoB,EAAI,EAAGA,EAAIG,IAAUH,EACxBqiB,EAAIoK,SAAS7F,EAAM5mB,GAAI8pE,EAAU3nE,EAAEgzB,EAAGhzB,GAAIgzB,EAAG9yB,EAAIuoE,EAAU1oD,WAAa,GACxEiT,EAAG9yB,GAAKuoE,EAAU1oD,WAAa4rD,EAE3B9tE,EAAI,IAAMG,IACZg1B,EAAG9yB,GAAKd,EAAQwsE,kBAAoBD,EAGzC,CACF,CAKD0E,aAAAA,CAAcnwD,EAAK8S,EAAIn1B,EAAG8pE,EAAWvoE,GACnC,MAAMyvE,EAAcr0D,KAAKq0D,YAAYhxE,GAC/BkwE,EAAkBvzD,KAAKs0D,iBAAiBjxE,IACxC,UAAC4nE,EAAS,SAAEC,EAAQ,WAAEtsB,GAAch6C,EACpC4rE,EAAW3+C,GAAOjtB,EAAQ4rE,UAC1BsF,EAASpD,GAAY1yD,KAAM,OAAQpb,GACnCmxE,EAAY5I,EAAU3nE,EAAEswE,GACxBE,EAAU/K,EAAYuF,EAASjrD,YAAcirD,EAASjrD,WAAa0lD,GAAa,EAAI,EACpFgL,EAASz9C,EAAG9yB,EAAIswE,EAEtB,GAAIpxE,EAAQumE,cAAe,CACzB,MAAMwC,EAAc,CAClB7gD,OAAQ5lB,KAAK4B,IAAIoiE,EAAUD,GAAa,EACxCr+C,WAAY2mD,EAAgB3mD,WAC5BC,SAAU0mD,EAAgB1mD,SAC1Bc,YAAa,GAITisB,EAAUuzB,EAAUnvC,WAAW+3C,EAAW7K,GAAYA,EAAW,EACjErxB,EAAUo8B,EAAShL,EAAY,EAGrCvlD,EAAIiK,YAAc/qB,EAAQsxE,mBAC1BxwD,EAAI2J,UAAYzqB,EAAQsxE,mBACxB7pD,GAAU3G,EAAKioD,EAAa/zB,EAASC,GAGrCn0B,EAAIiK,YAAc0kD,EAAYzvD,YAC9Bc,EAAI2J,UAAYglD,EAAY1vD,gBAC5B0H,GAAU3G,EAAKioD,EAAa/zB,EAASC,OAChC,CAELn0B,EAAI4D,UAAYrnB,EAASoyE,EAAY1mD,aAAezmB,KAAK6B,OAAOnH,OAAOohB,OAAOqxD,EAAY1mD,cAAiB0mD,EAAY1mD,aAAe,EACtIjI,EAAIiK,YAAc0kD,EAAYzvD,YAC9Bc,EAAImrC,YAAYwjB,EAAYvzC,YAAc,IAC1Cpb,EAAIorC,eAAiBujB,EAAYtzC,kBAAoB,EAGrD,MAAMo1C,EAAShJ,EAAUnvC,WAAW+3C,EAAW7K,EAAWtsB,GACpDw3B,EAASjJ,EAAUnvC,WAAWmvC,EAAUpvC,MAAMg4C,EAAW,GAAI7K,EAAWtsB,EAAa,GACrF+gB,EAAehuC,GAAc0iD,EAAY1U,cAE3C/9D,OAAOohB,OAAO28C,GAAcvK,MAAK7vD,GAAW,IAANA,KACxCmgB,EAAIwH,YACJxH,EAAI2J,UAAYzqB,EAAQsxE,mBACxBvlD,GAAmBjL,EAAK,CACtBlgB,EAAG2wE,EACHzwE,EAAGuwE,EACHhjE,EAAGi4D,EACH75D,EAAG45D,EACHn+C,OAAQ6yC,IAEVj6C,EAAIgI,OACJhI,EAAIkI,SAGJlI,EAAI2J,UAAYglD,EAAY1vD,gBAC5Be,EAAIwH,YACJyD,GAAmBjL,EAAK,CACtBlgB,EAAG4wE,EACH1wE,EAAGuwE,EAAS,EACZhjE,EAAGi4D,EAAW,EACd75D,EAAG45D,EAAY,EACfn+C,OAAQ6yC,IAEVj6C,EAAIgI,SAGJhI,EAAI2J,UAAYzqB,EAAQsxE,mBACxBxwD,EAAIgL,SAASylD,EAAQF,EAAQ/K,EAAUD,GACvCvlD,EAAI2wD,WAAWF,EAAQF,EAAQ/K,EAAUD,GAEzCvlD,EAAI2J,UAAYglD,EAAY1vD,gBAC5Be,EAAIgL,SAAS0lD,EAAQH,EAAS,EAAG/K,EAAW,EAAGD,EAAY,GAE9D,CAGDvlD,EAAI2J,UAAYrP,KAAKu0D,gBAAgBlxE,EACtC,CAEDizE,QAAAA,CAAS99C,EAAI9S,EAAK9gB,GAChB,MAAM,KAAC0rE,GAAQtwD,MACT,YAACsxD,EAAW,UAAEiF,EAAS,cAAElF,EAAa,UAAEpG,EAAS,SAAEC,EAAQ,WAAEtsB,GAAch6C,EAC3E4rE,EAAW3+C,GAAOjtB,EAAQ4rE,UAChC,IAAIgG,EAAiBhG,EAASjrD,WAC1BkxD,EAAe,EAEnB,MAAMtJ,EAAYxvC,GAAc/4B,EAAQg5B,IAAK5d,KAAKxa,EAAGwa,KAAKgK,OAEpD0sD,EAAiB,SAASvnD,GAC9BzJ,EAAIoK,SAASX,EAAMg+C,EAAU3nE,EAAEgzB,EAAGhzB,EAAIixE,GAAej+C,EAAG9yB,EAAI8wE,EAAiB,GAC7Eh+C,EAAG9yB,GAAK8wE,EAAiBlF,GAGrBqF,EAA0BxJ,EAAU79C,UAAUinD,GACpD,IAAIzF,EAAU8F,EAAW5nD,EAAO3rB,EAAGsb,EAAG/a,EAAMupD,EAiB5C,IAfAznC,EAAI4J,UAAYinD,EAChB7wD,EAAI6J,aAAe,SACnB7J,EAAIN,KAAOorD,EAASllD,OAEpBkN,EAAGhzB,EAAIktE,GAAY1yD,KAAM22D,EAAyB/xE,GAGlD8gB,EAAI2J,UAAYzqB,EAAQ0uE,UACxBpwE,EAAK8c,KAAKixD,WAAYyF,GAEtBD,EAAepF,GAA6C,UAA5BsF,EACd,WAAdJ,EAA0BrL,EAAW,EAAItsB,EAAessB,EAAW,EAAItsB,EACvE,EAGCv7C,EAAI,EAAGO,EAAO0sE,EAAK9sE,OAAQH,EAAIO,IAAQP,EAAG,CAc7C,IAbAytE,EAAWR,EAAKjtE,GAChBuzE,EAAY52D,KAAKu0D,gBAAgBlxE,GAEjCqiB,EAAI2J,UAAYunD,EAChB1zE,EAAK4tE,EAASC,OAAQ2F,GAEtB1nD,EAAQ8hD,EAAS9hD,MAEbqiD,GAAiBriD,EAAMxrB,SACzBwc,KAAK61D,cAAcnwD,EAAK8S,EAAIn1B,EAAG8pE,EAAWvoE,GAC1C4xE,EAAiBtvE,KAAK6B,IAAIynE,EAASjrD,WAAY0lD,IAG5CtsD,EAAI,EAAGwuC,EAAOn+B,EAAMxrB,OAAQmb,EAAIwuC,IAAQxuC,EAC3C+3D,EAAe1nD,EAAMrQ,IAErB63D,EAAiBhG,EAASjrD,WAG5BriB,EAAK4tE,EAASE,MAAO0F,EACtB,CAGDD,EAAe,EACfD,EAAiBhG,EAASjrD,WAG1BriB,EAAK8c,KAAKkxD,UAAWwF,GACrBl+C,EAAG9yB,GAAK4rE,CACT,CAEDuF,UAAAA,CAAWr+C,EAAI9S,EAAK9gB,GAClB,MAAM2rE,EAASvwD,KAAKuwD,OACd/sE,EAAS+sE,EAAO/sE,OACtB,IAAIitE,EAAYptE,EAEhB,GAAIG,EAAQ,CACV,MAAM2pE,EAAYxvC,GAAc/4B,EAAQg5B,IAAK5d,KAAKxa,EAAGwa,KAAKgK,OAa1D,IAXAwO,EAAGhzB,EAAIktE,GAAY1yD,KAAMpb,EAAQkyE,YAAalyE,GAC9C4zB,EAAG9yB,GAAKd,EAAQ2sE,gBAEhB7rD,EAAI4J,UAAY69C,EAAU79C,UAAU1qB,EAAQkyE,aAC5CpxD,EAAI6J,aAAe,SAEnBkhD,EAAa5+C,GAAOjtB,EAAQ6rE,YAE5B/qD,EAAI2J,UAAYzqB,EAAQmyE,YACxBrxD,EAAIN,KAAOqrD,EAAWnlD,OAEjBjoB,EAAI,EAAGA,EAAIG,IAAUH,EACxBqiB,EAAIoK,SAASygD,EAAOltE,GAAI8pE,EAAU3nE,EAAEgzB,EAAGhzB,GAAIgzB,EAAG9yB,EAAI+qE,EAAWlrD,WAAa,GAC1EiT,EAAG9yB,GAAK+qE,EAAWlrD,WAAa3gB,EAAQ4sE,aAE3C,CACF,CAED/gB,cAAAA,CAAej4B,EAAI9S,EAAKsxD,EAAapyE,GACnC,MAAM,OAACktE,EAAM,OAAEF,GAAU5xD,MACnB,EAACxa,EAAC,EAAEE,GAAK8yB,GACT,MAACxO,EAAK,OAAEmC,GAAU6qD,GAClB,QAACpmD,EAAO,SAAEG,EAAQ,WAAEF,EAAU,YAAEC,GAAea,GAAc/sB,EAAQ6nB,cAE3E/G,EAAI2J,UAAYzqB,EAAQ+f,gBACxBe,EAAIiK,YAAc/qB,EAAQggB,YAC1Bc,EAAI4D,UAAY1kB,EAAQ+oB,YAExBjI,EAAIwH,YACJxH,EAAI4H,OAAO9nB,EAAIorB,EAASlrB,GACT,QAAXksE,GACF5xD,KAAKo1D,UAAU58C,EAAI9S,EAAKsxD,EAAapyE,GAEvC8gB,EAAI6H,OAAO/nB,EAAIwkB,EAAQ+G,EAAUrrB,GACjCggB,EAAIuxD,iBAAiBzxE,EAAIwkB,EAAOtkB,EAAGF,EAAIwkB,EAAOtkB,EAAIqrB,GACnC,WAAX6gD,GAAkC,UAAXE,GACzB9xD,KAAKo1D,UAAU58C,EAAI9S,EAAKsxD,EAAapyE,GAEvC8gB,EAAI6H,OAAO/nB,EAAIwkB,EAAOtkB,EAAIymB,EAAS2E,GACnCpL,EAAIuxD,iBAAiBzxE,EAAIwkB,EAAOtkB,EAAIymB,EAAQ3mB,EAAIwkB,EAAQ8G,EAAaprB,EAAIymB,GAC1D,WAAXylD,GACF5xD,KAAKo1D,UAAU58C,EAAI9S,EAAKsxD,EAAapyE,GAEvC8gB,EAAI6H,OAAO/nB,EAAIqrB,EAAYnrB,EAAIymB,GAC/BzG,EAAIuxD,iBAAiBzxE,EAAGE,EAAIymB,EAAQ3mB,EAAGE,EAAIymB,EAAS0E,GACrC,WAAX+gD,GAAkC,SAAXE,GACzB9xD,KAAKo1D,UAAU58C,EAAI9S,EAAKsxD,EAAapyE,GAEvC8gB,EAAI6H,OAAO/nB,EAAGE,EAAIkrB,GAClBlL,EAAIuxD,iBAAiBzxE,EAAGE,EAAGF,EAAIorB,EAASlrB,GACxCggB,EAAI2H,YAEJ3H,EAAIgI,OAEA9oB,EAAQ+oB,YAAc,GACxBjI,EAAIkI,QAEP,CAMDspD,sBAAAA,CAAuBtyE,GACrB,MAAMwe,EAAQpD,KAAKoD,MACbme,EAAQvhB,KAAK2lB,YACbwxC,EAAQ51C,GAASA,EAAM/7B,EACvB4xE,EAAQ71C,GAASA,EAAM77B,EAC7B,GAAIyxE,GAASC,EAAO,CAClB,MAAMp7B,EAAWyzB,GAAY7qE,EAAQo3C,UAAUj6C,KAAKie,KAAMA,KAAKoiB,QAASpiB,KAAK8zD,gBAC7E,IAAK93B,EACH,OAEF,MAAMl1C,EAAOkZ,KAAK+zD,MAAQ3D,GAAepwD,KAAMpb,GACzCqwE,EAAkBrzE,OAAO8M,OAAO,CAAC,EAAGstC,EAAUh8B,KAAK+zD,OACnDzB,EAAYH,GAAmB/uD,EAAOxe,EAASqwE,GAC/CnnD,EAAQukD,GAAmBztE,EAASqwE,EAAiB3C,EAAWlvD,GAClE+zD,EAAM9yC,MAAQvW,EAAMtoB,GAAK4xE,EAAM/yC,MAAQvW,EAAMpoB,IAC/Csa,KAAK8xD,OAASQ,EAAUR,OACxB9xD,KAAK4xD,OAASU,EAAUV,OACxB5xD,KAAKgK,MAAQljB,EAAKkjB,MAClBhK,KAAKmM,OAASrlB,EAAKqlB,OACnBnM,KAAKm0D,OAASn4B,EAASx2C,EACvBwa,KAAKo0D,OAASp4B,EAASt2C,EACvBsa,KAAKsvB,qBAAqB/K,OAAOvkB,KAAM8N,GAE1C,CACF,CAMDupD,WAAAA,GACE,QAASr3D,KAAK6zD,OACf,CAED1xC,IAAAA,CAAKzc,GACH,MAAM9gB,EAAUob,KAAKpb,QAAQiwB,WAAW7U,KAAK+L,cAC7C,IAAI8nD,EAAU7zD,KAAK6zD,QAEnB,IAAKA,EACH,OAGF7zD,KAAKk3D,uBAAuBtyE,GAE5B,MAAMoyE,EAAc,CAClBhtD,MAAOhK,KAAKgK,MACZmC,OAAQnM,KAAKmM,QAETqM,EAAK,CACThzB,EAAGwa,KAAKxa,EACRE,EAAGsa,KAAKta,GAIVmuE,EAAU3sE,KAAKa,IAAI8rE,GAAW,KAAO,EAAIA,EAEzC,MAAMlrD,EAAUiJ,GAAUhtB,EAAQ+jB,SAG5B2uD,EAAoBt3D,KAAKiK,MAAMzmB,QAAUwc,KAAKixD,WAAWztE,QAAUwc,KAAKswD,KAAK9sE,QAAUwc,KAAKkxD,UAAU1tE,QAAUwc,KAAKuwD,OAAO/sE,OAE9HoB,EAAQshD,SAAWoxB,IACrB5xD,EAAIsG,OACJtG,EAAI6xD,YAAc1D,EAGlB7zD,KAAKywC,eAAej4B,EAAI9S,EAAKsxD,EAAapyE,GAE1Cw5B,GAAsB1Y,EAAK9gB,EAAQ6oE,eAEnCj1C,EAAG9yB,GAAKijB,EAAQC,IAGhB5I,KAAKkxC,UAAU14B,EAAI9S,EAAK9gB,GAGxBob,KAAKs2D,SAAS99C,EAAI9S,EAAK9gB,GAGvBob,KAAK62D,WAAWr+C,EAAI9S,EAAK9gB,GAEzB85B,GAAqBhZ,EAAK9gB,EAAQ6oE,eAElC/nD,EAAI0G,UAEP,CAMDmyC,iBAAAA,GACE,OAAOv+C,KAAKoiB,SAAW,EACxB,CAODo8B,iBAAAA,CAAkBC,EAAgBkR,GAChC,MAAMjR,EAAa1+C,KAAKoiB,QAClBha,EAASq2C,EAAet6D,KAAIqzE,IAA2B,IAA1B,aAACzzE,EAAY,MAAEC,GAAM,EACtD,MAAMmJ,EAAO6S,KAAKoD,MAAM8nB,eAAennC,GAEvC,IAAKoJ,EACH,MAAM,IAAI6nB,MAAM,kCAAoCjxB,GAGtD,MAAO,CACLA,eACA+1B,QAAS3sB,EAAKge,KAAKnnB,GACnBA,QACD,IAEGyK,GAAWhL,EAAei7D,EAAYt2C,GACtCqvD,EAAkBz3D,KAAK03D,iBAAiBtvD,EAAQunD,IAElDlhE,GAAWgpE,KACbz3D,KAAKoiB,QAAUha,EACfpI,KAAK8zD,eAAiBnE,EACtB3vD,KAAK23D,qBAAsB,EAC3B33D,KAAKukB,QAAO,GAEf,CASDgqC,WAAAA,CAAYjlE,EAAGu1D,GAA4B,IAApBI,IAAc,UAAH,+CAChC,GAAIJ,GAAU7+C,KAAK23D,oBACjB,OAAO,EAET33D,KAAK23D,qBAAsB,EAE3B,MAAM/yE,EAAUob,KAAKpb,QACf85D,EAAa1+C,KAAKoiB,SAAW,GAC7Bha,EAASpI,KAAKo/C,mBAAmB91D,EAAGo1D,EAAYG,EAAQI,GAKxDwY,EAAkBz3D,KAAK03D,iBAAiBtvD,EAAQ9e,GAGhDmF,EAAUowD,IAAWp7D,EAAe2kB,EAAQs2C,IAAe+Y,EAgBjE,OAbIhpE,IACFuR,KAAKoiB,QAAUha,GAEXxjB,EAAQshD,SAAWthD,EAAQuwE,YAC7Bn1D,KAAK8zD,eAAiB,CACpBtuE,EAAG8D,EAAE9D,EACLE,EAAG4D,EAAE5D,GAGPsa,KAAKukB,QAAO,EAAMs6B,KAIfpwD,CACR,CAWD2wD,kBAAAA,CAAmB91D,EAAGo1D,EAAYG,EAAQI,GACxC,MAAMr6D,EAAUob,KAAKpb,QAErB,GAAe,aAAX0E,EAAE3H,KACJ,MAAO,GAGT,IAAKs9D,EAEH,OAAOP,EAIT,MAAMt2C,EAASpI,KAAKoD,MAAMo6C,0BAA0Bl0D,EAAG1E,EAAQmhB,KAAMnhB,EAASi6D,GAM9E,OAJIj6D,EAAQxB,SACVglB,EAAOhlB,UAGFglB,CACR,CASDsvD,gBAAAA,CAAiBtvD,EAAQ9e,GACvB,MAAM,OAAC6qE,EAAM,OAAEC,EAAM,QAAExvE,GAAWob,KAC5Bg8B,EAAWyzB,GAAY7qE,EAAQo3C,UAAUj6C,KAAKie,KAAMoI,EAAQ9e,GAClE,OAAoB,IAAb0yC,IAAuBm4B,IAAWn4B,EAASx2C,GAAK4uE,IAAWp4B,EAASt2C,EAC5E,EAGH,OAAe,CACbpE,GAAI,UACJutE,SAAU+E,GACVnE,eAEAmI,SAAAA,CAAUx0D,EAAOqnD,EAAO7lE,GAClBA,IACFwe,EAAMitD,QAAU,IAAIuD,GAAQ,CAACxwD,QAAOxe,YAEvC,EAED0kD,YAAAA,CAAalmC,EAAOqnD,EAAO7lE,GACrBwe,EAAMitD,SACRjtD,EAAMitD,QAAQxmC,WAAWjlC,EAE5B,EAEDymC,KAAAA,CAAMjoB,EAAOqnD,EAAO7lE,GACdwe,EAAMitD,SACRjtD,EAAMitD,QAAQxmC,WAAWjlC,EAE5B,EAEDizE,SAAAA,CAAUz0D,GACR,MAAMitD,EAAUjtD,EAAMitD,QAEtB,GAAIA,GAAWA,EAAQgH,cAAe,CACpC,MAAMt0E,EAAO,CACXstE,WAGF,IAA8E,IAA1EjtD,EAAM8nC,cAAc,oBAAqB,IAAInoD,EAAM2xD,YAAY,IACjE,OAGF2b,EAAQluC,KAAK/e,EAAMsC,KAEnBtC,EAAM8nC,cAAc,mBAAoBnoD,EACzC,CACF,EAED+rE,UAAAA,CAAW1rD,EAAOrgB,GAChB,GAAIqgB,EAAMitD,QAAS,CAEjB,MAAMj0B,EAAmBr5C,EAAK87D,OAC1Bz7C,EAAMitD,QAAQ9B,YAAYxrE,EAAKy3B,MAAO4hB,EAAkBr5C,EAAKk8D,eAE/Dl8D,EAAK0L,SAAU,EAElB,CACF,EAEDqZ,SAAU,CACRo+B,SAAS,EACTivB,SAAU,KACVn5B,SAAU,UACVr3B,gBAAiB,kBACjBixD,WAAY,OACZ3H,UAAW,CACTztD,OAAQ,QAEV2wD,aAAc,EACdC,kBAAmB,EACnBzpB,WAAY,OACZ2rB,UAAW,OACXhC,YAAa,EACbd,SAAU,CAAC,EAEX+F,UAAW,OACXQ,YAAa,OACbvF,cAAe,EACfD,gBAAiB,EACjBd,WAAY,CACVjwD,OAAQ,QAEVs2D,YAAa,OACbnuD,QAAS,EACTspD,aAAc,EACdD,UAAW,EACXvlD,aAAc,EACdw+C,UAAWA,CAACvlD,EAAKqJ,IAASA,EAAKyhD,SAAS1pE,KACxCokE,SAAUA,CAACxlD,EAAKqJ,IAASA,EAAKyhD,SAAS1pE,KACvCovE,mBAAoB,OACpB7E,eAAe,EACfzyB,WAAY,EACZh6B,YAAa,gBACb+I,YAAa,EACbjJ,UAAW,CACTsD,SAAU,IACVC,OAAQ,gBAEVM,WAAY,CACVxG,QAAS,CACPpgB,KAAM,SACNwmB,WAAY,CAAC,IAAK,IAAK,QAAS,SAAU,SAAU,WAEtD0rD,QAAS,CACP5rD,OAAQ,SACRD,SAAU,MAGdyZ,UAAWoxC,IAGb1gB,cAAe,CACbqe,SAAU,OACVC,WAAY,OACZxC,UAAW,QAGb/pD,YAAa,CACXwD,YAAcX,GAAkB,WAATA,GAA8B,aAATA,GAAgC,aAATA,EACnEa,YAAY,EACZ6Z,UAAW,CACT/Z,aAAa,EACbE,YAAY,GAEdlD,UAAW,CACTmD,WAAW,GAEbU,WAAY,CACVV,UAAW,cAKfuvC,uBAAwB,CAAC,gBC5yC3B,SAAS0gB,GAAejrC,EAAQgC,EAAK7qC,EAAO+zE,GAC1C,MAAM1xB,EAAQxZ,EAAOnoC,QAAQmqC,GAC7B,IAAe,IAAXwX,EACF,MAbgB2xB,EAACnrC,EAAQgC,EAAK7qC,EAAO+zE,KACpB,kBAARlpC,GACT7qC,EAAQ6oC,EAAO3mC,KAAK2oC,GAAO,EAC3BkpC,EAAY3P,QAAQ,CAACpkE,QAAOmqC,MAAOU,KAC1BnmC,MAAMmmC,KACf7qC,EAAQ,MAEHA,GAMEg0E,CAAYnrC,EAAQgC,EAAK7qC,EAAO+zE,GAGzC,OAAO1xB,IADMxZ,EAAOorC,YAAYppC,GACR7qC,EAAQqiD,CACjC,CAID,SAAS6xB,GAAkB12E,GACzB,MAAMqrC,EAAS7sB,KAAK8sB,YAEpB,OAAItrC,GAAS,GAAKA,EAAQqrC,EAAOrpC,OACxBqpC,EAAOrrC,GAETA,CACR,CAEc,MAAM22E,WAAsBtwB,GAEzChf,UAAY,WAKZA,gBAAkB,MAAH,CACb1lB,MAAO,CACLtgB,SAAUq1E,MAFI,GAMlBr4D,WAAAA,CAAY+jB,GACVuQ,MAAMvQ,GAGN5jB,KAAKo4D,iBAAcxlE,EACnBoN,KAAKq4D,YAAc,EACnBr4D,KAAKs4D,aAAe,EACrB,CAEDj9B,IAAAA,CAAKoa,GACH,MAAM8iB,EAAQv4D,KAAKs4D,aACnB,GAAIC,EAAM/0E,OAAQ,CAChB,MAAMqpC,EAAS7sB,KAAK8sB,YACpB,IAAK,MAAM,MAAC9oC,EAAK,MAAEmqC,KAAUoqC,EACvB1rC,EAAO7oC,KAAWmqC,GACpBtB,EAAO3gC,OAAOlI,EAAO,GAGzBgc,KAAKs4D,aAAe,EACrB,CACDnkC,MAAMkH,KAAKoa,EACZ,CAEDlpB,KAAAA,CAAMsC,EAAK7qC,GACT,GAAIzC,EAAcstC,GAChB,OAAO,KAET,MAAMhC,EAAS7sB,KAAK8sB,YAGpB,MAtDeya,EAACvjD,EAAO+E,IAAkB,OAAV/E,EAAiB,KAAOgH,EAAY9D,KAAKiB,MAAMnE,GAAQ,EAAG+E,GAsDlFw+C,CAFPvjD,EAAQ5B,SAAS4B,IAAU6oC,EAAO7oC,KAAW6qC,EAAM7qC,EAC/C8zE,GAAejrC,EAAQgC,EAAKtsC,EAAeyB,EAAO6qC,GAAM7uB,KAAKs4D,cACxCzrC,EAAOrpC,OAAS,EAC1C,CAEDomD,mBAAAA,GACE,MAAM,WAACh8C,EAAU,WAAEC,GAAcmS,KAAKlS,gBACtC,IAAI,IAAChF,EAAG,IAAEC,GAAOiX,KAAKutB,WAAU,GAEJ,UAAxBvtB,KAAKpb,QAAQukB,SACVvb,IACH9E,EAAM,GAEH+E,IACH9E,EAAMiX,KAAK8sB,YAAYtpC,OAAS,IAIpCwc,KAAKlX,IAAMA,EACXkX,KAAKjX,IAAMA,CACZ,CAEDmhD,UAAAA,GACE,MAAMphD,EAAMkX,KAAKlX,IACXC,EAAMiX,KAAKjX,IACXkgB,EAASjJ,KAAKpb,QAAQqkB,OACtB9F,EAAQ,GACd,IAAI0pB,EAAS7sB,KAAK8sB,YAGlBD,EAAkB,IAAT/jC,GAAcC,IAAQ8jC,EAAOrpC,OAAS,EAAKqpC,EAASA,EAAO7qC,MAAM8G,EAAKC,EAAM,GAErFiX,KAAKq4D,YAAcnxE,KAAK6B,IAAI8jC,EAAOrpC,QAAUylB,EAAS,EAAI,GAAI,GAC9DjJ,KAAKo4D,YAAcp4D,KAAKlX,KAAOmgB,EAAS,GAAM,GAE9C,IAAK,IAAIznB,EAAQsH,EAAKtH,GAASuH,EAAKvH,IAClC2hB,EAAMjd,KAAK,CAAC1E,UAEd,OAAO2hB,CACR,CAEDirB,gBAAAA,CAAiB5sC,GACf,OAAO02E,GAAkBn2E,KAAKie,KAAMxe,EACrC,CAKD2jC,SAAAA,GACEgP,MAAMhP,YAEDnlB,KAAKs0B,iBAERt0B,KAAK67B,gBAAkB77B,KAAK67B,eAE/B,CAGD9tC,gBAAAA,CAAiBvM,GAKf,MAJqB,kBAAVA,IACTA,EAAQwe,KAAKusB,MAAM/qC,IAGJ,OAAVA,EAAiB8rC,IAAMttB,KAAK+1B,oBAAoBv0C,EAAQwe,KAAKo4D,aAAep4D,KAAKq4D,YACzF,CAIDlmC,eAAAA,CAAgBnuC,GACd,MAAMmf,EAAQnD,KAAKmD,MACnB,OAAInf,EAAQ,GAAKA,EAAQmf,EAAM3f,OAAS,EAC/B,KAEFwc,KAAKjS,iBAAiBoV,EAAMnf,GAAOxC,MAC3C,CAEDssD,gBAAAA,CAAiBpiC,GACf,OAAOxkB,KAAKiB,MAAM6X,KAAKo4D,YAAcp4D,KAAKguC,mBAAmBtiC,GAAS1L,KAAKq4D,YAC5E,CAEDhkC,YAAAA,GACE,OAAOr0B,KAAK8I,MACb,ECpIH,SAAS0vD,GAAcC,EAAmBC,GACxC,MAAMv1D,EAAQ,IAMR,OAACgG,EAAM,KAAEqmC,EAAI,IAAE1mD,EAAG,IAAEC,EAAG,UAAE4vE,EAAS,MAAEprE,EAAK,SAAEqrE,EAAQ,UAAEC,EAAS,cAAEC,GAAiBL,EACjFM,EAAOvpB,GAAQ,EACfwpB,EAAYJ,EAAW,GACtB9vE,IAAKmwE,EAAMlwE,IAAKmwE,GAAQR,EACzB9qE,GAAcrM,EAAcuH,GAC5B+E,GAActM,EAAcwH,GAC5BowE,GAAgB53E,EAAcgM,GAC9B6rE,GAAcF,EAAOD,IAASJ,EAAY,GAChD,IACIt1C,EAAQ81C,EAASC,EAASC,EAD1BtiC,EAAUjvC,GAASkxE,EAAOD,GAAQD,EAAYD,GAAQA,EAK1D,GAAI9hC,EAdgB,QAcUrpC,IAAeC,EAC3C,MAAO,CAAC,CAACrM,MAAOy3E,GAAO,CAACz3E,MAAO03E,IAGjCK,EAAYryE,KAAKq/C,KAAK2yB,EAAOjiC,GAAW/vC,KAAKoB,MAAM2wE,EAAOhiC,GACtDsiC,EAAYP,IAEd/hC,EAAUjvC,EAAQuxE,EAAYtiC,EAAU+hC,EAAYD,GAAQA,GAGzDx3E,EAAco3E,KAEjBp1C,EAASr8B,KAAKmB,IAAI,GAAIswE,GACtB1hC,EAAU/vC,KAAKq/C,KAAKtP,EAAU1T,GAAUA,GAG3B,UAAXpa,GACFkwD,EAAUnyE,KAAKoB,MAAM2wE,EAAOhiC,GAAWA,EACvCqiC,EAAUpyE,KAAKq/C,KAAK2yB,EAAOjiC,GAAWA,IAEtCoiC,EAAUJ,EACVK,EAAUJ,GAGRtrE,GAAcC,GAAc2hD,G7DL3B,SAAqBhqD,EAAWsC,GACrC,MAAM0xE,EAAUtyE,KAAKiB,MAAM3C,GAC3B,OAAOg0E,EAAY1xE,GAAYtC,GAAOg0E,EAAW1xE,GAAYtC,CAC9D,C6DEyCi0E,EAAa1wE,EAAMD,GAAO0mD,EAAMvY,EAAU,MAKhFsiC,EAAYryE,KAAKiB,MAAMjB,KAAK4B,KAAKC,EAAMD,GAAOmuC,EAAS2hC,IACvD3hC,GAAWluC,EAAMD,GAAOywE,EACxBF,EAAUvwE,EACVwwE,EAAUvwE,GACDowE,GAITE,EAAUzrE,EAAa9E,EAAMuwE,EAC7BC,EAAUzrE,EAAa9E,EAAMuwE,EAC7BC,EAAYhsE,EAAQ,EACpB0pC,GAAWqiC,EAAUD,GAAWE,IAGhCA,GAAaD,EAAUD,GAAWpiC,EAIhCsiC,EADE1xE,EAAa0xE,EAAWryE,KAAKiB,MAAMoxE,GAAYtiC,EAAU,KAC/C/vC,KAAKiB,MAAMoxE,GAEXryE,KAAKq/C,KAAKgzB,IAM1B,MAAMG,EAAgBxyE,KAAK6B,IACzBK,EAAe6tC,GACf7tC,EAAeiwE,IAEjB91C,EAASr8B,KAAKmB,IAAI,GAAI9G,EAAco3E,GAAae,EAAgBf,GACjEU,EAAUnyE,KAAKiB,MAAMkxE,EAAU91C,GAAUA,EACzC+1C,EAAUpyE,KAAKiB,MAAMmxE,EAAU/1C,GAAUA,EAEzC,IAAI5kB,EAAI,EAiBR,IAhBI/Q,IACEkrE,GAAiBO,IAAYvwE,GAC/Bqa,EAAMjd,KAAK,CAAC1E,MAAOsH,IAEfuwE,EAAUvwE,GACZ6V,IAGE9W,EAAaX,KAAKiB,OAAOkxE,EAAU16D,EAAIs4B,GAAW1T,GAAUA,EAAQz6B,EAAK6wE,GAAkB7wE,EAAKswE,EAAYX,KAC9G95D,KAEO06D,EAAUvwE,GACnB6V,KAIGA,EAAI46D,IAAa56D,EACtBwE,EAAMjd,KAAK,CAAC1E,MAAO0F,KAAKiB,OAAOkxE,EAAU16D,EAAIs4B,GAAW1T,GAAUA,IAcpE,OAXI11B,GAAcirE,GAAiBQ,IAAYvwE,EAEzCoa,EAAM3f,QAAUqE,EAAasb,EAAMA,EAAM3f,OAAS,GAAGhC,MAAOuH,EAAK4wE,GAAkB5wE,EAAKqwE,EAAYX,IACtGt1D,EAAMA,EAAM3f,OAAS,GAAGhC,MAAQuH,EAEhCoa,EAAMjd,KAAK,CAAC1E,MAAOuH,IAEX8E,GAAcyrE,IAAYvwE,GACpCoa,EAAMjd,KAAK,CAAC1E,MAAO83E,IAGdn2D,CACR,CAED,SAASw2D,GAAkBn4E,EAAO43E,EAAY,GAA2B,IAA3B,WAAClmC,EAAU,YAAE/oB,GAAY,EACrE,MAAM4C,EAAM/jB,EAAUmhB,GAChB7K,GAAS4zB,EAAahsC,KAAK4H,IAAIie,GAAO7lB,KAAK6I,IAAIgd,KAAS,KACxDvpB,EAAS,IAAO41E,GAAc,GAAK53E,GAAOgC,OAChD,OAAO0D,KAAK4B,IAAIswE,EAAa95D,EAAO9b,EACrC,CAEc,MAAMo2E,WAAwB/xB,GAE3ChoC,WAAAA,CAAY+jB,GACVuQ,MAAMvQ,GAGN5jB,KAAKxV,WAAQoI,EAEboN,KAAKvV,SAAMmI,EAEXoN,KAAKo4D,iBAAcxlE,EAEnBoN,KAAK65D,eAAYjnE,EACjBoN,KAAKq4D,YAAc,CACpB,CAED9rC,KAAAA,CAAMsC,EAAK7qC,GACT,OAAIzC,EAAcstC,KAGE,kBAARA,GAAoBA,aAAe1sC,UAAYC,UAAUysC,GAF5D,MAMDA,CACT,CAEDirC,sBAAAA,GACE,MAAM,YAAC5wD,GAAelJ,KAAKpb,SACrB,WAACgJ,EAAU,WAAEC,GAAcmS,KAAKlS,gBACtC,IAAI,IAAChF,EAAG,IAAEC,GAAOiX,KAEjB,MAAM+5D,EAASx0E,GAAMuD,EAAM8E,EAAa9E,EAAMvD,EACxCy0E,EAASz0E,GAAMwD,EAAM8E,EAAa9E,EAAMxD,EAE9C,GAAI2jB,EAAa,CACf,MAAM+wD,EAAUryE,EAAKkB,GACfoxE,EAAUtyE,EAAKmB,GAEjBkxE,EAAU,GAAKC,EAAU,EAC3BF,EAAO,GACEC,EAAU,GAAKC,EAAU,GAClCH,EAAO,EAEV,CAED,GAAIjxE,IAAQC,EAAK,CACf,IAAIkgB,EAAiB,IAARlgB,EAAY,EAAI7B,KAAKa,IAAU,IAANgB,GAEtCixE,EAAOjxE,EAAMkgB,GAERC,GACH6wD,EAAOjxE,EAAMmgB,EAEhB,CACDjJ,KAAKlX,IAAMA,EACXkX,KAAKjX,IAAMA,CACZ,CAEDoxE,YAAAA,GACE,MAAM30B,EAAWxlC,KAAKpb,QAAQue,MAE9B,IACIy1D,GADA,cAAC5yB,EAAa,SAAEo0B,GAAY50B,EAkBhC,OAfI40B,GACFxB,EAAW1xE,KAAKq/C,KAAKvmC,KAAKjX,IAAMqxE,GAAYlzE,KAAKoB,MAAM0X,KAAKlX,IAAMsxE,GAAY,EAC1ExB,EAAW,MACb7mD,QAAQC,KAAK,UAAUhS,KAAK1e,sBAAsB84E,mCAA0CxB,8BAC5FA,EAAW,OAGbA,EAAW54D,KAAKq6D,mBAChBr0B,EAAgBA,GAAiB,IAG/BA,IACF4yB,EAAW1xE,KAAK4B,IAAIk9C,EAAe4yB,IAG9BA,CACR,CAKDyB,gBAAAA,GACE,OAAOl4E,OAAOmF,iBACf,CAED4iD,UAAAA,GACE,MAAMn7B,EAAO/O,KAAKpb,QACZ4gD,EAAWz2B,EAAK5L,MAMtB,IAAIy1D,EAAW54D,KAAKm6D,eACpBvB,EAAW1xE,KAAK6B,IAAI,EAAG6vE,GAEvB,MAcMz1D,EAAQq1D,GAdkB,CAC9BI,WACAzvD,OAAQ4F,EAAK5F,OACbrgB,IAAKimB,EAAKjmB,IACVC,IAAKgmB,EAAKhmB,IACV4vE,UAAWnzB,EAASmzB,UACpBnpB,KAAMhK,EAAS40B,SACf7sE,MAAOi4C,EAASj4C,MAChBsrE,UAAW74D,KAAK0xC,aAChBxe,WAAYlzB,KAAKs0B,eACjBnqB,YAAaq7B,EAASr7B,aAAe,EACrC2uD,eAA0C,IAA3BtzB,EAASszB,eAER94D,KAAKooC,QAAUpoC,MAmBjC,MAdoB,UAAhB+O,EAAK5F,QACPxgB,EAAmBwa,EAAOnD,KAAM,SAG9B+O,EAAK3rB,SACP+f,EAAM/f,UAEN4c,KAAKxV,MAAQwV,KAAKjX,IAClBiX,KAAKvV,IAAMuV,KAAKlX,MAEhBkX,KAAKxV,MAAQwV,KAAKlX,IAClBkX,KAAKvV,IAAMuV,KAAKjX,KAGXoa,CACR,CAKDgiB,SAAAA,GACE,MAAMhiB,EAAQnD,KAAKmD,MACnB,IAAI3Y,EAAQwV,KAAKlX,IACb2B,EAAMuV,KAAKjX,IAIf,GAFAorC,MAAMhP,YAEFnlB,KAAKpb,QAAQqkB,QAAU9F,EAAM3f,OAAQ,CACvC,MAAMylB,GAAUxe,EAAMD,GAAStD,KAAK6B,IAAIoa,EAAM3f,OAAS,EAAG,GAAK,EAC/DgH,GAASye,EACTxe,GAAOwe,CACR,CACDjJ,KAAKo4D,YAAc5tE,EACnBwV,KAAK65D,UAAYpvE,EACjBuV,KAAKq4D,YAAc5tE,EAAMD,CAC1B,CAED4jC,gBAAAA,CAAiB5sC,GACf,OAAO2gB,GAAa3gB,EAAOwe,KAAKoD,MAAMxe,QAAQyd,OAAQrC,KAAKpb,QAAQue,MAAML,OAC1E,EC9SY,MAAMw3D,WAAoBV,GAEvC/wC,UAAY,SAKZA,gBAAkB,MAAH,CACb1lB,MAAO,CACLtgB,SAAU8nB,GAAM5H,WAAWE,WAFb,GAOlB2mC,mBAAAA,GACE,MAAM,IAAC9gD,EAAG,IAAEC,GAAOiX,KAAKutB,WAAU,GAElCvtB,KAAKlX,IAAM1G,EAAS0G,GAAOA,EAAM,EACjCkX,KAAKjX,IAAM3G,EAAS2G,GAAOA,EAAM,EAGjCiX,KAAK85D,wBACN,CAMDO,gBAAAA,GACE,MAAMnnC,EAAalzB,KAAKs0B,eAClB9wC,EAAS0vC,EAAalzB,KAAKgK,MAAQhK,KAAKmM,OACxChC,EAAcnhB,EAAUgX,KAAKpb,QAAQue,MAAMgH,aAC3C7K,GAAS4zB,EAAahsC,KAAK4H,IAAIqb,GAAejjB,KAAK6I,IAAIoa,KAAiB,KACxEijC,EAAWptC,KAAKytC,wBAAwB,GAC9C,OAAOvmD,KAAKq/C,KAAK/iD,EAAS0D,KAAK4B,IAAI,GAAIskD,EAAS7nC,WAAajG,GAC9D,CAGDvR,gBAAAA,CAAiBvM,GACf,OAAiB,OAAVA,EAAiB8rC,IAAMttB,KAAK+1B,oBAAoBv0C,EAAQwe,KAAKo4D,aAAep4D,KAAKq4D,YACzF,CAEDvqB,gBAAAA,CAAiBpiC,GACf,OAAO1L,KAAKo4D,YAAcp4D,KAAKguC,mBAAmBtiC,GAAS1L,KAAKq4D,WACjE,ECiCa1tD,GAAM5H,WAAWc,YCuPjB8G,GAAM5H,WAAWE,QC1TjC,MAAMs3D,GAAY,CAChBC,YAAa,CAACC,QAAQ,EAAM3zE,KAAM,EAAG4zE,MAAO,KAC5CC,OAAQ,CAACF,QAAQ,EAAM3zE,KAAM,IAAM4zE,MAAO,IAC1CE,OAAQ,CAACH,QAAQ,EAAM3zE,KAAM,IAAO4zE,MAAO,IAC3CG,KAAM,CAACJ,QAAQ,EAAM3zE,KAAM,KAAS4zE,MAAO,IAC3CI,IAAK,CAACL,QAAQ,EAAM3zE,KAAM,MAAU4zE,MAAO,IAC3CK,KAAM,CAACN,QAAQ,EAAO3zE,KAAM,OAAW4zE,MAAO,GAC9CM,MAAO,CAACP,QAAQ,EAAM3zE,KAAM,OAAS4zE,MAAO,IAC5CO,QAAS,CAACR,QAAQ,EAAO3zE,KAAM,OAAS4zE,MAAO,GAC/CQ,KAAM,CAACT,QAAQ,EAAM3zE,KAAM,SAMvBq0E,GAA6Cv5E,OAAO2B,KAAKg3E,IAM/D,SAASa,GAAOx0E,EAAGC,GACjB,OAAOD,EAAIC,CACZ,CAOD,SAAS0lC,GAAM/lB,EAAO/G,GACpB,GAAIle,EAAcke,GAChB,OAAO,KAGT,MAAM47D,EAAU70D,EAAM80D,UAChB,OAACC,EAAM,MAAEpzE,EAAK,WAAEqzE,GAAch1D,EAAMi1D,WAC1C,IAAIj6E,EAAQie,EAaZ,MAXsB,oBAAX87D,IACT/5E,EAAQ+5E,EAAO/5E,IAIZY,EAASZ,KACZA,EAA0B,kBAAX+5E,EACXF,EAAQ9uC,MAAM/qC,EAA4B+5E,GAC1CF,EAAQ9uC,MAAM/qC,IAGN,OAAVA,EACK,MAGL2G,IACF3G,EAAkB,SAAV2G,IAAqBK,EAASgzE,KAA8B,IAAfA,EAEjDH,EAAQ7/B,QAAQh6C,EAAO2G,GADvBkzE,EAAQ7/B,QAAQh6C,EAAO,UAAWg6E,KAIhCh6E,EACT,CAUD,SAASk6E,GAA0BC,EAAS7yE,EAAKC,EAAK6yE,GACpD,MAAMh4E,EAAOu3E,GAAM33E,OAEnB,IAAK,IAAIH,EAAI83E,GAAMz2E,QAAQi3E,GAAUt4E,EAAIO,EAAO,IAAKP,EAAG,CACtD,MAAMw4E,EAAWtB,GAAUY,GAAM93E,IAC3BkgC,EAASs4C,EAASnB,MAAQmB,EAASnB,MAAQv4E,OAAO25E,iBAExD,GAAID,EAASpB,QAAUvzE,KAAKq/C,MAAMx9C,EAAMD,IAAQy6B,EAASs4C,EAAS/0E,QAAU80E,EAC1E,OAAOT,GAAM93E,EAEhB,CAED,OAAO83E,GAAMv3E,EAAO,EACrB,CAuCD,SAASm4E,GAAQ54D,EAAO64D,EAAMC,GAC5B,GAAKA,GAEE,GAAIA,EAAWz4E,OAAQ,CAC5B,MAAM,GAAC+H,EAAE,GAAED,GAAMJ,EAAQ+wE,EAAYD,GAErC74D,EADkB84D,EAAW1wE,IAAOywE,EAAOC,EAAW1wE,GAAM0wE,EAAW3wE,KACpD,CACpB,OALC6X,EAAM64D,IAAQ,CAMjB,CA8BD,SAASE,GAAoB11D,EAAOxD,EAAQm5D,GAC1C,MAAMh5D,EAAQ,GAERhf,EAAM,CAAC,EACPP,EAAOof,EAAOxf,OACpB,IAAIH,EAAG7B,EAEP,IAAK6B,EAAI,EAAGA,EAAIO,IAAQP,EACtB7B,EAAQwhB,EAAO3f,GACfc,EAAI3C,GAAS6B,EAEb8f,EAAMjd,KAAK,CACT1E,QACAqpB,OAAO,IAMX,OAAiB,IAATjnB,GAAeu4E,EAxCzB,SAAuB31D,EAAOrD,EAAOhf,EAAKg4E,GACxC,MAAMd,EAAU70D,EAAM80D,SAChBj1B,GAASg1B,EAAQ7/B,QAAQr4B,EAAM,GAAG3hB,MAAO26E,GACzC1wE,EAAO0X,EAAMA,EAAM3f,OAAS,GAAGhC,MACrC,IAAIqpB,EAAO7mB,EAEX,IAAK6mB,EAAQw7B,EAAOx7B,GAASpf,EAAMof,GAASwwD,EAAQ7uE,IAAIqe,EAAO,EAAGsxD,GAChEn4E,EAAQG,EAAI0mB,GACR7mB,GAAS,IACXmf,EAAMnf,GAAO6mB,OAAQ,GAGzB,OAAO1H,CACR,CA2B6Ci5D,CAAc51D,EAAOrD,EAAOhf,EAAKg4E,GAAzCh5D,CACrC,CAEc,MAAMk5D,WAAkBx0B,GAErChf,UAAY,OAKZA,gBAAkB,CAQhB1f,OAAQ,OAERmzD,SAAU,CAAC,EACXN,KAAM,CACJT,QAAQ,EACRxC,MAAM,EACN5wE,OAAO,EACPqzE,YAAY,EACZG,QAAS,cACTY,eAAgB,CAAC,GAEnBp5D,MAAO,CASLjf,OAAQ,OAERrB,UAAU,EAEVgoB,MAAO,CACLq7B,SAAS,KAQfrmC,WAAAA,CAAYyR,GACV6iB,MAAM7iB,GAGNtR,KAAK0xB,OAAS,CACZvmB,KAAM,GACN0hB,OAAQ,GACR9G,IAAK,IAIP/lB,KAAKw8D,MAAQ,MAEbx8D,KAAKy8D,gBAAa7pE,EAClBoN,KAAK08D,SAAW,CAAC,EACjB18D,KAAK28D,aAAc,EACnB38D,KAAKy7D,gBAAa7oE,CACnB,CAEDyoC,IAAAA,CAAK2f,GAAsB,IAAXjsC,EAAO,UAAH,6CAAG,CAAC,EACtB,MAAMitD,EAAOhhB,EAAUghB,OAAShhB,EAAUghB,KAAO,CAAC,GAE5CX,EAAUr7D,KAAKs7D,SAAW,IAAIgB,GAAethB,EAAUshB,SAAS96C,MAEtE65C,EAAQhgC,KAAKtsB,GAMb5pB,EAAQ62E,EAAKO,eAAgBlB,EAAQ//B,WAErCt7B,KAAKy7D,WAAa,CAChBF,OAAQS,EAAKT,OACbpzE,MAAO6zE,EAAK7zE,MACZqzE,WAAYQ,EAAKR,YAGnBrnC,MAAMkH,KAAK2f,GAEXh7C,KAAK28D,YAAc5tD,EAAK6tD,UACzB,CAODrwC,KAAAA,CAAMsC,EAAK7qC,GACT,YAAY4O,IAARi8B,EACK,KAEFtC,GAAMvsB,KAAM6uB,EACpB,CAEDmS,YAAAA,GACE7M,MAAM6M,eACNhhC,KAAK0xB,OAAS,CACZvmB,KAAM,GACN0hB,OAAQ,GACR9G,IAAK,GAER,CAED6jB,mBAAAA,GACE,MAAMhlD,EAAUob,KAAKpb,QACfy2E,EAAUr7D,KAAKs7D,SACfvC,EAAOn0E,EAAQo3E,KAAKjD,MAAQ,MAElC,IAAI,IAACjwE,EAAG,IAAEC,EAAG,WAAE6E,EAAU,WAAEC,GAAcmS,KAAKlS,gBAK9C,SAAS+uE,EAAa1zD,GACfvb,GAAelF,MAAMygB,EAAOrgB,OAC/BA,EAAM5B,KAAK4B,IAAIA,EAAKqgB,EAAOrgB,MAExB+E,GAAenF,MAAMygB,EAAOpgB,OAC/BA,EAAM7B,KAAK6B,IAAIA,EAAKogB,EAAOpgB,KAE9B,CAGI6E,GAAeC,IAElBgvE,EAAa78D,KAAK88D,mBAIK,UAAnBl4E,EAAQukB,QAA+C,WAAzBvkB,EAAQue,MAAMjf,QAC9C24E,EAAa78D,KAAKutB,WAAU,KAIhCzkC,EAAM1G,EAAS0G,KAASJ,MAAMI,GAAOA,GAAOuyE,EAAQ7/B,QAAQzZ,KAAKC,MAAO+2C,GACxEhwE,EAAM3G,EAAS2G,KAASL,MAAMK,GAAOA,GAAOsyE,EAAQ5/B,MAAM1Z,KAAKC,MAAO+2C,GAAQ,EAG9E/4D,KAAKlX,IAAM5B,KAAK4B,IAAIA,EAAKC,EAAM,GAC/BiX,KAAKjX,IAAM7B,KAAK6B,IAAID,EAAM,EAAGC,EAC9B,CAKD+zE,eAAAA,GACE,MAAMznD,EAAMrV,KAAK+8D,qBACjB,IAAIj0E,EAAM3G,OAAOmF,kBACbyB,EAAM5G,OAAOyrC,kBAMjB,OAJIvY,EAAI7xB,SACNsF,EAAMusB,EAAI,GACVtsB,EAAMssB,EAAIA,EAAI7xB,OAAS,IAElB,CAACsF,MAAKC,MACd,CAKDmhD,UAAAA,GACE,MAAMtlD,EAAUob,KAAKpb,QACfo4E,EAAWp4E,EAAQo3E,KACnBx2B,EAAW5gD,EAAQue,MACnB84D,EAAiC,WAApBz2B,EAASthD,OAAsB8b,KAAK+8D,qBAAuB/8D,KAAKi9D,YAE5D,UAAnBr4E,EAAQukB,QAAsB8yD,EAAWz4E,SAC3Cwc,KAAKlX,IAAMkX,KAAK0oC,UAAYuzB,EAAW,GACvCj8D,KAAKjX,IAAMiX,KAAKyoC,UAAYwzB,EAAWA,EAAWz4E,OAAS,IAG7D,MAAMsF,EAAMkX,KAAKlX,IAGXqa,EhE1SH,SAAwBH,EAAkBla,EAAaC,GAC5D,IAAIyB,EAAQ,EACRC,EAAMuY,EAAOxf,OAEjB,KAAOgH,EAAQC,GAAOuY,EAAOxY,GAAS1B,GACpC0B,IAEF,KAAOC,EAAMD,GAASwY,EAAOvY,EAAM,GAAK1B,GACtC0B,IAGF,OAAOD,EAAQ,GAAKC,EAAMuY,EAAOxf,OAC7Bwf,EAAOhhB,MAAMwI,EAAOC,GACpBuY,CACL,CgE4RiBk6D,CAAejB,EAAYnzE,EAF7BkX,KAAKjX,KAkBjB,OAXAiX,KAAKw8D,MAAQQ,EAASjE,OAASvzB,EAASh7B,SACpCkxD,GAA0BsB,EAASrB,QAAS37D,KAAKlX,IAAKkX,KAAKjX,IAAKiX,KAAKm9D,kBAAkBr0E,IArR/F,SAAoC0d,EAAO8kC,EAAUqwB,EAAS7yE,EAAKC,GACjE,IAAK,IAAI1F,EAAI83E,GAAM33E,OAAS,EAAGH,GAAK83E,GAAMz2E,QAAQi3E,GAAUt4E,IAAK,CAC/D,MAAM01E,EAAOoC,GAAM93E,GACnB,GAAIk3E,GAAUxB,GAAM0B,QAAUj0D,EAAM80D,SAAS//B,KAAKxyC,EAAKD,EAAKiwE,IAASztB,EAAW,EAC9E,OAAOytB,CAEV,CAED,OAAOoC,GAAMQ,EAAUR,GAAMz2E,QAAQi3E,GAAW,EACjD,CA6QOyB,CAA2Bp9D,KAAMmD,EAAM3f,OAAQw5E,EAASrB,QAAS37D,KAAKlX,IAAKkX,KAAKjX,MACpFiX,KAAKy8D,WAAcj3B,EAAS36B,MAAMq7B,SAA0B,SAAflmC,KAAKw8D,MAxQtD,SAA4BzD,GAC1B,IAAK,IAAI11E,EAAI83E,GAAMz2E,QAAQq0E,GAAQ,EAAGn1E,EAAOu3E,GAAM33E,OAAQH,EAAIO,IAAQP,EACrE,GAAIk3E,GAAUY,GAAM93E,IAAIo3E,OACtB,OAAOU,GAAM93E,EAGlB,CAmQOg6E,CAAmBr9D,KAAKw8D,YADyC5pE,EAErEoN,KAAKs9D,YAAYrB,GAEbr3E,EAAQxB,SACV+f,EAAM/f,UAGD84E,GAAoBl8D,KAAMmD,EAAOnD,KAAKy8D,WAC9C,CAEDhyB,aAAAA,GAGMzqC,KAAKpb,QAAQ24E,qBACfv9D,KAAKs9D,YAAYt9D,KAAKmD,MAAMhf,KAAIm+B,IAASA,EAAK9gC,QAEjD,CAUD87E,WAAAA,GAA6B,IAGvBj3B,EAAO56C,EAHDwwE,EAAa,UAAH,6CAAG,GACnBzxE,EAAQ,EACRC,EAAM,EAGNuV,KAAKpb,QAAQqkB,QAAUgzD,EAAWz4E,SACpC6iD,EAAQrmC,KAAKw9D,mBAAmBvB,EAAW,IAEzCzxE,EADwB,IAAtByxE,EAAWz4E,OACL,EAAI6iD,GAEHrmC,KAAKw9D,mBAAmBvB,EAAW,IAAM51B,GAAS,EAE7D56C,EAAOuU,KAAKw9D,mBAAmBvB,EAAWA,EAAWz4E,OAAS,IAE5DiH,EADwB,IAAtBwxE,EAAWz4E,OACPiI,GAECA,EAAOuU,KAAKw9D,mBAAmBvB,EAAWA,EAAWz4E,OAAS,KAAO,GAGhF,MAAM+rD,EAAQ0sB,EAAWz4E,OAAS,EAAI,GAAM,IAC5CgH,EAAQQ,EAAYR,EAAO,EAAG+kD,GAC9B9kD,EAAMO,EAAYP,EAAK,EAAG8kD,GAE1BvvC,KAAK08D,SAAW,CAAClyE,QAAOC,MAAK84B,OAAQ,GAAK/4B,EAAQ,EAAIC,GACvD,CASDwyE,SAAAA,GACE,MAAM5B,EAAUr7D,KAAKs7D,SACfxyE,EAAMkX,KAAKlX,IACXC,EAAMiX,KAAKjX,IACXnE,EAAUob,KAAKpb,QACfo4E,EAAWp4E,EAAQo3E,KAEnBpxD,EAAQoyD,EAASjE,MAAQ2C,GAA0BsB,EAASrB,QAAS7yE,EAAKC,EAAKiX,KAAKm9D,kBAAkBr0E,IACtGsxE,EAAW73E,EAAeqC,EAAQue,MAAMi3D,SAAU,GAClDqD,EAAoB,SAAV7yD,GAAmBoyD,EAASxB,WACtCkC,EAAal1E,EAASi1E,KAAwB,IAAZA,EAClCt6D,EAAQ,CAAC,EACf,IACI64D,EAAMzuE,EADN84C,EAAQv9C,EAYZ,GARI40E,IACFr3B,GAASg1B,EAAQ7/B,QAAQ6K,EAAO,UAAWo3B,IAI7Cp3B,GAASg1B,EAAQ7/B,QAAQ6K,EAAOq3B,EAAa,MAAQ9yD,GAGjDywD,EAAQ9/B,KAAKxyC,EAAKD,EAAK8hB,GAAS,IAASwvD,EAC3C,MAAM,IAAIplD,MAAMlsB,EAAM,QAAUC,EAAM,uCAAyCqxE,EAAW,IAAMxvD,GAGlG,MAAMqxD,EAAsC,SAAzBr3E,EAAQue,MAAMjf,QAAqB8b,KAAK29D,oBAC3D,IAAK3B,EAAO31B,EAAO94C,EAAQ,EAAGyuE,EAAOjzE,EAAKizE,GAAQX,EAAQ7uE,IAAIwvE,EAAM5B,EAAUxvD,GAAQrd,IACpFwuE,GAAQ54D,EAAO64D,EAAMC,GAQvB,OALID,IAASjzE,GAA0B,UAAnBnE,EAAQukB,QAAgC,IAAV5b,GAChDwuE,GAAQ54D,EAAO64D,EAAMC,GAIhBr6E,OAAO2B,KAAK4f,GAAO2uB,MAAK,CAAClrC,EAAGC,IAAMD,EAAIC,IAAG1C,KAAIqB,IAAMA,GAC3D,CAMD4oC,gBAAAA,CAAiB5sC,GACf,MAAM65E,EAAUr7D,KAAKs7D,SACf0B,EAAWh9D,KAAKpb,QAAQo3E,KAE9B,OAAIgB,EAASY,cACJvC,EAAQv4D,OAAOthB,EAAOw7E,EAASY,eAEjCvC,EAAQv4D,OAAOthB,EAAOw7E,EAAST,eAAesB,SACtD,CAWDC,mBAAAA,CAAoB9B,EAAMh4E,EAAOmf,EAAOL,GACtC,MAAMle,EAAUob,KAAKpb,QACf6d,EAAY7d,EAAQue,MAAMtgB,SAEhC,GAAI4f,EACF,OAAO1gB,EAAK0gB,EAAW,CAACu5D,EAAMh4E,EAAOmf,GAAQnD,MAG/C,MAAMs7B,EAAU12C,EAAQo3E,KAAKO,eACvBxD,EAAO/4D,KAAKw8D,MACZL,EAAYn8D,KAAKy8D,WACjBsB,EAAchF,GAAQz9B,EAAQy9B,GAC9BiF,EAAc7B,GAAa7gC,EAAQ6gC,GACnC75C,EAAOnf,EAAMnf,GACb6mB,EAAQsxD,GAAa6B,GAAe17C,GAAQA,EAAKzX,MAEvD,OAAO7K,KAAKs7D,SAASx4D,OAAOk5D,EAAMl5D,IAAW+H,EAAQmzD,EAAcD,GACpE,CAKD3yB,kBAAAA,CAAmBjoC,GACjB,IAAI9f,EAAGO,EAAM0+B,EAEb,IAAKj/B,EAAI,EAAGO,EAAOuf,EAAM3f,OAAQH,EAAIO,IAAQP,EAC3Ci/B,EAAOnf,EAAM9f,GACbi/B,EAAK6L,MAAQnuB,KAAK89D,oBAAoBx7C,EAAK9gC,MAAO6B,EAAG8f,EAExD,CAMDq6D,kBAAAA,CAAmBh8E,GACjB,OAAiB,OAAVA,EAAiB8rC,KAAO9rC,EAAQwe,KAAKlX,MAAQkX,KAAKjX,IAAMiX,KAAKlX,IACrE,CAMDiF,gBAAAA,CAAiBvM,GACf,MAAMy8E,EAAUj+D,KAAK08D,SACfpiD,EAAMta,KAAKw9D,mBAAmBh8E,GACpC,OAAOwe,KAAK+1B,oBAAoBkoC,EAAQzzE,MAAQ8vB,GAAO2jD,EAAQ16C,OAChE,CAMDuqB,gBAAAA,CAAiBpiC,GACf,MAAMuyD,EAAUj+D,KAAK08D,SACfpiD,EAAMta,KAAKguC,mBAAmBtiC,GAASuyD,EAAQ16C,OAAS06C,EAAQxzE,IACtE,OAAOuV,KAAKlX,IAAMwxB,GAAOta,KAAKjX,IAAMiX,KAAKlX,IAC1C,CAODo1E,aAAAA,CAAc/vC,GACZ,MAAMgwC,EAAYn+D,KAAKpb,QAAQue,MACzBi7D,EAAiBp+D,KAAK0F,IAAI8F,YAAY2iB,GAAOnkB,MAC7CjgB,EAAQf,EAAUgX,KAAKs0B,eAAiB6pC,EAAU/zD,YAAc+zD,EAAUh0D,aAC1Ek0D,EAAcn3E,KAAK6I,IAAIhG,GACvBu0E,EAAcp3E,KAAK4H,IAAI/E,GACvBw0E,EAAev+D,KAAKytC,wBAAwB,GAAG3mD,KAErD,MAAO,CACLmM,EAAGmrE,EAAkBC,EAAgBE,EAAeD,EACpDjtE,EAAG+sE,EAAkBE,EAAgBC,EAAeF,EAEvD,CAODlB,iBAAAA,CAAkBqB,GAChB,MAAMxB,EAAWh9D,KAAKpb,QAAQo3E,KACxBO,EAAiBS,EAAST,eAG1Bz5D,EAASy5D,EAAeS,EAASjE,OAASwD,EAAe/B,YACzDiE,EAAez+D,KAAK89D,oBAAoBU,EAAa,EAAGtC,GAAoBl8D,KAAM,CAACw+D,GAAcx+D,KAAKy8D,YAAa35D,GACnHhc,EAAOkZ,KAAKk+D,cAAcO,GAG1B7C,EAAW10E,KAAKoB,MAAM0X,KAAKs0B,eAAiBt0B,KAAKgK,MAAQljB,EAAKmM,EAAI+M,KAAKmM,OAASrlB,EAAKuK,GAAK,EAChG,OAAOuqE,EAAW,EAAIA,EAAW,CAClC,CAKD+B,iBAAAA,GACE,IACIt6E,EAAGO,EADHq4E,EAAaj8D,KAAK0xB,OAAOvmB,MAAQ,GAGrC,GAAI8wD,EAAWz4E,OACb,OAAOy4E,EAGT,MAAM/yB,EAAQlpC,KAAKwnB,0BAEnB,GAAIxnB,KAAK28D,aAAezzB,EAAM1lD,OAC5B,OAAQwc,KAAK0xB,OAAOvmB,KAAO+9B,EAAM,GAAGxhB,WAAWsG,mBAAmBhuB,MAGpE,IAAK3c,EAAI,EAAGO,EAAOslD,EAAM1lD,OAAQH,EAAIO,IAAQP,EAC3C44E,EAAaA,EAAWpqC,OAAOqX,EAAM7lD,GAAGqkC,WAAWsG,mBAAmBhuB,OAGxE,OAAQA,KAAK0xB,OAAOvmB,KAAOnL,KAAK8e,UAAUm9C,EAC3C,CAKDc,kBAAAA,GACE,MAAMd,EAAaj8D,KAAK0xB,OAAO7E,QAAU,GACzC,IAAIxpC,EAAGO,EAEP,GAAIq4E,EAAWz4E,OACb,OAAOy4E,EAGT,MAAMpvC,EAAS7sB,KAAK8sB,YACpB,IAAKzpC,EAAI,EAAGO,EAAOipC,EAAOrpC,OAAQH,EAAIO,IAAQP,EAC5C44E,EAAW/1E,KAAKqmC,GAAMvsB,KAAM6sB,EAAOxpC,KAGrC,OAAQ2c,KAAK0xB,OAAO7E,OAAS7sB,KAAK28D,YAAcV,EAAaj8D,KAAK8e,UAAUm9C,EAC7E,CAMDn9C,SAAAA,CAAU9b,GAER,OAAO5W,GAAa4W,EAAO8uB,KAAKspC,IACjC,mGCxoBH,MAAMsD,EAAsB,QAErB,SAASC,EAAgBC,EAAsBp9E,GACjC,oBAARo9E,EACTA,EAAIp9E,GACKo9E,IACTA,EAAI15E,QAAU1D,EAElB,CAcO,SAASq9E,EAKdC,EACAC,GAEAD,EAAYjyC,OAASkyC,CACvB,CAEO,SAASC,EAKdF,EACAG,GACAC,IAAAA,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAeR,EAEf,MAAMS,EAA8C,GAEpDL,EAAYj6D,SAAWo6D,EAAa96E,KACjCi7E,IAEC,MAAMC,EAAiBP,EAAYj6D,SAASy6D,MACzCn1C,GACCA,EAAQ+0C,KAAkBE,EAAYF,KAI1C,OACGG,GACAD,EAAYj0D,OACbg0D,EAAcn7D,SAASq7D,IAKzBF,EAAcj5E,KAAKm5E,GAEnBz9E,OAAO8M,OAAO2wE,EAAgBD,GAEvBC,GAPE,IAAKD,EAOO,GAG3B,CAEO,SAASG,EAIdp0D,GAAuC+zD,IAAAA,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAeR,EACtD,MAAMc,EAA4C,CAChD3yC,OAAQ,GACRhoB,SAAU,IAMZ,OAHAg6D,EAAUW,EAAUr0D,EAAK0hB,QACzBmyC,EAAYQ,EAAUr0D,EAAKtG,SAAUq6D,GAE9BM,CACT,CCnFA,SAASC,EAKPA,EAaAb,GAbA,WACEzyD,EAAS,UACTnC,EAAQ,IAAG,OACX01D,GAAS,EAAK,aACdR,EAAY,KACZv9E,EAAI,KACJwpB,EAAI,QACJvmB,EAAO,QACP0hB,EAAU,GAAE,gBACZq5D,EAAe,WACfC,KACGtuD,GAXLuuD,EAiBA,MAAMC,GAAYC,EAAAA,EAAAA,QAA0B,MACtCC,GAAWD,EAAAA,EAAAA,UAEXE,EAAcA,KACbH,EAAU56E,UAEf86E,EAAS96E,QAAU,IAAIg7E,EAAAA,GAAQJ,EAAU56E,QAAS,CAChDvD,OACAwpB,KAAMo0D,EAAUp0D,EAAM+zD,GACtBt6E,QAASA,GAAW,IAAKA,GACzB0hB,YAGFq4D,EAAaC,EAAKoB,EAAS96E,SAAQ,EAG/Bi7E,EAAeA,KACnBxB,EAAaC,EAAK,MAEdoB,EAAS96E,UACX86E,EAAS96E,QAAQ44D,UACjBkiB,EAAS96E,QAAU,OA8CvB,OA1CAk7E,EAAAA,EAAAA,YAAU,MACHV,GAAUM,EAAS96E,SAAWN,GDvChC,SAILwe,EAAoCi9D,GACpC,MAAMz7E,EAAUwe,EAAMxe,QAElBA,GAAWy7E,GACbz+E,OAAO8M,OAAO9J,EAASy7E,EAE3B,CC8BMC,CAAWN,EAAS96E,QAASN,KAE9B,CAAC86E,EAAQ96E,KAEZw7E,EAAAA,EAAAA,YAAU,MACHV,GAAUM,EAAS96E,SACtB25E,EAAUmB,EAAS96E,QAAQ+/B,OAAO9Z,KAAMA,EAAK0hB,UAE9C,CAAC6yC,EAAQv0D,EAAK0hB,UAEjBuzC,EAAAA,EAAAA,YAAU,MACHV,GAAUM,EAAS96E,SAAWimB,EAAKtG,UACtCm6D,EAAYgB,EAAS96E,QAAQ+/B,OAAO9Z,KAAMA,EAAKtG,SAAUq6D,KAE1D,CAACQ,EAAQv0D,EAAKtG,YAEjBu7D,EAAAA,EAAAA,YAAU,KACHJ,EAAS96E,UAEVw6E,GACFS,IACAjmB,WAAW+lB,IAEXD,EAAS96E,QAAQq/B,OAAOq7C,MAEzB,CAACF,EAAQ96E,EAASumB,EAAK0hB,OAAQ1hB,EAAKtG,SAAU+6D,KAEjDQ,EAAAA,EAAAA,YAAU,KACHJ,EAAS96E,UAEdi7E,IACAjmB,WAAW+lB,GAAAA,GACV,CAACt+E,KAEJy+E,EAAAA,EAAAA,YAAU,KACRH,IAEO,IAAME,MACZ,IAGDI,EAAAA,cAACz0D,SAAAA,OAAAA,OAAAA,CAAO8yD,IAAKkB,EAAWU,KAAK,MAAMr0D,OAAQA,EAAQnC,MAAOA,GAAWsH,GAClEquD,EAGP,CAEO,MAAM7mB,GAA6B2nB,EAAAA,EAAAA,YACxChB,GCzFF,SAASiB,EACP/+E,EACAg/E,GAIA,OAFAT,EAAAA,GAAQnuB,SAAS4uB,IAEVF,EAAAA,EAAAA,aACJ,CAAAnvD,EAAOstD,IAAQ2B,EAAAA,cAACznB,EAAUxnC,OAAAA,OAAAA,CAAAA,EAAAA,EAAAA,CAAOstD,IAAKA,EAAKj9E,KAAMA,MAEtD,OAEai/E,EAAuBF,EAAiB,OAAQvmC,EAAAA,IAEhD0mC,EAAsBH,EAAiB,MAAO/sC,EAAAA,IAI9CmtC,EAA2BJ,EACtC,WACA9pC,EAAAA,IAaWmqC,EAAsBL,EAAiB,MAAO5lC,EAAAA,IAE9CkmC,EAA0BN,EACrC,UACA3lC,EAAAA","sources":["../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/node_modules/.pnpm/@kurkle+color@0.2.1/node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.js","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","../node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","../node_modules/chart.js/src/plugins/plugin.filler/index.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ActiveDataPoint, ChartEvent} from '../../types';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../../types/geometric';\nimport {isFinite as isFiniteNumber} from './helpers.core';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import {type ChartMeta, type PointElement} from '../../types';\n\nimport {_limitValue} from './helpers.math';\nimport {_lookupByKey} from './helpers.collection';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply<any, TArgs, void>(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import colorLib, {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : colorLib(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : colorLib(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {log10} from '../helpers/helpers.math';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core';\nimport {applyAnimationsDefaults} from './core.animations.defaults';\nimport {applyLayoutsDefaults} from './core.layouts.defaults';\nimport {applyScaleDefaults} from './core.scale.defaults';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {isArray, isNullOrUndef} from './helpers.core';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } canvas.Chart\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core';\nimport {Point, toFontString} from './helpers.canvas';\nimport type {ChartArea, FontSpec} from '../../types';\nimport type {TRBL, TRBLCorners} from '../../types/geometric';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<P extends T, T extends object>(parentContext: P, context: T): P extends null ? T : P & T {\n  return Object.assign(Object.create(parentContext), context);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math';\nimport {_isPointInArea} from './helpers.canvas';\nimport {ChartArea} from '../../types';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import {ChartArea, Scale} from '../../types';\nimport Chart from '../core/core.controller';\nimport {ChartEvent} from '../types';\nimport {INFINITY} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point} from '../../types/geometric';\nimport type {SplinePoint} from './helpers.curve';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math';\nimport {createContext} from './helpers.options';\n\n/**\n * @typedef { import(\"../elements/element.line\").default } LineElement\n * @typedef { import(\"../elements/element.point\").default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import(\"./core.animation\").default } Animation\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing';\nimport {resolve} from '../helpers/helpers.options';\nimport {color as helpersColor} from '../helpers/helpers.color';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator';\nimport Animation from './core.animation';\nimport defaults from './core.defaults';\nimport {isArray, isObject} from '../helpers/helpers.core';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations';\nimport defaults from './core.defaults';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection';\nimport {createContext, sign} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"./core.scale\").default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DoughnutController from './controller.doughnut';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ChartOptions} from '../../types';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection';\nimport {getRelativePosition} from '../helpers/helpers.dom';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math';\nimport {_isPointInArea} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import(\"./core.element\").default}} InteractionItem\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core';\nimport {toPadding} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import(\"../core/core.config\").default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom';\nimport {throttled} from '../helpers/helpers.extras';\nimport {isNullOrUndef} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../../types/basic';\nimport type {Point} from '../../types/geometric';\nimport type {Animation} from '../../types/animation';\nimport {isNumber} from '../helpers/helpers.math';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\nimport {_factorize} from '../helpers/helpers.math';\n\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options';\nimport {autoSkip} from './core.scale.autoskip';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers';\nimport defaults, {overrides} from './core.defaults';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController';\nimport Element from './core.element';\nimport Scale from './core.scale';\nimport TypedRegistry from './core.typedRegistry';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../plugins/plugin.tooltip\").default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import(\"./core.config\").default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator';\nimport defaults, {overrides} from './core.defaults';\nimport Interaction from './core.interaction';\nimport layouts from './core.layouts';\nimport {_detectPlatform} from '../platform';\nimport PluginService from './core.plugins';\nimport registry from './core.registry';\nimport Config, {determineAxis, getIndexAxis} from './core.config';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import('../../types').ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../../types').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../../types').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers';\nimport BasePlatform from './platform.base';\nimport BasicPlatform from './platform.basic';\nimport DomPlatform from './platform.dom';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math';\nimport {_readValueToProps} from '../helpers/helpers.options';\nimport type {ArcOptions, Point} from '../../types';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve';\nimport {valueOrDefault} from '../helpers';\n\n/**\n * @typedef { import(\"./element.point\").default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas';\nimport {\n  type CartesianParsedData,\n  type ChartArea,\n  type Point,\n  type PointHoverOptions,\n  type PointOptions,\n} from '../../types';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element';\nimport {isObject, _isBetween, _limitValue} from '../helpers';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {isArray} from '../../helpers';\nimport {_pointsFromSegments} from './filler.segment';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core';\n\n/**\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.line').default } LineElement\n * @typedef { import('../../../types').FillTarget } FillTarget\n * @typedef { import('../../../types').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {_isBetween} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\nimport {_getTargetPixel, _getTargetValue} from './filler.options';\nimport {_buildStackLine} from './filler.target.stack';\nimport {simpleArc} from './simpleArc';\n\n/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment';\nimport {_getTarget} from './filler.target';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line';\nimport {_drawfill} from './filler.drawing';\nimport {_shouldApplyFill} from './filler.helper';\nimport {_decodeFill, _resolveTarget} from './filler.options';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults';\nimport Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {toTRBLCorners} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {PI, isArray, toPadding, toFont} from '../helpers';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras';\nimport {renderText} from '../helpers/helpers.canvas';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title';\nimport layouts from '../core/core.layouts';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations';\nimport Element from '../core/core.element';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math';\nimport {createContext, drawPoint} from '../helpers';\n\n/**\n * @typedef { import(\"../platform/platform.base\").Chart } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").ActiveElement } ActiveElement\n * @typedef { import(\"../core/core.interaction\").InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {formatNumber} from '../helpers/helpers.intl';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {toRadians} from '../helpers';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection';\n\n/**\n * @typedef { import(\"../core/core.adapters\").TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import(\"../core/core.adapters\").DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, TypedChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...props\n  }: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  type TypedChartJS = ChartJS<TType, TData, TLabel>;\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<TypedChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas ref={canvasRef} role='img' height={height} width={width} {...props}>\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart: TypedChartComponent = forwardRef(\n  ChartComponent\n) as TypedChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T, true>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","resolveObjectKey","obj","resolver","parts","split","tmp","part","push","_splitKey","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","isNumber","n","isNaN","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","proto","fromObject","input","functionParse","rgbParse","Color","constructor","ret","hexParse","this","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","index_esm","isPatternOrGradient","colorLib","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","_scriptable","startsWith","_indexable","_fallback","defaults","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","factor","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","animator","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","ScatterController","registry","getElement","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_fullLoop","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_ref5","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","getPointPositionForValue","_getTargetValue","getDistanceFromCenterForValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","titleBlock","createTitle","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","param","canvasRef","useRef","chartRef","renderChart","ChartJS","destroyChart","useEffect","nextOptions","setOptions","React","role","forwardRef","createTypedChart","registerables","Line","Bar","Doughnut","Pie","Scatter"],"sourceRoot":""}