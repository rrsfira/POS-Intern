{"version":3,"file":"static/js/1406.7264c34c.chunk.js","mappings":"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","sources":["features/leads/index.js","pages/protected/Leads.js"],"sourcesContent":["import moment from \"moment\"\r\nimport { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport TitleCard from \"../../components/Cards/TitleCard\"\r\nimport { openModal } from \"../common/modalSlice\"\r\nimport { deleteLead, getLeadsContent } from \"./leadSlice\"\r\nimport { CONFIRMATION_MODAL_CLOSE_TYPES, MODAL_BODY_TYPES } from '../../utils/globalConstantUtil'\r\nimport TrashIcon from '@heroicons/react/24/outline/TrashIcon'\r\nimport { showNotification } from '../common/headerSlice'\r\n\r\nconst TopSideButtons = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const openAddNewLeadModal = () => {\r\n        dispatch(openModal({title : \"Add New Lead\", bodyType : MODAL_BODY_TYPES.LEAD_ADD_NEW}))\r\n    }\r\n\r\n    return(\r\n        <div className=\"inline-block float-right\">\r\n            <button className=\"btn px-6 btn-sm normal-case btn-primary\" onClick={() => openAddNewLeadModal()}>Add New</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Leads(){\r\n\r\n    const {leads } = useSelector(state => state.lead)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getLeadsContent())\r\n    }, [])\r\n\r\n    \r\n\r\n    const getDummyStatus = (index) => {\r\n        if(index % 5 === 0)return <div className=\"badge\">Not Interested</div>\r\n        else if(index % 5 === 1)return <div className=\"badge badge-primary\">In Progress</div>\r\n        else if(index % 5 === 2)return <div className=\"badge badge-secondary\">Sold</div>\r\n        else if(index % 5 === 3)return <div className=\"badge badge-accent\">Need Followup</div>\r\n        else return <div className=\"badge badge-ghost\">Open</div>\r\n    }\r\n\r\n    const deleteCurrentLead = (index) => {\r\n        dispatch(openModal({title : \"Confirmation\", bodyType : MODAL_BODY_TYPES.CONFIRMATION, \r\n        extraObject : { message : `Are you sure you want to delete this lead?`, type : CONFIRMATION_MODAL_CLOSE_TYPES.LEAD_DELETE, index}}))\r\n    }\r\n\r\n    return(\r\n        <>\r\n            \r\n            <TitleCard title=\"Current Leads\" topMargin=\"mt-2\" TopSideButtons={<TopSideButtons />}>\r\n\r\n                {/* Leads List in table format loaded from slice after api call */}\r\n            <div className=\"overflow-x-auto w-full\">\r\n                <table className=\"table w-full\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Email Id</th>\r\n                        <th>Created At</th>\r\n                        <th>Status</th>\r\n                        <th>Assigned To</th>\r\n                        <th></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            leads.map((l, k) => {\r\n                                return(\r\n                                    <tr key={k}>\r\n                                    <td>\r\n                                        <div className=\"flex items-center space-x-3\">\r\n                                            <div className=\"avatar\">\r\n                                                <div className=\"mask mask-squircle w-12 h-12\">\r\n                                                    <img src={l.avatar} alt=\"Avatar\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div>\r\n                                                <div className=\"font-bold\">{l.first_name}</div>\r\n                                                <div className=\"text-sm opacity-50\">{l.last_name}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>{l.email}</td>\r\n                                    <td>{moment(new Date()).add(-5*(k+2), 'days').format(\"DD MMM YY\")}</td>\r\n                                    <td>{getDummyStatus(k)}</td>\r\n                                    <td>{l.last_name}</td>\r\n                                    <td><button className=\"btn btn-square btn-ghost\" onClick={() => deleteCurrentLead(k)}><TrashIcon className=\"w-5\"/></button></td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            </TitleCard>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Leads","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport Leads from '../../features/leads'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Leads\"}))\r\n      }, [])\r\n\r\n\r\n    return(\r\n        <Leads />\r\n    )\r\n}\r\n\r\nexport default InternalPage"],"names":["TopSideButtons","dispatch","useDispatch","_jsx","className","children","onClick","openModal","title","bodyType","MODAL_BODY_TYPES","LEAD_ADD_NEW","leads","useSelector","state","lead","useEffect","getLeadsContent","_Fragment","TitleCard","topMargin","_jsxs","map","l","k","src","avatar","alt","first_name","last_name","email","moment","Date","add","format","index","CONFIRMATION","extraObject","message","type","CONFIRMATION_MODAL_CLOSE_TYPES","LEAD_DELETE","deleteCurrentLead","TrashIcon","setPageTitle","Leads"],"sourceRoot":""}