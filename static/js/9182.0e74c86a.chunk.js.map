{"version":3,"file":"static/js/9182.0e74c86a.chunk.js","mappings":"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","sources":["components/PageControl/PageControl.js","features/report/customerreport/reportcustomer/component/Search.js","features/report/customerreport/reportcustomer/component/PDF.js","features/report/customerreport/reportcustomer/component/customerStats.js","features/report/customerreport/reportcustomer/index.js","features/report/customerreport/index.js","pages/protected/CustomerReport.js","../node_modules/@heroicons/react/24/outline/esm/CreditCardIcon.js","../node_modules/@heroicons/react/24/outline/esm/InboxArrowDownIcon.js","../node_modules/@heroicons/react/24/outline/esm/MagnifyingGlassIcon.js","../node_modules/@heroicons/react/24/outline/esm/PresentationChartBarIcon.js","../node_modules/@heroicons/react/24/outline/esm/UserGroupIcon.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction PageControl() {\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const totalItems = 100;\r\n\r\n  const handleRowsPerPageChange = (e) => {\r\n    setRowsPerPage(parseInt(e.target.value, 10));\r\n    setCurrentPage(1); // Reset ke halaman pertama ketika rows per page berubah\r\n  };\r\n\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage < 1 || newPage > Math.ceil(totalItems / rowsPerPage)) return;\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  const startItem = (currentPage - 1) * rowsPerPage + 1;\r\n  const endItem = Math.min(currentPage * rowsPerPage, totalItems);\r\n\r\n  return (\r\n    <div className=\"flex flex-wrap justify-between items-center mt-4 gap-4\">\r\n      {/* Rows Per Page */}\r\n      <div className=\"w-full sm:w-auto\">\r\n        <span className=\"flex items-center gap-2 text-[10px] sm:text-[14px]\">\r\n          Rows Per Page:\r\n          <select\r\n            value={rowsPerPage}\r\n            onChange={handleRowsPerPageChange}\r\n            className=\"select select-bordered select-sm w-20 text-[10px] sm:text-[14px]\"\r\n          >\r\n            {[10, 20, 30, 40].map((rows) => (\r\n              <option key={rows} value={rows}>\r\n                {rows}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </span>\r\n      </div>\r\n\r\n      {/* Pagination */}\r\n      <div className=\"w-full sm:w-auto flex justify-between sm:justify-center items-center gap-4\">\r\n        <span className=\"text-[10px] sm:text-[14px]\">\r\n          {startItem} - {endItem} of {totalItems}\r\n        </span>\r\n        <div className=\"flex space-x-2\">\r\n          <button\r\n            onClick={() => handlePageChange(currentPage - 1)}\r\n            disabled={currentPage === 1}\r\n            className=\"btn btn-outline btn-sm text-[10px] sm:text-[14px]\"\r\n          >\r\n            {\"<\"}\r\n          </button>\r\n          <button\r\n            onClick={() => handlePageChange(currentPage + 1)}\r\n            disabled={currentPage === Math.ceil(totalItems / rowsPerPage)}\r\n            className=\"btn btn-outline btn-sm text-[10px] sm:text-[14px]\"\r\n          >\r\n            {\">\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageControl;\r\n","import React, { useState } from \"react\";\r\nimport {MagnifyingGlassIcon} from \"@heroicons/react/24/outline\";\r\nfunction Search(){\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const handleSearch = (e) => setSearchTerm(e.target.value);\r\n\r\n    return(\r\n        <div className=\"relative w-full sm:w-64\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          value={searchTerm}\r\n          onChange={handleSearch}\r\n          className=\"input input-bordered w-full pl-10 h-10\"\r\n        />\r\n        <MagnifyingGlassIcon className=\"w-5 h-5 text-gray-500 absolute top-2.5 left-3\" />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import {DocumentTextIcon} from \"@heroicons/react/24/outline\";\r\nfunction PDF() {\r\n  const handleExportPDF = () => console.log(\"Export to PDF clicked\");\r\n  return (\r\n    <button\r\n      onClick={handleExportPDF}\r\n      className=\"btn btn-outline btn-error flex items-center text-sm sm:w-auto w-full\"\r\n    >\r\n      <DocumentTextIcon className=\"w-5 h-5 mr-1\" />\r\n      PDF\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default PDF;\r\n","function CustomerStats({title, icon, value, description, colorIndex}){\r\n\r\n    const COLORS = [\"primary\", \"primary\"]\r\n\r\n    const getDescStyle = () => {\r\n        if(description.includes(\"↗︎\"))return \"font-bold text-green-700 dark:text-green-300\"\r\n        else if(description.includes(\"↙\"))return \"font-bold text-rose-500 dark:text-red-400\"\r\n        else return \"\"\r\n    }\r\n\r\n    return(\r\n        <div className=\"stats shadow\">\r\n            <div className=\"stat\">\r\n                <div className={`stat-figure dark:text-slate-300 text-${COLORS[colorIndex%2]}`}>{icon}</div>\r\n                <div className=\"stat-title dark:text-slate-300\">{title}</div>\r\n                <div className={`stat-value dark:text-slate-300 text-${COLORS[colorIndex%2]}`}>{value}</div>\r\n                <div className={\"stat-desc  \" + getDescStyle()}>{description}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerStats","import React, { useState } from \"react\";\r\nimport {\r\n  CreditCardIcon,\r\n  InboxArrowDownIcon,\r\n  UserGroupIcon,\r\n  PresentationChartBarIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport Search from \"./component/Search\";\r\nimport PDF from \"./component/PDF\";\r\nimport PageControl from \"../../../../components/PageControl/PageControl\";\r\nimport CustomerStats from \"./component/customerStats\";\r\n\r\nfunction ReportPageCustomer() {\r\n  const [activeTab, setActiveTab] = useState(\"Sales\"); // State untuk tab aktif\r\n\r\n  const tabs = [\r\n    { id: \"Sales\", label: \"Sales\" },\r\n    { id: \"Quotations\", label: \"Quotations\" },\r\n    { id: \"Return\", label: \"Return\" },\r\n    { id: \"Sales Payments\", label: \"Sales Payments\" },\r\n  ];\r\n\r\n  const statsData = [\r\n    {\r\n      title: \"Total Paid\",\r\n      value: \"$22,110\",\r\n      icon: (\r\n        <button className=\"btn btn-circle bg-primary text-white\">\r\n          <CreditCardIcon className=\"w-6 h-6\" />\r\n        </button>\r\n      ),\r\n      description: \"↗︎ 2300 (22%)\",\r\n    },\r\n    {\r\n      title: \"Sales\",\r\n      value: \"$7,545\",\r\n      icon: (\r\n        <button className=\"btn btn-circle bg-primary text-white\">\r\n          <InboxArrowDownIcon className=\"w-6 h-6\" />\r\n        </button>\r\n      ),\r\n      description: \"Current month\",\r\n    },\r\n    {\r\n      title: \"Due\",\r\n      value: \"713\",\r\n      icon: (\r\n        <button className=\"btn btn-circle bg-primary text-white\">\r\n          <UserGroupIcon className=\"w-6 h-6\" />\r\n        </button>\r\n      ),\r\n      description: \"50 in hot leads\",\r\n    },\r\n    {\r\n      title: \"Total Amount\",\r\n      value: \"$31,111\",\r\n      icon: (\r\n        <button className=\"btn btn-circle bg-primary text-white\">\r\n          <PresentationChartBarIcon className=\"w-6 h-6\" />\r\n        </button>\r\n      ),\r\n      description: \"↙ 300 (18%)\",\r\n    },\r\n  ];\r\n\r\n\r\n  const renderContent = () => {\r\n    switch (activeTab) {\r\n      case \"Sales\":\r\n        return (\r\n          <div>\r\n            {/* Toolbar */}\r\n            <div className=\"flex flex-col sm:flex-row items-center sm:justify-between gap-4 mb-6\">\r\n              <Search />\r\n              <div className=\"flex sm:flex-row flex-col gap-2 sm:gap-4 w-full sm:w-auto items-center sm:justify-end\">\r\n                <PDF />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Tabel */}\r\n            <div className=\"overflow-x-auto mt-6\">\r\n              <table className=\"min-w-full table-auto border-collapse\">\r\n                <thead className=\"bg-base-100\">\r\n                  <tr>\r\n                    {[\r\n                      \"Reference\",\r\n                      \"Customer\",\r\n                      \"Warehouse\",\r\n                      \"Grand Total\",\r\n                      \"Paid\",\r\n                      \"Due\",\r\n                      \"Status\",\r\n                      \"Payment Status\",\r\n                      \"Shipping Status\",\r\n                    ].map((header, i) => (\r\n                      <th\r\n                        key={i}\r\n                        className=\"border-b py-3 px-4 text-left text-sm font-semibold bg-base-100\"\r\n                      >\r\n                        {header}\r\n                      </th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {/* Replace with dynamic data */}\r\n                  <tr className=\"hover:bg-gray-50\">\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">SL_1117</td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">\r\n                      Petter Kenzo\r\n                    </td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">\r\n                      Warehouse 1\r\n                    </td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">27.00</td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">0.00</td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">0.00</td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">\r\n                      <span className=\"px-2 py-1 text-[#E98718] border border-[#E98718] rounded-md text-xs\">\r\n                        Ordered\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">\r\n                      <span className=\"px-2 py-1 text-[#E98718] border border-[#E98718] rounded-md text-xs\">\r\n                        Unpaid\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">\r\n                      <span className=\"px-2 py-1 text-[#4338CA] border border-[#4338CA] rounded-md text-xs\">\r\n                        Packed\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <PageControl />\r\n          </div>\r\n        );\r\n      case \"Quotations\":\r\n        return (\r\n          <div>\r\n            {/* Toolbar */}\r\n            <div className=\"flex flex-col sm:flex-row items-center sm:justify-between gap-4 mb-6\">\r\n              <Search />\r\n              <div className=\"flex sm:flex-row flex-col gap-2 sm:gap-4 w-full sm:w-auto items-center sm:justify-end\">\r\n                <PDF />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Tabel */}\r\n            <div className=\"overflow-x-auto mt-6\">\r\n              <table className=\"min-w-full table-auto border-collapse\">\r\n                <thead className=\"bg-base-100\">\r\n                  <tr>\r\n                    {[\r\n                      \"Date\",\r\n                      \"Reference\",\r\n                      \"Customer\",\r\n                      \"Warehouse\",\r\n                      \"Grand Total\",\r\n                      \"Status\",\r\n                    ].map((header, i) => (\r\n                      <th\r\n                        key={i}\r\n                        className=\"border-b py-3 px-4 text-left text-sm font-semibold bg-base-100\"\r\n                      >\r\n                        {header}\r\n                      </th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {/* Replace with dynamic data */}\r\n                  <tr className=\"hover:bg-gray-50\">\r\n                  <td className=\"py-3 px-4 text-sm bg-base-100\">2024-11-06</td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">SL_1117</td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">\r\n                      Petter Kenzo\r\n                    </td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">\r\n                      Warehouse 1\r\n                    </td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">27.00</td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">\r\n                      <span className=\"px-2 py-1 text-[#38CA58] border border-[#38CA58] rounded-md text-xs\">\r\n                        Sent\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <PageControl />\r\n          </div>\r\n        );\r\n      case \"Return\":\r\n        return (\r\n          <div>\r\n            {/* Toolbar */}\r\n            <div className=\"flex flex-col sm:flex-row items-center sm:justify-between gap-4 mb-6\">\r\n              <Search />\r\n              <div className=\"flex sm:flex-row flex-col gap-2 sm:gap-4 w-full sm:w-auto items-center sm:justify-end\">\r\n                <PDF />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Tabel */}\r\n            <div className=\"overflow-x-auto mt-6\">\r\n              <table className=\"min-w-full table-auto border-collapse\">\r\n                <thead className=\"bg-base-100\">\r\n                  <tr>\r\n                    {[\r\n                      \"Reference\",\r\n                      \"Customer\",\r\n                      \"Sale Ref\",\r\n                      \"Warehouse\",\r\n                      \"Grand Total\",\r\n                      \"Paid\",\r\n                      \"Due\",\r\n                      \"Status\",\r\n                      \"Payment Status\",\r\n                    ].map((header, i) => (\r\n                      <th\r\n                        key={i}\r\n                        className=\"border-b py-3 px-4 text-left text-sm font-semibold bg-base-100\"\r\n                      >\r\n                        {header}\r\n                      </th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {/* Replace with dynamic data */}\r\n                  <tr className=\"hover:bg-gray-50\">\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">SL_1117</td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">\r\n                      Petter Kenzo\r\n                    </td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\"></td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">\r\n                      Warehouse 1\r\n                    </td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">27.00</td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">0.00</td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">0.00</td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">\r\n                      <span className=\"px-2 py-1 text-[#E98718] border border-[#E98718] rounded-md text-xs\">\r\n                        Ordered\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">\r\n                      <span className=\"px-2 py-1 text-[#E98718] border border-[#E98718] rounded-md text-xs\">\r\n                        Unpaid\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <PageControl />\r\n          </div>\r\n        );\r\n      case \"Sales Payments\":\r\n        return (\r\n          <div>\r\n            {/* Toolbar */}\r\n            <div className=\"flex flex-col sm:flex-row items-center sm:justify-between gap-4 mb-6\">\r\n              <Search />\r\n              <div className=\"flex sm:flex-row flex-col gap-2 sm:gap-4 w-full sm:w-auto items-center sm:justify-end\">\r\n                <PDF />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Tabel */}\r\n            <div className=\"overflow-x-auto mt-6\">\r\n              <table className=\"min-w-full table-auto border-collapse\">\r\n                <thead className=\"bg-base-100\">\r\n                  <tr>\r\n                    {[\r\n                      \"Date\",\r\n                      \"Reference\",\r\n                      \"Sale\",\r\n                      \"Paid by\",\r\n                      \"Amount\",\r\n                    ].map((header, i) => (\r\n                      <th\r\n                        key={i}\r\n                        className=\"border-b py-3 px-4 text-left text-sm font-semibold bg-base-100\"\r\n                      >\r\n                        {header}\r\n                      </th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {/* Replace with dynamic data */}\r\n                  <tr className=\"hover:bg-gray-50\">\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">2024-11-20</td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">\r\n                     SL_1114\r\n                    </td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">\r\n                      1\r\n                    </td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">Cash</td>\r\n                    <td className=\"py-3 px-4 text-sm bg-base-100\">27.00</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <PageControl />\r\n          </div>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center h-screen pt-10 px-4\">\r\n      <div className=\"w-full max-w-6xl space-y-6\">\r\n       {/* Summary Cards */}\r\n       <div className=\"grid lg:grid-cols-4 mt-2 md:grid-cols-2 grid-cols-1 gap-6\">\r\n          {statsData.map((d, k) => {\r\n            return <CustomerStats key={k} {...d} colorIndex={k} />;\r\n          })}\r\n        </div>\r\n        {/* Tabs */}\r\n        <div className=\"w-full max-w-6xl p-6 sm:p-10 bg-base-100 rounded-lg shadow-md\">\r\n          <div className=\"flex flex-wrap gap-2 sm:gap-1 mb-4 border-b-2 border-gray-300\">\r\n            {tabs.map((tab) => (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => setActiveTab(tab.id)}\r\n                className={`p-2 px-4 rounded-t-lg ${\r\n                  activeTab === tab.id\r\n                    ? \"bg-white border-x border-t border-gray-300 -mb-[2px] text-purple-500 font-semibold\"\r\n                    : \"bg-gray-100 text-gray-500 border-transparent\"\r\n                }`}\r\n              >\r\n                {tab.label}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Konten Tab */}\r\n          <div>{renderContent()}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReportPageCustomer;\r\n","import { useState } from \"react\";\r\nimport TitleCard from \"../../../components/Cards/TitleCard\";\r\nimport PageControl from \"../../../components/PageControl/PageControl\";\r\nimport SearchBar from \"../../../components/Input/SearchBar\";\r\nimport ReportPageCustomer from \"./reportcustomer/index\";\r\nimport { DocumentArrowDownIcon, EyeIcon } from \"@heroicons/react/24/outline\";\r\n\r\nconst CUSTOMER = [\r\n  {\r\n    Name: \"Petter Kenzo\",\r\n    Phone: \"08123456789\",\r\n    Totalsales: \"3\",\r\n    Amount: \"18.00\",\r\n    Paid: \"18.00\",\r\n    TotalSaleDue: \"20.0\",\r\n    TotalSellReturnDue: 0.0,\r\n  },\r\n];\r\n\r\nfunction CustomerReport() {\r\n  const [customerr] = useState(CUSTOMER);\r\n\r\n  const handlePrint = (type) => {\r\n    console.log(`Exporting ${type} PDF`);\r\n    window.print(); // Placeholder for exporting PDF\r\n  };\r\n\r\n  const [isReportPageStock, setIsReportPageCustomer] = useState(false); // Menentukan apakah menampilkan halaman ReportPage\r\n  const navigateToReportPageCustomer = () => setIsReportPageCustomer(true); // Navigasi ke ReportPage\r\n\r\n  if (isReportPageStock) {\r\n    return <ReportPageCustomer />; // Tampilkan ReportPage jika state isReportPage true\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center h-screen pt-10 px-4\">\r\n      <TitleCard title=\"Customer Report\" topMargin=\"mt-2\">\r\n        <div className=\"flex w-full items-center justify-between flex-wrap\">\r\n          {/* Search Bar */}\r\n          <div className=\"flex-grow sm:flex-grow-0 mr-4\">\r\n            <SearchBar className=\"input input-bordered h-10 w-full sm:w-96\" />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Table */}\r\n        <div className=\"overflow-x-auto mt-4\">\r\n          <table className=\"table w-full\">\r\n            <thead>\r\n              <tr>\r\n                <th>Customer Name</th>\r\n                <th>Phone</th>\r\n                <th>Total Sales</th>\r\n                <th>Amount</th>\r\n                <th>Paid</th>\r\n                <th>Total Sale Due</th>\r\n                <th>Total Sell Return Due</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {customerr.map((customer, index) => (\r\n                <tr key={index}>\r\n                  <td>{customer.Name}</td>\r\n                  <td>{customer.Phone}</td>\r\n                  <td>{customer.Totalsales}</td>\r\n                  <td>{customer.Amount}</td>\r\n                  <td>{customer.Paid}</td>\r\n                  <td>{customer.TotalSaleDue}</td>\r\n                  <td>{customer.TotalSellReturnDue}</td>\r\n                  <td>\r\n                    {/* Buttons Container */}\r\n                    <div className=\"flex space-x-2\">\r\n                      {/* PDF Button */}\r\n                      <button\r\n                        onClick={() => handlePrint(\"PDF\")}\r\n                        className=\"p-2 bg-base-100 rounded\"\r\n                      >\r\n                        <DocumentArrowDownIcon className=\"w-5 h-5 text-[#F62626]\" />\r\n                      </button>\r\n                      {/* View Button */}\r\n                      <button\r\n                        className=\"p-2 bg-base-100 rounded\"\r\n                        onClick={navigateToReportPageCustomer}\r\n                      >\r\n                        <EyeIcon className=\"w-5 h-5 text-[#4880FF]\" />\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <PageControl />\r\n      </TitleCard>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerReport;\r\n","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport CustomerReport from '../../features/report/customerreport'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Report | Customer Report |\"}))\r\n      }, [])\r\n\r\n\r\n    return(\r\n        < CustomerReport />\r\n    )\r\n}\r\n\r\nexport default InternalPage","import * as React from \"react\";\n\nfunction CreditCardIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 8.25h19.5M2.25 9h19.5m-16.5 5.25h6m-6 2.25h3m-3.75 3h15a2.25 2.25 0 002.25-2.25V6.75A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25v10.5A2.25 2.25 0 004.5 19.5z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(CreditCardIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction InboxArrowDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 3.75H6.912a2.25 2.25 0 00-2.15 1.588L2.35 13.177a2.25 2.25 0 00-.1.661V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18v-4.162c0-.224-.034-.447-.1-.661L19.24 5.338a2.25 2.25 0 00-2.15-1.588H15M2.25 13.5h3.86a2.25 2.25 0 012.012 1.244l.256.512a2.25 2.25 0 002.013 1.244h3.218a2.25 2.25 0 002.013-1.244l.256-.512a2.25 2.25 0 012.013-1.244h3.859M12 3v8.25m0 0l-3-3m3 3l3-3\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(InboxArrowDownIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction MagnifyingGlassIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(MagnifyingGlassIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction PresentationChartBarIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3.75 3v11.25A2.25 2.25 0 006 16.5h2.25M3.75 3h-1.5m1.5 0h16.5m0 0h1.5m-1.5 0v11.25A2.25 2.25 0 0118 16.5h-2.25m-7.5 0h7.5m-7.5 0l-1 3m8.5-3l1 3m0 0l.5 1.5m-.5-1.5h-9.5m0 0l-.5 1.5M9 11.25v1.5M12 9v3.75m3-6v6\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(PresentationChartBarIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction UserGroupIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M18 18.72a9.094 9.094 0 003.741-.479 3 3 0 00-4.682-2.72m.94 3.198l.001.031c0 .225-.012.447-.037.666A11.944 11.944 0 0112 21c-2.17 0-4.207-.576-5.963-1.584A6.062 6.062 0 016 18.719m12 0a5.971 5.971 0 00-.941-3.197m0 0A5.995 5.995 0 0012 12.75a5.995 5.995 0 00-5.058 2.772m0 0a3 3 0 00-4.681 2.72 8.986 8.986 0 003.74.477m.94-3.197a5.971 5.971 0 00-.94 3.197M15 6.75a3 3 0 11-6 0 3 3 0 016 0zm6 3a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0zm-13.5 0a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(UserGroupIcon);\nexport default ForwardRef;"],"names":["rowsPerPage","setRowsPerPage","useState","currentPage","setCurrentPage","totalItems","handlePageChange","newPage","Math","ceil","startItem","endItem","min","_jsxs","className","children","_jsx","value","onChange","e","parseInt","target","map","rows","onClick","disabled","searchTerm","setSearchTerm","type","placeholder","MagnifyingGlassIcon","handleExportPDF","console","log","DocumentTextIcon","_ref","title","icon","description","colorIndex","COLORS","includes","activeTab","setActiveTab","statsData","CreditCardIcon","InboxArrowDownIcon","UserGroupIcon","PresentationChartBarIcon","d","k","CustomerStats","id","label","tab","renderContent","Search","PDF","header","i","PageControl","CUSTOMER","Name","Phone","Totalsales","Amount","Paid","TotalSaleDue","TotalSellReturnDue","customerr","isReportPageStock","setIsReportPageCustomer","navigateToReportPageCustomer","ReportPageCustomer","TitleCard","topMargin","SearchBar","customer","index","handlePrint","window","print","DocumentArrowDownIcon","EyeIcon","dispatch","useDispatch","useEffect","setPageTitle","CustomerReport","React","svgRef","titleId","props","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin"],"sourceRoot":""}