{"version":3,"file":"static/js/5202.b4be3ff2.chunk.js","mappings":"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","sources":["features/product/createProduct/index.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport InputText from \"../../../components/Input/InputText\";\r\nimport TextAreaInput from \"../../../components/Input/TextAreaInput\";\r\nimport TitleCard from \"../../../components/Cards/TitleCard\";\r\nimport { showNotification } from \"../../common/headerSlice\";\r\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\"; // Impor Barcode Scanner\r\n\r\nfunction CreateProduct() {\r\n  const dispatch = useDispatch();\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    barcode: \"\",\r\n    barcodeSymbology: \"\",\r\n    category: \"\",\r\n    brand: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    cost: \"\",\r\n    stockAlert: \"\",\r\n    unit: \"\",\r\n    image: null,\r\n  });\r\n\r\n  const [scanning, setScanning] = useState(false); // Status untuk scanner\r\n\r\n  const updateFormValue = ({ updateType, value }) => {\r\n    setForm({ ...form, [updateType]: value });\r\n  };\r\n\r\n  const handleImageUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    setForm({ ...form, image: file });\r\n  };\r\n\r\n  const handleBarcodeScan = (data) => {\r\n    if (data) {\r\n      updateFormValue({ updateType: \"barcode\", value: data.text });\r\n      setScanning(false); // Tutup scanner setelah sukses memindai\r\n    }\r\n  };\r\n\r\n  const createProduct = () => {\r\n    const isValid = Object.keys(form).every((key) => form[key]);\r\n    if (isValid) {\r\n      dispatch(\r\n        showNotification({ message: \"Product Created Successfully\", status: 1 })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        showNotification({\r\n          message: \"Please fill all required fields\",\r\n          status: 0,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const toggleScanner = () => {\r\n    setScanning(!scanning); // Aktifkan/Tutup Scanner\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TitleCard title=\"Create Product\" topMargin=\"mt-2\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          {/* Product Name */}\r\n          <InputText\r\n            labelTitle=\"Name\"\r\n            updateType=\"name\"\r\n            defaultValue=\"\"\r\n            updateFormValue={updateFormValue}\r\n          />\r\n\r\n          {/* Product Image */}\r\n          <div className=\"flex flex-col\">\r\n            <label htmlFor=\"productImage\" className=\"label\">\r\n              Product Image\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"productImage\"\r\n              onChange={handleImageUpload}\r\n              className=\"input input-bordered\"\r\n            />\r\n            <span>{form.image ? form.image.name : \" \"}</span>\r\n          </div>\r\n\r\n          {/* Barcode Symbology */}\r\n          <InputText\r\n            labelTitle=\"Barcode Symbology\"\r\n            updateType=\"barcodeSymbology\"\r\n            defaultValue=\"\"\r\n            updateFormValue={updateFormValue}\r\n            isDropdown={true}\r\n            options={[\r\n              { label: \"Choose Symbology\", value: \"\" },\r\n              { label: \"Code 128\", value: \"code128\" },\r\n              { label: \"EAN-13\", value: \"ean13\" },\r\n            ]}\r\n          />\r\n\r\n          {/* Barcode Scanner */}\r\n          <div className=\"flex flex-col\">\r\n            <label htmlFor=\"barcode\" className=\"label\">\r\n              Barcode\r\n            </label>\r\n            <div className=\"flex items-center gap-x-2\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"barcode\"\r\n                placeholder=\"Scan or Enter Barcode\"\r\n                value={form.barcode}\r\n                onChange={(e) =>\r\n                  updateFormValue({ updateType: \"barcode\", value: e.target.value })\r\n                }\r\n                className=\"input input-bordered w-full h-12\" // Pastikan tinggi input sama\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={toggleScanner}\r\n                className=\"btn btn-primary h-12 px-4\" // Sesuaikan tinggi dan padding tombol\r\n              >\r\n                Scan\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Scanner Camera */}\r\n          {scanning && (\r\n            <div className=\"mt-4\">\r\n              <BarcodeScannerComponent\r\n                onUpdate={(err, result) => {\r\n                  if (result) handleBarcodeScan(result);\r\n                }}\r\n                width={300}\r\n                height={300}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={toggleScanner}\r\n                className=\"btn btn-secondary mt-2\"\r\n              >\r\n                Close Scanner\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {/* Other Inputs */}\r\n          <InputText\r\n            labelTitle=\"Category\"\r\n            updateType=\"category\"\r\n            defaultValue=\"\"\r\n            updateFormValue={updateFormValue}\r\n            isDropdown={true}\r\n            options={[\r\n              { label: \"Choose Category\", value: \"\" },\r\n              { label: \"Fruits\", value: \"fruits\" },\r\n              { label: \"Shoes\", value: \"shoes\" },\r\n            ]}\r\n          />\r\n          <InputText\r\n            labelTitle=\"Brand\"\r\n            updateType=\"brand\"\r\n            defaultValue=\"\"\r\n            updateFormValue={updateFormValue}\r\n            isDropdown={true}\r\n            options={[\r\n              { label: \"Choose Brand\", value: \"\" },\r\n              { label: \"Adidas\", value: \"adidas\" },\r\n              { label: \"Samsung\", value: \"samsung\" },\r\n            ]}\r\n          />\r\n          <div className=\"flex flex-col space-y-4\">\r\n            <div className=\"relative flex-grow\">\r\n              <InputText\r\n                labelTitle=\"Order Tax\"\r\n                updateType=\"\"\r\n                defaultValue=\"\"\r\n                updateFormValue={updateFormValue}\r\n              />\r\n              <span className=\"absolute right-3 top-2/3 transform -translate-y-1/2 text-xl\">\r\n                %\r\n              </span>\r\n            </div>\r\n\r\n            <TextAreaInput\r\n              labelTitle=\"Description\"\r\n              updateType=\"description\"\r\n              defaultValue=\"\"\r\n              updateFormValue={updateFormValue}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Line Separator */}\r\n        <div className=\"border-t border-gray-300 my-4\"></div>\r\n\r\n        {/* Product Price, Cost, Stock Alert, Product Unit */}\r\n        <div className=\"space-y-4\">\r\n          {/* Product Price dan Product Cost sejajar kiri-kanan */}\r\n          <div className=\"flex space-x-4\">\r\n            <div className=\"flex-1\">\r\n              <InputText\r\n                labelTitle=\"Product Price\"\r\n                updateType=\"price\"\r\n                defaultValue=\"\"\r\n                updateFormValue={updateFormValue}\r\n              />\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <InputText\r\n                labelTitle=\"Product Cost\"\r\n                updateType=\"cost\"\r\n                defaultValue=\"\"\r\n                updateFormValue={updateFormValue}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Stock Alert dan Product Unit di bawahnya */}\r\n          <div className=\"flex space-x-4\">\r\n            <div className=\"flex-1\">\r\n              <InputText\r\n                labelTitle=\"Stock Alert\"\r\n                updateType=\"stockAlert\"\r\n                defaultValue=\"\"\r\n                updateFormValue={updateFormValue}\r\n              />\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <InputText\r\n                labelTitle=\"Product Unit\"\r\n                updateType=\"unit\"\r\n                defaultValue=\"\"\r\n                updateFormValue={updateFormValue}\r\n                isDropdown={true}\r\n                options={[\r\n                  { label: \"Choose Unit\", value: \"\" },\r\n                  { label: \"Kilogram\", value: \"kilogram\" },\r\n                  { label: \"Meter\", value: \"meter\" },\r\n                ]}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <div className=\"mt-16\">\r\n          <button\r\n            className=\"btn btn-primary float-right\"\r\n            onClick={() => createProduct()}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </TitleCard>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateProduct;\r\n"],"names":["dispatch","useDispatch","form","setForm","useState","name","barcode","barcodeSymbology","category","brand","description","price","cost","stockAlert","unit","image","scanning","setScanning","updateFormValue","_ref","updateType","value","toggleScanner","_jsx","_Fragment","children","_jsxs","TitleCard","title","topMargin","className","InputText","labelTitle","defaultValue","htmlFor","type","id","onChange","event","file","target","files","isDropdown","options","label","placeholder","e","onClick","BarcodeScannerComponent","onUpdate","err","result","data","text","width","height","TextAreaInput","createProduct","isValid","Object","keys","every","key","showNotification","message","status"],"sourceRoot":""}