{"version":3,"file":"static/js/6841.eaa8f7ca.chunk.js","mappings":"8IAmEA,QAjEA,WACE,MAAOA,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,GAEzCG,EAAa,IAObC,EAAoBC,IACpBA,EAAU,GAAKA,EAAUC,KAAKC,KAAKJ,EAAaL,IACpDI,EAAeG,EAAQ,EAGnBG,GAAaP,EAAc,GAAKH,EAAc,EAC9CW,EAAUH,KAAKI,IAAIT,EAAcH,EAAaK,GAEpD,OACEQ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yDAAwDC,SAAA,EAErEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC/BF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,qDAAoDC,SAAA,CAAC,kBAEnEC,EAAAA,EAAAA,KAAA,UACEC,MAAOjB,EACPkB,SArBuBC,IAC/BlB,EAAemB,SAASD,EAAEE,OAAOJ,MAAO,KACxCb,EAAe,EAAE,EAoBTU,UAAU,mEAAkEC,SAE3E,CAAC,GAAI,GAAI,GAAI,IAAIO,KAAKC,IACrBP,EAAAA,EAAAA,KAAA,UAAmBC,MAAOM,EAAKR,SAC5BQ,GADUA,aASrBV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6EAA4EC,SAAA,EACzFF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,6BAA4BC,SAAA,CACzCL,EAAU,MAAIC,EAAQ,OAAKN,MAE9BQ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,UACEQ,QAASA,IAAMlB,EAAiBH,EAAc,GAC9CsB,SAA0B,IAAhBtB,EACVW,UAAU,oDAAmDC,SAE5D,OAEHC,EAAAA,EAAAA,KAAA,UACEQ,QAASA,IAAMlB,EAAiBH,EAAc,GAC9CsB,SAAUtB,IAAgBK,KAAKC,KAAKJ,EAAaL,GACjDc,UAAU,oDAAmDC,SAE5D,cAMb,C,iIC5DA,MAAMW,EAAY,CAChB,CACEC,KAAM,MACNC,MAAO,cACPC,MAAO,gBACPC,WAAY,EACZC,YAAa,MAEf,CACEJ,KAAM,OACNC,MAAO,cACPC,MAAO,mBACPC,WAAY,EACZC,YAAa,MAEf,CACEJ,KAAM,QACNC,MAAO,cACPC,MAAO,oBACPC,WAAY,EACZC,YAAa,OAuDjB,QAnDA,WACE,MAAOC,IAAa9B,EAAAA,EAAAA,UAASwB,GAO7B,OACEV,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAlB,UACEF,EAAAA,EAAAA,MAACqB,EAAAA,EAAS,CAACC,MAAM,gBAAgBC,UAAU,OAAMrB,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kDAAiDC,UAC9DF,EAAAA,EAAAA,MAAA,UACEW,QAASA,KAAMa,OAVJC,EAUgB,MATnCC,QAAQC,IAAI,aAAaF,cACzBG,OAAOC,QAFYJ,KAUuB,EAClCxB,UAAU,2DAA0DC,SAAA,EAEpEC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAgB,CAAC7B,UAAU,iBAAiB,YAKjDE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8BAA6BC,UAC1CF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,eAAcC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBAGRC,EAAAA,EAAAA,KAAA,SAAAD,SACGiB,EAAUV,KAAI,CAACsB,EAAUC,KACxBhC,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAK6B,EAASjB,QACdX,EAAAA,EAAAA,KAAA,MAAAD,SAAK6B,EAAShB,SACdZ,EAAAA,EAAAA,KAAA,MAAAD,SAAK6B,EAASf,SACdb,EAAAA,EAAAA,KAAA,MAAAD,SAAK6B,EAASd,cACdjB,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,IAAE6B,EAASb,iBALRc,aAWjB7B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAW,QAIpB,EC5DA,QAbA,WACI,MAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OALAC,EAAAA,EAAAA,YAAU,KACNF,GAASG,EAAAA,EAAAA,IAAa,CAAEf,MAAQ,6BAA6B,GAC5D,KAIDnB,EAAAA,EAAAA,KAAEmC,EAAY,GAEtB,C","sources":["components/PageControl/PageControl.js","features/report/bestcustomer/index.js","pages/protected/BestCustomer.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction PageControl() {\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const totalItems = 100;\r\n\r\n  const handleRowsPerPageChange = (e) => {\r\n    setRowsPerPage(parseInt(e.target.value, 10));\r\n    setCurrentPage(1); // Reset ke halaman pertama ketika rows per page berubah\r\n  };\r\n\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage < 1 || newPage > Math.ceil(totalItems / rowsPerPage)) return;\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  const startItem = (currentPage - 1) * rowsPerPage + 1;\r\n  const endItem = Math.min(currentPage * rowsPerPage, totalItems);\r\n\r\n  return (\r\n    <div className=\"flex flex-wrap justify-between items-center mt-4 gap-4\">\r\n      {/* Rows Per Page */}\r\n      <div className=\"w-full sm:w-auto\">\r\n        <span className=\"flex items-center gap-2 text-[10px] sm:text-[14px]\">\r\n          Rows Per Page:\r\n          <select\r\n            value={rowsPerPage}\r\n            onChange={handleRowsPerPageChange}\r\n            className=\"select select-bordered select-sm w-20 text-[10px] sm:text-[14px]\"\r\n          >\r\n            {[10, 20, 30, 40].map((rows) => (\r\n              <option key={rows} value={rows}>\r\n                {rows}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </span>\r\n      </div>\r\n\r\n      {/* Pagination */}\r\n      <div className=\"w-full sm:w-auto flex justify-between sm:justify-center items-center gap-4\">\r\n        <span className=\"text-[10px] sm:text-[14px]\">\r\n          {startItem} - {endItem} of {totalItems}\r\n        </span>\r\n        <div className=\"flex space-x-2\">\r\n          <button\r\n            onClick={() => handlePageChange(currentPage - 1)}\r\n            disabled={currentPage === 1}\r\n            className=\"btn btn-outline btn-sm text-[10px] sm:text-[14px]\"\r\n          >\r\n            {\"<\"}\r\n          </button>\r\n          <button\r\n            onClick={() => handlePageChange(currentPage + 1)}\r\n            disabled={currentPage === Math.ceil(totalItems / rowsPerPage)}\r\n            className=\"btn btn-outline btn-sm text-[10px] sm:text-[14px]\"\r\n          >\r\n            {\">\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageControl;\r\n","import { useState } from \"react\";\r\nimport TitleCard from \"../../../components/Cards/TitleCard\";\r\nimport PageControl from \"../../../components/PageControl/PageControl\";\r\nimport { DocumentTextIcon } from \"@heroicons/react/24/outline\";\r\n\r\nconst CUSTOMERS = [\r\n  {\r\n    name: \"Aku\",\r\n    phone: \"08123456789\",\r\n    email: \"aku@gmail.com\",\r\n    totalSales: 2,\r\n    totalAmount: 3430,\r\n  },\r\n  {\r\n    name: \"Budi\",\r\n    phone: \"08129876543\",\r\n    email: \"budi@example.com\",\r\n    totalSales: 5,\r\n    totalAmount: 5700,\r\n  },\r\n  {\r\n    name: \"Citra\",\r\n    phone: \"08129998877\",\r\n    email: \"citra@example.com\",\r\n    totalSales: 3,\r\n    totalAmount: 2500,\r\n  },\r\n];\r\n\r\nfunction BestCustomer() {\r\n  const [customers] = useState(CUSTOMERS);\r\n\r\n  const handlePrint = (type) => {\r\n    console.log(`Exporting ${type} PDF`);\r\n    window.print(); // Placeholder untuk ekspor PDF\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TitleCard title=\"Best Customer\" topMargin=\"mt-2\">\r\n        <div className=\"flex justify-end space-x-2 mt-2 sm:mt-0 ml-auto\">\r\n          <button\r\n            onClick={() => handlePrint(\"PDF\")}\r\n            className=\"btn btn-outline btn-error flex items-center text-sm h-10\"\r\n          >\r\n            <DocumentTextIcon className=\"w-5 h-5 mr-1\" />\r\n            PDF\r\n          </button>\r\n        </div>\r\n        {/* Table */}\r\n        <div className=\"overflow-x-auto w-full mt-4\">\r\n          <table className=\"table w-full\">\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Phone</th>\r\n                <th>Email</th>\r\n                <th>Total Sales</th>\r\n                <th>Total Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {customers.map((customer, index) => (\r\n                <tr key={index}>\r\n                  <td>{customer.name}</td>\r\n                  <td>{customer.phone}</td>\r\n                  <td>{customer.email}</td>\r\n                  <td>{customer.totalSales}</td>\r\n                  <td>${customer.totalAmount}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <PageControl />\r\n      </TitleCard>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BestCustomer;\r\n","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport BestCustomer from '../../features/report/bestcustomer'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Report | Best Customer |\"}))\r\n      }, [])\r\n\r\n\r\n    return(\r\n        < BestCustomer />\r\n    )\r\n}\r\n\r\nexport default InternalPage\r\n"],"names":["rowsPerPage","setRowsPerPage","useState","currentPage","setCurrentPage","totalItems","handlePageChange","newPage","Math","ceil","startItem","endItem","min","_jsxs","className","children","_jsx","value","onChange","e","parseInt","target","map","rows","onClick","disabled","CUSTOMERS","name","phone","email","totalSales","totalAmount","customers","_Fragment","TitleCard","title","topMargin","handlePrint","type","console","log","window","print","DocumentTextIcon","customer","index","PageControl","dispatch","useDispatch","useEffect","setPageTitle","BestCustomer"],"sourceRoot":""}