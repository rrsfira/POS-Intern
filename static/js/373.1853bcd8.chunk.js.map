{"version":3,"file":"static/js/373.1853bcd8.chunk.js","mappings":"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","sources":["features/dashboard/components/DashboardStats.js","features/dashboard/components/AmountStats.js","features/dashboard/components/PageStats.js","features/dashboard/components/UserChannels.js","features/dashboard/components/LineChart.js","features/dashboard/components/BarChart.js","features/dashboard/components/DashboardTopBar.js","features/dashboard/components/DoughnutChart.js","features/dashboard/index.js","pages/protected/Dashboard.js","../node_modules/@heroicons/react/24/outline/ArrowDownTrayIcon.js","../node_modules/@heroicons/react/24/outline/ArrowPathIcon.js","../node_modules/@heroicons/react/24/outline/EnvelopeIcon.js","../node_modules/@heroicons/react/24/outline/InboxArrowDownIcon.js","../node_modules/@heroicons/react/24/outline/PresentationChartBarIcon.js","../node_modules/@heroicons/react/24/outline/ShareIcon.js","../node_modules/@heroicons/react/24/outline/UserGroupIcon.js","../node_modules/capitalize-the-first-letter/capitalize.js"],"sourcesContent":["function DashboardStats({title, icon, value, description, colorIndex}){\r\n\r\n    const COLORS = [\"primary\", \"primary\"]\r\n\r\n    const getDescStyle = () => {\r\n        if(description.includes(\"↗︎\"))return \"font-bold text-green-700 dark:text-green-300\"\r\n        else if(description.includes(\"↙\"))return \"font-bold text-rose-500 dark:text-red-400\"\r\n        else return \"\"\r\n    }\r\n\r\n    return(\r\n        <div className=\"stats shadow\">\r\n            <div className=\"stat\">\r\n                <div className={`stat-figure dark:text-slate-300 text-${COLORS[colorIndex%2]}`}>{icon}</div>\r\n                <div className=\"stat-title dark:text-slate-300\">{title}</div>\r\n                <div className={`stat-value dark:text-slate-300 text-${COLORS[colorIndex%2]}`}>{value}</div>\r\n                <div className={\"stat-desc  \" + getDescStyle()}>{description}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardStats","import TitleCard from \"../../../components/Cards/TitleCard\"\r\n\r\nconst userSourceData = [\r\n    {\r\n        reference: \"DI_2112\",\r\n        customer: \"Nanda Kharisma S\",\r\n        warehouse: \"Warehouse 1\",\r\n        status: \"Pending\",\r\n        grandTotal: \"$1735\",\r\n        paid: \"$1735\",\r\n        due: \"$0.00\",\r\n        paymentStatus: \"Paid\",\r\n    },\r\n    {\r\n        reference: \"DI_2113\",\r\n        customer: \"Budi Santoso\",\r\n        warehouse: \"Warehouse 2\",\r\n        status: \"Completed\",\r\n        grandTotal: \"$1450\",\r\n        paid: \"$1450\",\r\n        due: \"$0.00\",\r\n        paymentStatus: \"Paid\",\r\n    },\r\n    {\r\n        reference: \"DI_2114\",\r\n        customer: \"Siti Aisyah\",\r\n        warehouse: \"Warehouse 3\",\r\n        status: \"Pending\",\r\n        grandTotal: \"$2100\",\r\n        paid: \"$1500\",\r\n        due: \"$600.00\",\r\n        paymentStatus: \"Partial\",\r\n    },\r\n    {\r\n        reference: \"DI_2115\",\r\n        customer: \"Rina Marlina\",\r\n        warehouse: \"Warehouse 1\",\r\n        status: \"Cancelled\",\r\n        grandTotal: \"$980\",\r\n        paid: \"$0.00\",\r\n        due: \"$980.00\",\r\n        paymentStatus: \"Unpaid\",\r\n    },\r\n    {\r\n        reference: \"DI_2116\",\r\n        customer: \"Agus Wijaya\",\r\n        warehouse: \"Warehouse 2\",\r\n        status: \"Completed\",\r\n        grandTotal: \"$1200\",\r\n        paid: \"$1200\",\r\n        due: \"$0.00\",\r\n        paymentStatus: \"Paid\",\r\n        \r\n    },\r\n\r\n    {\r\n        reference: \"DI_2116\",\r\n        customer: \"Ari Tawa\",\r\n        warehouse: \"Warehouse 2\",\r\n        status: \"Unpaid\",\r\n        grandTotal: \"$111\",\r\n        paid: \"$$0.00\",\r\n        due: \"$111.00\",\r\n        paymentStatus: \"Paid\",\r\n        \r\n    },\r\n];\r\n\r\nfunction UserChannels(){\r\n    const renderStatusButton = (status) => {\r\n        let buttonClass = \"btn btn-outline btn-xs\";\r\n\r\n        switch (status) {\r\n            case \"Pending\":\r\n                buttonClass += \" btn-primary\";  // Yellow for Pending\r\n                break;\r\n            case \"Completed\":\r\n                buttonClass += \" btn-success\";  // Green for Completed\r\n                break;\r\n            case \"Cancelled\":\r\n                buttonClass += \" btn-error\";  // Red for Cancelled\r\n                break;\r\n            default:\r\n                buttonClass += \" btn-primary\";  // Default blue\r\n        }\r\n\r\n        return <button className={buttonClass}>{status}</button>;\r\n    };\r\n\r\n    const renderPaymentButton = (paymentStatus) => {\r\n        let buttonClass = \"btn btn-outline btn-xs\";\r\n\r\n        switch (paymentStatus) {\r\n            case \"Paid\":\r\n                buttonClass += \" btn-success\";  // Green for Paid\r\n                break;\r\n            case \"Partial\":\r\n                buttonClass += \" btn-primary\";  // Yellow for Partial\r\n                break;\r\n            case \"Unpaid\":\r\n                buttonClass += \" btn-error\";  // Red for Unpaid\r\n                break;\r\n            default:\r\n                buttonClass += \" btn-primary\";  // Default blue\r\n        }\r\n\r\n        return <button className={buttonClass}>{paymentStatus}</button>;\r\n    };\r\n\r\n    return (\r\n        <TitleCard title={\"Recenct Sales\"}>\r\n            <div className=\"overflow-x-auto\">\r\n                <table className=\"table w-full\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>No</th>\r\n                            <th className=\"normal-case\">Reference</th>\r\n                            <th className=\"normal-case\">Customer</th>\r\n                            <th className=\"normal-case\">Warehouse</th>\r\n                            <th className=\"normal-case\">Status</th>\r\n                            <th className=\"normal-case\">Grand Total</th>\r\n                            <th className=\"normal-case\">Paid</th>\r\n                            <th className=\"normal-case\">Due</th>\r\n                            <th className=\"normal-case\">Payment Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {userSourceData.map((u, k) => (\r\n                            <tr key={k}>\r\n                                <th>{k + 1}</th>\r\n                                <td>{u.reference}</td>\r\n                                <td>{u.customer}</td>\r\n                                <td>{u.warehouse}</td>\r\n                                <td>{renderStatusButton(u.status)}</td>\r\n                                <td>{u.grandTotal}</td>\r\n                                <td>{u.paid}</td>\r\n                                <td>{u.due}</td>\r\n                                <td>{renderPaymentButton(u.paymentStatus)}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </TitleCard>\r\n    );\r\n}\r\n\r\nexport default UserChannels","import TitleCard from \"../../../components/Cards/TitleCard\"\r\n\r\nconst stockData = [\r\n  { code: \"707815360037\", product: \"Sunglasses\", warehouse: \"Warehouse 1\", quantity: 1000, alertQuantity: \"Save\" },\r\n  { code: \"707815360038\", product: \"T-shirt\", warehouse: \"Warehouse 2\", quantity: 500, alertQuantity: \"Low\" },\r\n  { code: \"707815360039\", product: \"Jacket\", warehouse: \"Warehouse 3\", quantity: 50, alertQuantity: \"OOS\" },\r\n  { code: \"707815360040\", product: \"Shoes\", warehouse: \"Warehouse 4\", quantity: 150, alertQuantity: \"Low\" },\r\n  { code: \"707815360041\", product: \"Hat\", warehouse: \"Warehouse 5\", quantity: 2000, alertQuantity: \"Save\" },\r\n  { code: \"707815360041\", product: \"Syal\", warehouse: \"Warehouse 5\", quantity: 200, alertQuantity: \"Low\" },\r\n];\r\n\r\nfunction UserChannels(){\r\n  return (\r\n    <TitleCard title={\"Stock Alert\"}>\r\n        {/** Table Data */}\r\n        <div className=\"overflow-x-auto\">\r\n            <table className=\"table w-full\">\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th className=\"normal-case\">Code</th>\r\n                        <th className=\"normal-case\">Product</th>\r\n                        <th className=\"normal-case\">Warehouse</th>\r\n                        <th className=\"normal-case\">Quantity</th>\r\n                        <th className=\"normal-case\">Alert Quantity</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        stockData.map((u, k) => {\r\n                            let alertClass = '';\r\n                            if (u.alertQuantity === \"Save\") alertClass = \"btn-outline btn-xs btn-success\";\r\n                            if (u.alertQuantity === \"Low\") alertClass = \"btn-outline btn-xs btn-primary\";\r\n                            if (u.alertQuantity === \"OOS\") alertClass = \"btn-outline btn-xs btn-error\";\r\n\r\n                            return (\r\n                                <tr key={k}>\r\n                                    <th>{k + 1}</th>\r\n                                    <td>{u.code}</td>\r\n                                    <td>{u.product}</td>\r\n                                    <td>{u.warehouse}</td>\r\n                                    <td>{u.quantity}</td>\r\n                                    <td><button className={`btn ${alertClass}`}>{u.alertQuantity}</button></td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </TitleCard>\r\n);\r\n}\r\n\r\nexport default UserChannels","// import TitleCard from \"../../../components/Cards/TitleCard\"\r\n\r\n// const userSourceData = [\r\n//     {source : \"Facebook Ads\", count : \"26,345\", conversionPercent : 10.2},\r\n//     {source : \"Google Ads\", count : \"21,341\", conversionPercent : 11.7},\r\n//     {source : \"Instagram Ads\", count : \"34,379\", conversionPercent : 12.4},\r\n//     {source : \"Affiliates\", count : \"12,359\", conversionPercent : 20.9},\r\n//     {source : \"Organic\", count : \"10,345\", conversionPercent : 10.3},\r\n// ]\r\n\r\n// function UserChannels(){\r\n//     return(\r\n//         <TitleCard title={\"User Signup Source\"}>\r\n//              {/** Table Data */}\r\n//              <div className=\"overflow-x-auto\">\r\n//                 <table className=\"table w-full\">\r\n//                     <thead>\r\n//                     <tr>\r\n//                         <th></th>\r\n//                         <th className=\"normal-case\">Source</th>\r\n//                         <th className=\"normal-case\">No of Users</th>\r\n//                         <th className=\"normal-case\">Conversion</th>\r\n//                     </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {\r\n//                             userSourceData.map((u, k) => {\r\n//                                 return(\r\n//                                     <tr key={k}>\r\n//                                         <th>{k+1}</th>\r\n//                                         <td>{u.source}</td>\r\n//                                         <td>{u.count}</td>\r\n//                                         <td>{`${u.conversionPercent}%`}</td>\r\n//                                     </tr>\r\n//                                 )\r\n//                             })\r\n//                         }\r\n//                     </tbody>\r\n//                 </table>\r\n//             </div>\r\n//         </TitleCard>\r\n//     )\r\n// }\r\nimport {\r\n    Chart as ChartJS,\r\n    ArcElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n  } from 'chart.js';\r\n  import { Pie } from 'react-chartjs-2';\r\n  import TitleCard from '../../../components/Cards/TitleCard';\r\n  import Subtitle from '../../../components/Typography/Subtitle';\r\n  \r\n  ChartJS.register(ArcElement, Tooltip, Legend);\r\n  \r\n  function PieChart() {\r\n    const options = {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          position: 'top',\r\n        },\r\n      },\r\n    };\r\n  \r\n    // Top 5 selling products data\r\n    const labels = ['Sunglasses', 'Bucket Hat', 'T-shirt', 'Running Shoes', 'Woll Syal'];\r\n  \r\n    const data = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: '# of Sales',\r\n          data: [400, 400, 300, 250, 250], // Replace with actual sales data\r\n          backgroundColor: [\r\n            'rgba(62, 51, 200, 1)',\r\n            'rgba(233, 231, 255, 1)',\r\n            'rgba(70, 80, 202, 1)',\r\n            'rgba(123, 116, 218, 1)',\r\n            'rgba(180, 174, 255, 1)',\r\n          ],\r\n          borderColor: [\r\n            'rgba(83, 71, 232, 1)',\r\n            'rgba(233, 231, 255, 1)',\r\n            'rgba(67, 56, 202, 1)',\r\n            'rgba(123, 116, 218, 1)',\r\n            'rgba(180, 174, 255, 1)',\r\n          ],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n  \r\n    return (\r\n      <TitleCard title={\"Top 5 Selling Products\"}>\r\n        <Pie options={options} data={data} />\r\n      </TitleCard>\r\n    );\r\n  }\r\n  \r\n  export default PieChart;\r\n  // export default UserChannels","import {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Filler,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport TitleCard from '../../../components/Cards/TitleCard';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Filler,\r\n  Legend\r\n);\r\n\r\nfunction LineChart(){\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n    },\r\n  };\r\n\r\n  \r\n  const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n\r\n  const data = {\r\n  labels,\r\n  datasets: [\r\n    {\r\n      fill: true,\r\n      label: 'Using Average Cost',\r\n      data: labels.map(() => { return Math.random() * 1600 + 200 }),\r\n      borderColor: 'rgb(62, 51, 200)',\r\n      backgroundColor: 'rgba(180, 174, 255, 0.5)',\r\n    },\r\n  ],\r\n};\r\n  \r\n\r\n    return(\r\n      <TitleCard title={\"Profit Net\"}>\r\n          <Line data={data} options={options}/>\r\n      </TitleCard>\r\n    )\r\n}\r\n\r\n\r\nexport default LineChart","import {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport TitleCard from '../../../components/Cards/TitleCard';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nfunction BarChart(){\r\n\r\n    const options = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          }\r\n        },\r\n      };\r\n      \r\n      const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n      \r\n      const data = {\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: 'Warehouse 1',\r\n            data: labels.map(() => { return Math.random() * 1000 + 500 }),\r\n            backgroundColor: 'rgba(62, 51, 200, 1)',\r\n          },\r\n          {\r\n            label: 'Warehouse 2',\r\n            data: labels.map(() => { return Math.random() * 1000 + 500 }),\r\n            backgroundColor: 'rgba(180, 174, 255, 1)',\r\n          },\r\n        ],\r\n      };\r\n\r\n    return(\r\n      <TitleCard title={\"Revenue\"}>\r\n            <Bar options={options} data={data} />\r\n      </TitleCard>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default BarChart","import SelectBox from \"../../../components/Input/SelectBox\"\r\nimport ArrowDownTrayIcon  from '@heroicons/react/24/outline/ArrowDownTrayIcon'\r\nimport ShareIcon  from '@heroicons/react/24/outline/ShareIcon'\r\nimport EnvelopeIcon  from '@heroicons/react/24/outline/EnvelopeIcon'\r\nimport EllipsisVerticalIcon  from '@heroicons/react/24/outline/EllipsisVerticalIcon'\r\nimport ArrowPathIcon  from '@heroicons/react/24/outline/ArrowPathIcon'\r\nimport { useState } from \"react\"\r\nimport Datepicker from \"react-tailwindcss-datepicker\"; \r\n\r\n\r\n\r\nconst periodOptions = [\r\n    {name : \"Today\", value : \"TODAY\"},\r\n    {name : \"Yesterday\", value : \"YESTERDAY\"},\r\n    {name : \"This Week\", value : \"THIS_WEEK\"},\r\n    {name : \"Last Week\", value : \"LAST_WEEK\"},\r\n    {name : \"This Month\", value : \"THIS_MONTH\"},\r\n    {name : \"Last Month\", value : \"LAST_MONTH\"},\r\n]\r\n\r\nfunction DashboardTopBar({updateDashboardPeriod}){\r\n\r\n        const [dateValue, setDateValue] = useState({ \r\n            startDate: new Date(), \r\n            endDate: new Date() \r\n        }); \r\n        \r\n        const handleDatePickerValueChange = (newValue) => {\r\n            console.log(\"newValue:\", newValue); \r\n            setDateValue(newValue); \r\n            updateDashboardPeriod(newValue)\r\n        } \r\n\r\n\r\n    return(\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n            <div className=\"\">\r\n            <Datepicker \r\n                containerClassName=\"w-72 \" \r\n                value={dateValue} \r\n                theme={\"light\"}\r\n                inputClassName=\"input input-bordered w-72\" \r\n                popoverDirection={\"down\"}\r\n                toggleClassName=\"invisible\"\r\n                onChange={handleDatePickerValueChange} \r\n                showShortcuts={true} \r\n                primaryColor={\"white\"} \r\n            /> \r\n            {/* <SelectBox \r\n                options={periodOptions}\r\n                labelTitle=\"Period\"\r\n                placeholder=\"Select date range\"\r\n                containerStyle=\"w-72\"\r\n                labelStyle=\"hidden\"\r\n                defaultValue=\"TODAY\"\r\n                updateFormValue={updateSelectBoxValue}\r\n            /> */}\r\n            </div>\r\n            <div className=\"text-right \">\r\n                <button className=\"btn btn-ghost btn-sm normal-case\"><ArrowPathIcon className=\"w-4 mr-2\"/>Refresh Data</button>\r\n                <button className=\"btn btn-ghost btn-sm normal-case  ml-2\"><ShareIcon className=\"w-4 mr-2\"/>Share</button>\r\n\r\n                <div className=\"dropdown dropdown-bottom dropdown-end  ml-2\">\r\n                    <label tabIndex={0} className=\"btn btn-ghost btn-sm normal-case btn-square \"><EllipsisVerticalIcon className=\"w-5\"/></label>\r\n                    <ul tabIndex={0} className=\"dropdown-content menu menu-compact  p-2 shadow bg-base-100 rounded-box w-52\">\r\n                        <li><a><EnvelopeIcon className=\"w-4\"/>Email Digests</a></li>\r\n                        <li><a><ArrowDownTrayIcon className=\"w-4\"/>Download</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardTopBar","import {\r\n  Chart as ChartJS,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport TitleCard from '../../../components/Cards/TitleCard';\r\nimport Subtitle from '../../../components/Typography/Subtitle';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nfunction PieChart() {\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n    },\r\n  };\r\n\r\n  // Top 5 customers data\r\n  const labels = ['Nanda Kharisma', 'Talia Aprianti', 'Risma Paramesti', 'Shafira', 'Nurul Izzah'];\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: '# of Orders',\r\n        data: [150, 120, 100, 80, 60], // Replace with real data\r\n        backgroundColor: [\r\n          'rgba(62, 51, 200, 1)',\r\n          'rgba(233, 231, 255, 1)',\r\n          'rgba(70, 80, 202, 1)',\r\n          'rgba(123, 116, 218, 1)',\r\n          'rgba(180, 174, 255, 1)',\r\n        ],\r\n        borderColor: [\r\n          'rgba(83, 71, 232, 1)',\r\n          'rgba(233, 231, 255, 1)',\r\n          'rgba(67, 56, 202, 1)',\r\n          'rgba(123, 116, 218, 1)',\r\n          'rgba(180, 174, 255, 1)',\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <TitleCard title={\"Top 5 Customers by Orders\"}>\r\n      <Pie options={options} data={data} />\r\n    </TitleCard>\r\n  );\r\n}\r\n\r\nexport default PieChart;","import DashboardStats from './components/DashboardStats'\r\nimport AmountStats from './components/AmountStats'\r\nimport PageStats from './components/PageStats'\r\n\r\nimport UserGroupIcon  from '@heroicons/react/24/outline/UserGroupIcon'\r\nimport UsersIcon  from '@heroicons/react/24/outline/UsersIcon'\r\nimport PresentationChartBarIcon  from '@heroicons/react/24/outline/PresentationChartBarIcon'\r\nimport InboxArrowDownIcon  from '@heroicons/react/24/outline/InboxArrowDownIcon'\r\nimport CircleStackIcon  from '@heroicons/react/24/outline/CircleStackIcon'\r\nimport CreditCardIcon  from '@heroicons/react/24/outline/CreditCardIcon'\r\nimport UserChannels from './components/UserChannels'\r\nimport LineChart from './components/LineChart'\r\nimport BarChart from './components/BarChart'\r\nimport DashboardTopBar from './components/DashboardTopBar'\r\nimport { useDispatch } from 'react-redux'\r\nimport {showNotification} from '../common/headerSlice'\r\nimport DoughnutChart from './components/DoughnutChart'\r\nimport { useState } from 'react'\r\n\r\nconst statsData = [\r\n    {\r\n        title: \"Total Sales\",\r\n        value: \"$22,110\",\r\n        icon: (\r\n            <button className=\"btn btn-circle bg-primary text-white\">\r\n                <CreditCardIcon className=\"w-6 h-6\" />\r\n            </button>\r\n        ),\r\n        description: \"↗︎ 2300 (22%)\"\r\n    },\r\n    {\r\n        title: \"Purchase\",\r\n        value: \"$7,545\",\r\n        icon: (\r\n            <button className=\"btn btn-circle bg-primary text-white\">\r\n                <InboxArrowDownIcon className=\"w-6 h-6\" />\r\n            </button>\r\n        ),\r\n        description: \"Current month\"\r\n    },\r\n    {\r\n        title: \"Customers\",\r\n        value: \"713\",\r\n        icon: (\r\n            <button className=\"btn btn-circle bg-primary text-white\">\r\n                <UserGroupIcon className=\"w-6 h-6\" />\r\n            </button>\r\n        ),\r\n        description: \"50 in hot leads\"\r\n    },\r\n    {\r\n        title: \"Sales Amount\",\r\n        value: \"$31,111\",\r\n        icon: (\r\n            <button className=\"btn btn-circle bg-primary text-white\">\r\n                <PresentationChartBarIcon className=\"w-6 h-6\" />\r\n            </button>\r\n        ),\r\n        description: \"↙ 300 (9%)\"\r\n    }\r\n];\r\n\r\n\r\n\r\nfunction Dashboard(){\r\n\r\n    const dispatch = useDispatch()\r\n \r\n\r\n    const updateDashboardPeriod = (newRange) => {\r\n        // Dashboard range changed, write code to refresh your values\r\n        dispatch(showNotification({message : `Period updated to ${newRange.startDate} to ${newRange.endDate}`, status : 1}))\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {/** ---------------------- Select Period Content ------------------------- */}\r\n            <DashboardTopBar updateDashboardPeriod={updateDashboardPeriod}/>\r\n        \r\n        {/** ---------------------- Different stats content 1 ------------------------- */}\r\n            <div className=\"grid lg:grid-cols-4 mt-2 md:grid-cols-2 grid-cols-1 gap-6\">\r\n                {\r\n                    statsData.map((d, k) => {\r\n                        return (\r\n                            <DashboardStats key={k} {...d} colorIndex={k}/>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\r\n\r\n\r\n        {/** ---------------------- Different charts ------------------------- */}\r\n            <div className=\"grid lg:grid-cols-2 mt-4 grid-cols-1 gap-6\">\r\n                <LineChart />\r\n                <BarChart />\r\n            </div>\r\n            \r\n        {/** ---------------------- Different stats content 2 ------------------------- */}\r\n        \r\n            <div className=\"grid lg:grid-cols-2 mt-10 grid-cols-1 gap-6\">\r\n                <AmountStats />\r\n                <PageStats />\r\n            </div>\r\n\r\n        {/** ---------------------- User source channels table  ------------------------- */}\r\n        \r\n            <div className=\"grid lg:grid-cols-2 mt-4 grid-cols-1 gap-6\">\r\n                <UserChannels />\r\n                <DoughnutChart />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport Dashboard from '../../features/dashboard/index'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Dashboard\"}))\r\n      }, [])\r\n\r\n\r\n    return(\r\n        <Dashboard />\r\n    )\r\n}\r\n\r\nexport default InternalPage","const React = require(\"react\");\n\nfunction ArrowDownTrayIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ArrowDownTrayIcon);\nmodule.exports = ForwardRef;","const React = require(\"react\");\n\nfunction ArrowPathIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ArrowPathIcon);\nmodule.exports = ForwardRef;","const React = require(\"react\");\n\nfunction EnvelopeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M21.75 6.75v10.5a2.25 2.25 0 01-2.25 2.25h-15a2.25 2.25 0 01-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25m19.5 0v.243a2.25 2.25 0 01-1.07 1.916l-7.5 4.615a2.25 2.25 0 01-2.36 0L3.32 8.91a2.25 2.25 0 01-1.07-1.916V6.75\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(EnvelopeIcon);\nmodule.exports = ForwardRef;","const React = require(\"react\");\n\nfunction InboxArrowDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 3.75H6.912a2.25 2.25 0 00-2.15 1.588L2.35 13.177a2.25 2.25 0 00-.1.661V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18v-4.162c0-.224-.034-.447-.1-.661L19.24 5.338a2.25 2.25 0 00-2.15-1.588H15M2.25 13.5h3.86a2.25 2.25 0 012.012 1.244l.256.512a2.25 2.25 0 002.013 1.244h3.218a2.25 2.25 0 002.013-1.244l.256-.512a2.25 2.25 0 012.013-1.244h3.859M12 3v8.25m0 0l-3-3m3 3l3-3\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(InboxArrowDownIcon);\nmodule.exports = ForwardRef;","const React = require(\"react\");\n\nfunction PresentationChartBarIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3.75 3v11.25A2.25 2.25 0 006 16.5h2.25M3.75 3h-1.5m1.5 0h16.5m0 0h1.5m-1.5 0v11.25A2.25 2.25 0 0118 16.5h-2.25m-7.5 0h7.5m-7.5 0l-1 3m8.5-3l1 3m0 0l.5 1.5m-.5-1.5h-9.5m0 0l-.5 1.5M9 11.25v1.5M12 9v3.75m3-6v6\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(PresentationChartBarIcon);\nmodule.exports = ForwardRef;","const React = require(\"react\");\n\nfunction ShareIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M7.217 10.907a2.25 2.25 0 100 2.186m0-2.186c.18.324.283.696.283 1.093s-.103.77-.283 1.093m0-2.186l9.566-5.314m-9.566 7.5l9.566 5.314m0 0a2.25 2.25 0 103.935 2.186 2.25 2.25 0 00-3.935-2.186zm0-12.814a2.25 2.25 0 103.933-2.185 2.25 2.25 0 00-3.933 2.185z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ShareIcon);\nmodule.exports = ForwardRef;","const React = require(\"react\");\n\nfunction UserGroupIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M18 18.72a9.094 9.094 0 003.741-.479 3 3 0 00-4.682-2.72m.94 3.198l.001.031c0 .225-.012.447-.037.666A11.944 11.944 0 0112 21c-2.17 0-4.207-.576-5.963-1.584A6.062 6.062 0 016 18.719m12 0a5.971 5.971 0 00-.941-3.197m0 0A5.995 5.995 0 0012 12.75a5.995 5.995 0 00-5.058 2.772m0 0a3 3 0 00-4.681 2.72 8.986 8.986 0 003.74.477m.94-3.197a5.971 5.971 0 00-.94 3.197M15 6.75a3 3 0 11-6 0 3 3 0 016 0zm6 3a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0zm-13.5 0a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(UserGroupIcon);\nmodule.exports = ForwardRef;","module.exports = (sentence) => {\n  const splitSentence = sentence.split(\" \")\n  const returnedV = splitSentence.map(\n    (word) => word[0].toUpperCase() + word.substring(1)\n  )\n  return returnedV.join(\" \")\n}"],"names":["_ref","title","icon","value","description","colorIndex","COLORS","_jsx","className","children","_jsxs","includes","userSourceData","reference","customer","warehouse","status","grandTotal","paid","due","paymentStatus","renderStatusButton","buttonClass","renderPaymentButton","TitleCard","map","u","k","stockData","code","product","quantity","alertQuantity","alertClass","ChartJS","register","ArcElement","Tooltip","Legend","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","Pie","options","responsive","plugins","legend","position","CategoryScale","LinearScale","PointElement","LineElement","Title","Filler","fill","Math","random","Line","BarElement","Bar","updateDashboardPeriod","dateValue","setDateValue","useState","startDate","Date","endDate","Datepicker","containerClassName","theme","inputClassName","popoverDirection","toggleClassName","onChange","newValue","console","log","showShortcuts","primaryColor","ArrowPathIcon","ShareIcon","tabIndex","EllipsisVerticalIcon","EnvelopeIcon","ArrowDownTrayIcon","statsData","CreditCardIcon","InboxArrowDownIcon","UserGroupIcon","PresentationChartBarIcon","dispatch","useDispatch","_Fragment","DashboardTopBar","newRange","showNotification","message","d","DashboardStats","LineChart","BarChart","AmountStats","PageStats","UserChannels","DoughnutChart","useEffect","setPageTitle","Dashboard","React","require","ForwardRef","forwardRef","svgRef","titleId","props","createElement","Object","assign","xmlns","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","module","exports","sentence","split","word","toUpperCase","substring","join"],"sourceRoot":""}