{"version":3,"file":"static/js/1090.a7d80e1e.chunk.js","mappings":"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","sources":["components/CalendarView/util.js","components/Table/TableComponent.js","pages/protected/CreateProduct.js","pages/protected/AllProduct.js","features/product/countStock/index.js","pages/protected/CountStock.js","components/Modal/index.js","features/product/category/index.js","pages/protected/Category.js","features/product/printLabels/index.js","pages/protected/PrintLabel.js","features/product/unit/index.js","pages/protected/Unit.js","features/product/brand/index.js","pages/protected/Brand.js","features/warehouse/warehouse.js","pages/protected/Warehouse.js","features/warehouse/createTransfer.js","pages/protected/CreateTransfer.js","features/warehouse/allTransfer.js","pages/protected/AllTransfer.js","features/warehouse/detailTransfer.js","features/warehouse/editTransfer.js","routes/index.js","containers/PageContent.js","features/common/components/NotificationBodyRightDrawer.js","features/calendar/CalendarEventsBodyRightDrawer.js","components/Input/InputFilter.js","features/people/customer/CustomerFilterBodyRightDrawer.js","features/people/supplier/SupplierFilterBodyRightDrawer.js","features/people/user/UserFilterBodyRightDrawer.js","features/sales/allsales/SalesFilterBodyRightDrawer.js","containers/RightSidebar.js","containers/Layout.js","features/filter/index.js","features/product/allProduct/detailProduct.js","features/product/allProduct/index.js","features/product/createProduct/index.js"],"sourcesContent":["const moment  = require(\"moment\");\r\n\r\nmodule.exports = Object.freeze({\r\n    CALENDAR_EVENT_STYLE : {\r\n        \"BLUE\" : \"bg-blue-200 dark:bg-blue-600 dark:text-blue-100\",\r\n        \"GREEN\" : \"bg-green-200 dark:bg-green-600 dark:text-green-100\",\r\n        \"PURPLE\" : \"bg-purple-200 dark:bg-purple-600 dark:text-purple-100\",\r\n        \"ORANGE\" : \"bg-orange-200 dark:bg-orange-600 dark:text-orange-100\",\r\n        \"PINK\" : \"bg-pink-200 dark:bg-pink-600 dark:text-pink-100\",\r\n        \"MORE\" : \"hover:underline cursor-pointer font-medium \"\r\n    }\r\n\r\n    \r\n});\r\n","import React from \"react\";\r\n\r\nfunction TableComponent({\r\n  columns,\r\n  data,\r\n  selectedRows,\r\n  onRowSelect,\r\n  onSelectAll,\r\n  onActionClick,\r\n  rowsPerPage,\r\n  currentPage,\r\n  totalItems,\r\n  onPageChange,\r\n  onRowsPerPageChange,\r\n}) {\r\n  const startItem = (currentPage - 1) * rowsPerPage + 1;\r\n  const endItem = Math.min(currentPage * rowsPerPage, totalItems);\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto\">\r\n      <table className=\"table-auto w-full border-collapse bg-white dark:bg-gray-800 text-black dark:text-white\">\r\n        <thead className=\"bg-gray-100 dark:bg-gray-700\">\r\n          <tr>\r\n            {columns.map((col, index) => (\r\n              <th key={index} className={`p-3 ${col.className || \"\"}`}>\r\n                {col.renderHeader ? col.renderHeader() : col.label}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((item) => (\r\n            <tr\r\n              key={item.id}\r\n              className=\"hover:bg-gray-200 dark:hover:bg-gray-600\"\r\n            >\r\n              {columns.map((col, index) => (\r\n                <td key={index} className={`p-3 ${col.className || \"\"}`}>\r\n                  {col.render ? col.render(item) : item[col.accessor]}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {/* Pagination */}\r\n      <div className=\"mt-4 flex justify-between items-center\">\r\n        <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n          Rows per page:{\" \"}\r\n          <select\r\n            value={rowsPerPage}\r\n            onChange={(e) => onRowsPerPageChange(parseInt(e.target.value))}\r\n            className=\"select select-bordered w-16 text-black dark:text-white bg-white dark:bg-gray-700\"\r\n          >\r\n            {[10, 20, 30].map((value) => (\r\n              <option key={value} value={value}>\r\n                {value}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <span className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n            {startItem}-{endItem} of {totalItems}\r\n          </span>\r\n          <button\r\n            className=\"btn btn-sm btn-outline mx-2 text-black dark:text-white\"\r\n            onClick={() => onPageChange(currentPage - 1)}\r\n            disabled={currentPage === 1}\r\n          >\r\n            {\"<\"}\r\n          </button>\r\n          <button\r\n            className=\"btn btn-sm btn-outline text-black dark:text-white\"\r\n            onClick={() => onPageChange(currentPage + 1)}\r\n            disabled={currentPage >= Math.ceil(totalItems / rowsPerPage)}\r\n          >\r\n            {\">\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableComponent;\r\n","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport CreateProduct from '../../features/product/createProduct/'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Product | Create Product |\"}))\r\n      }, [])\r\n\r\n\r\n    return(\r\n        < CreateProduct />\r\n    )\r\n}\r\n\r\nexport default InternalPage","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport AllProducts from '../../features/product/allProduct'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Product | All Product |\"}))\r\n      }, [])\r\n\r\n\r\n    return(\r\n        < AllProducts />\r\n    )\r\n}\r\n\r\nexport default InternalPage","import React, { useState } from \"react\";\r\nimport TitleCard from \"../../../components/Cards/TitleCard\";\r\nimport DatePicker from \"react-datepicker\"; // Import DatePicker\r\nimport \"react-datepicker/dist/react-datepicker.css\"; // Import styling DatePicker\r\nimport { PencilSquareIcon } from \"@heroicons/react/24/outline\";\r\n\r\nfunction CountStock() {\r\n  const [selectedDate, setSelectedDate] = useState(null); // State for date selection\r\n  const [searchText, setSearchText] = useState(\"\"); // State for search text\r\n  const [rowsPerPage, setRowsPerPage] = useState(10); // State for rows per page\r\n  const [currentPage, setCurrentPage] = useState(1); // State for current page\r\n  const [editingProduct, setEditingProduct] = useState(null); // State for the product being edited\r\n  const [isEditPopupVisible, setIsEditPopupVisible] = useState(false); // State to control popup visibility\r\n\r\n  const [stockData, setStockData] = useState([\r\n    { id: 1, name: \"Samsung A55\", stock: 97, date: \"2024-01-02\" },\r\n    { id: 2, name: \"Banana\", stock: 35, date: \"2024-01-03\" },\r\n    { id: 3, name: \"Asus VivoBook 78s\", stock: 24, date: \"2024-01-04\" },\r\n    { id: 4, name: \"Strawberry\", stock: 36, date: \"2024-01-05\" },\r\n    { id: 5, name: \"MacBook Pro\", stock: 13, date: \"2024-01-06\" },\r\n    { id: 6, name: \"Adidas Shoes\", stock: 27, date: \"2024-01-07\" },\r\n    { id: 7, name: \"Dubai Chocolate\", stock: 39, date: \"2024-01-08\" },\r\n    { id: 8, name: \"Chitatos\", stock: 87, date: \"2024-01-09\" },\r\n    { id: 9, name: \"Nike Shoes\", stock: 56, date: \"2024-01-10\" },\r\n    { id: 10, name: \"Laptop HP\", stock: 45, date: \"2024-01-11\" },\r\n    { id: 11, name: \"Phone X\", stock: 12, date: \"2024-01-12\" },\r\n    { id: 12, name: \"Sony Headphones\", stock: 60, date: \"2024-01-13\" },\r\n    { id: 13, name: \"Apple Watch\", stock: 75, date: \"2024-01-14\" },\r\n  ]);\r\n\r\n  // Filter based on selected date\r\n  const filteredByDate = selectedDate\r\n    ? stockData.filter(\r\n        (item) =>\r\n          new Date(item.date).toDateString() ===\r\n          new Date(selectedDate).toDateString()\r\n      )\r\n    : stockData;\r\n\r\n  // Filter based on search text\r\n  const filteredData = filteredByDate.filter((item) =>\r\n    item.name.toLowerCase().includes(searchText.toLowerCase())\r\n  );\r\n\r\n  // Pagination logic\r\n  const indexOfLastItem = currentPage * rowsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - rowsPerPage;\r\n  const currentItems = filteredData.slice(indexOfFirstItem, indexOfLastItem);\r\n  const totalPages = Math.ceil(filteredData.length / rowsPerPage);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const handleEditClick = (item) => {\r\n    setEditingProduct(item);\r\n    setIsEditPopupVisible(true);\r\n  };\r\n\r\n  const handleSaveChanges = () => {\r\n    if (editingProduct) {\r\n      // Update the product stock in stockData\r\n      const updatedStockData = stockData.map((item) =>\r\n        item.id === editingProduct.id ? editingProduct : item\r\n      );\r\n\r\n      // Set the updated stock data back to state\r\n      setStockData(updatedStockData);\r\n\r\n      // Close the popup\r\n      setIsEditPopupVisible(false);\r\n      setEditingProduct(null); // Clear editing state\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TitleCard title=\"Count Stock\" topMargin=\"mt-4\">\r\n      {/* Search and Date Picker Section */}\r\n      <div className=\"flex left-6 mb-4\">\r\n        <div className=\"w-full sm:w-1/2\">\r\n          <DatePicker\r\n            selected={selectedDate}\r\n            onChange={(date) => setSelectedDate(date)}\r\n            className=\"input input-bordered w-full\"\r\n            placeholderText=\"Select a date\"\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          value={searchText}\r\n          onChange={(e) => setSearchText(e.target.value)} // Update searchText on input change\r\n          placeholder=\"Search by Name or Description\"\r\n          className=\"input input-bordered w-full\"\r\n        />\r\n      </div>\r\n\r\n      {/* Table Section */}\r\n      <div className=\"mt-6 overflow-x-auto\">\r\n        <table className=\"table-auto w-full border-collapse border border-gray-300 dark:border-gray-700\">\r\n          <thead>\r\n            <tr className=\"bg-gray-200 dark:bg-gray-700\">\r\n              <th className=\"px-4 py-2 text-left text-sm font-medium text-gray-600 dark:text-gray-300\">\r\n                Date\r\n              </th>\r\n              <th className=\"px-4 py-2 text-left text-sm font-medium text-gray-600 dark:text-gray-300\">\r\n                Product Name\r\n              </th>\r\n              <th className=\"px-4 py-2 text-left text-sm font-medium text-gray-600 dark:text-gray-300\">\r\n                Remaining Stock\r\n              </th>\r\n              <th className=\"px-4 py-2 text-left text-sm font-medium text-gray-600 dark:text-gray-300\">\r\n                Action\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {currentItems.map((item) => (\r\n              <tr key={item.id}>\r\n                <td className=\"px-4 py-2\">{item.date}</td>\r\n                <td className=\"px-4 py-2\">{item.name}</td>\r\n                <td className=\"px-4 py-2\">{item.stock}</td>\r\n                <td className=\"px-4 py-2\">\r\n                  <button\r\n                    onClick={() => handleEditClick(item)}\r\n                    className=\"btn btn-sm btn-warning\"\r\n                  >\r\n                    <PencilSquareIcon className=\"w-5 h-5\" />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Pagination Section */}\r\n      <div className=\"mt-4 flex justify-between items-center\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <label className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n            Rows Per Page:\r\n          </label>\r\n          <select\r\n            value={rowsPerPage}\r\n            onChange={(e) => setRowsPerPage(Number(e.target.value))}\r\n            className=\"select select-bordered\"\r\n          >\r\n            <option value={5}>5</option>\r\n            <option value={10}>10</option>\r\n            <option value={15}>15</option>\r\n            <option value={20}>20</option>\r\n          </select>\r\n        </div>\r\n\r\n        {/* Pagination Controls */}\r\n        <div className=\"flex items-center space-x-2\">\r\n          <button\r\n            onClick={() => handlePageChange(currentPage - 1)}\r\n            className=\"btn btn-neutral btn-sm\"\r\n            disabled={currentPage === 1}\r\n          >\r\n            {\"<\"}\r\n          </button>\r\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n            {`${(currentPage - 1) * rowsPerPage + 1} - ${\r\n              currentPage * rowsPerPage > filteredData.length\r\n                ? filteredData.length\r\n                : currentPage * rowsPerPage\r\n            } of ${filteredData.length}`}\r\n          </p>\r\n          <button\r\n            onClick={() => handlePageChange(currentPage + 1)}\r\n            className=\"btn btn-neutral btn-sm\"\r\n            disabled={currentPage === totalPages}\r\n          >\r\n            {\">\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Edit Stock Popup */}\r\n      {isEditPopupVisible && (\r\n        <div className=\"fixed inset-0 flex justify-center items-center bg-gray-500 bg-opacity-50 z-50\">\r\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg w-96\">\r\n            <h2 className=\"text-xl font-semibold text-gray-800 dark:text-gray-100 mb-4\">\r\n              Edit Product Stock\r\n            </h2>\r\n            {editingProduct && (\r\n              <div>\r\n                <div className=\"mb-4\">\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                    Product Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={editingProduct.name}\r\n                    onChange={(e) =>\r\n                      setEditingProduct({\r\n                        ...editingProduct,\r\n                        name: e.target.value,\r\n                      })\r\n                    }\r\n                    className=\"input input-bordered w-full\"\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"mb-4\">\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                    Remaining Stock\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={editingProduct.stock}\r\n                    onChange={(e) =>\r\n                      setEditingProduct({\r\n                        ...editingProduct,\r\n                        stock: parseInt(e.target.value),\r\n                      })\r\n                    }\r\n                    className=\"input input-bordered w-full\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex justify-end space-x-4\">\r\n                  <button\r\n                    onClick={() => setIsEditPopupVisible(false)}\r\n                    className=\"btn btn-sm btn-neutral\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    onClick={handleSaveChanges}\r\n                    className=\"btn btn-sm btn-primary\"\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TitleCard>\r\n  );\r\n}\r\n\r\nexport default CountStock;\r\n","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport CountStock from '../../features/product/countStock'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Product | Count Stock |\"}))\r\n      }, [])\r\n\r\n\r\n    return(\r\n        < CountStock />\r\n    )\r\n}\r\n\r\nexport default InternalPage","import React from \"react\";\r\n\r\nconst Modal = ({ onClose, onSave, newCategory, handleInputChange }) => {\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\">\r\n      <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg w-96\">\r\n        <button\r\n          onClick={onClose}\r\n          className=\"absolute top-2 right-2 text-gray-500 dark:text-gray-300\"\r\n        >\r\n          <i className=\"bi bi-x-lg text-xl\"></i>\r\n        </button>\r\n        <h3 className=\"text-xl font-semibold mb-4 text-gray-800 dark:text-gray-200\">\r\n          Add New Category\r\n        </h3>\r\n        <div className=\"mb-3\">\r\n          <label className=\"block text-sm font-medium text-gray-600 dark:text-gray-300\">\r\n            Category Code\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"code\"\r\n            value={newCategory.code}\r\n            onChange={handleInputChange}\r\n            className=\"input input-bordered w-full bg-gray-100 dark:bg-gray-700 dark:text-gray-200\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"block text-sm font-medium text-gray-600 dark:text-gray-300\">\r\n            Category Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={newCategory.name}\r\n            onChange={handleInputChange}\r\n            className=\"input input-bordered w-full bg-gray-100 dark:bg-gray-700 dark:text-gray-200\"\r\n          />\r\n        </div>\r\n        <div className=\"flex justify-end mt-4\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"btn btn-secondary mr-2 dark:bg-gray-600 dark:text-gray-200\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            onClick={onSave}\r\n            className=\"btn btn-primary dark:bg-blue-600 dark:text-white\"\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport TitleCard from \"../../../components/Cards/TitleCard\"; // Import TitleCard Component\r\nimport Modal from \"../../../components/Modal\";\r\n\r\nimport {\r\n  PlusIcon,\r\n  PencilSquareIcon,\r\n  TrashIcon,\r\n} from \"@heroicons/react/24/outline\";\r\n\r\nfunction CategoryPage() {\r\n  const [rowsPerPage, setRowsPerPage] = useState(10); // State for rows per page\r\n  const [currentPage, setCurrentPage] = useState(1); // State for current page\r\n  const [searchText, setSearchText] = useState(\"\"); // State for search filter\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to manage modal visibility\r\n  const [newCategory, setNewCategory] = useState({ code: \"\", name: \"\" }); // State to handle new category input\r\n  const [selectedCategories, setSelectedCategories] = useState([]); // State to track selected checkboxes\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false); // State untuk modal edit\r\n  const [editCategory, setEditCategory] = useState(null); // State untuk kategori yang sedang diedit\r\n  const [categoryToDelete, setCategoryToDelete] = useState(null); // To hold the category being deleted\r\n  const [isDeletePopupVisible, setIsDeletePopupVisible] = useState(false); // To control visibility of the delete confirmation popup\r\n\r\n  // Example category data\r\n  const [categoryDataState, setCategoryDataState] = useState([\r\n    { id: 1, code: \"01\", name: \"Shoes\" },\r\n    { id: 2, code: \"02\", name: \"Fruits\" },\r\n    { id: 3, code: \"03\", name: \"Electronic\" },\r\n    { id: 4, code: \"04\", name: \"Clothes\" },\r\n    { id: 5, code: \"05\", name: \"Foods\" },\r\n  ]);\r\n\r\n  // Filter categories by search text\r\n  const filteredData = categoryDataState.filter(\r\n    (item) =>\r\n      item.code.toLowerCase().includes(searchText.toLowerCase()) ||\r\n      item.name.toLowerCase().includes(searchText.toLowerCase())\r\n  );\r\n\r\n  // Delete logic\r\n  const handleDeleteCategory = (item) => {\r\n    setCategoryToDelete(item);\r\n    setIsDeletePopupVisible(true);\r\n  };\r\n\r\n  const confirmDeleteCategory = () => {\r\n    setCategoryDataState((prevState) =>\r\n      prevState.filter((category) => category.id !== categoryToDelete.id)\r\n    );\r\n    setIsDeletePopupVisible(false);\r\n    setCategoryToDelete(null);\r\n  };\r\n\r\n  const cancelDelete = () => {\r\n    setIsDeletePopupVisible(false);\r\n    setCategoryToDelete(null);\r\n  };\r\n\r\n  // Ganti categoryData dengan categoryDataState untuk render data\r\n\r\n  const handleEditCategory = (category) => {\r\n    setEditCategory(category); // Set kategori yang sedang diedit\r\n    setIsEditModalOpen(true); // Tampilkan modal edit\r\n  };\r\n\r\n  const handleEditInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditCategory((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSaveEditCategory = (updatedCategory) => {\r\n    if (updatedCategory.code && updatedCategory.name) {\r\n      setCategoryDataState((prev) =>\r\n        prev.map((category) =>\r\n          category.id === updatedCategory.id ? updatedCategory : category\r\n        )\r\n      );\r\n      setIsEditModalOpen(false);\r\n    } else {\r\n      alert(\"Please fill in both fields.\");\r\n    }\r\n  };\r\n\r\n  // Pagination logic\r\n  const indexOfLastItem = currentPage * rowsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - rowsPerPage;\r\n  const currentItems = filteredData.slice(indexOfFirstItem, indexOfLastItem);\r\n  const totalPages = Math.ceil(filteredData.length / rowsPerPage);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const handleCreateCategory = () => {\r\n    setIsModalOpen(true); // Open the modal when Create is clicked\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setIsModalOpen(false); // Close the modal\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewCategory((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSaveCategory = () => {\r\n    if (newCategory.code && newCategory.name) {\r\n      const newId = categoryDataState.length\r\n        ? categoryDataState[categoryDataState.length - 1].id + 1\r\n        : 1; // Generate new ID\r\n      const categoryWithId = { ...newCategory, id: newId }; // Add ID to the new category\r\n\r\n      setCategoryDataState((prev) => [...prev, categoryWithId]); // Update state with the new category\r\n      setNewCategory({ code: \"\", name: \"\" }); // Reset newCategory state\r\n      setIsModalOpen(false); // Close the modal\r\n    } else {\r\n      alert(\"Please fill in both fields.\");\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = (id) => {\r\n    if (selectedCategories.includes(id)) {\r\n      // Remove from selection if already selected\r\n      setSelectedCategories((prev) =>\r\n        prev.filter((categoryId) => categoryId !== id)\r\n      );\r\n    } else {\r\n      // Add to selection if not selected\r\n      setSelectedCategories((prev) => [...prev, id]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TitleCard title=\"Category\" topMargin=\"mt-4\">\r\n      {/* Search Bar and Create Button */}\r\n      <div className=\"flex justify-between mb-4 items-center\">\r\n        {/* Search Input */}\r\n        <div className=\"w-full sm:w-1/2\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            placeholder=\"Search by Code or Name\"\r\n            className=\"input input-bordered w-full\"\r\n          />\r\n        </div>\r\n\r\n        {/* Create Button */}\r\n        <div className=\"ml-4\">\r\n          <button\r\n            className=\"btn btn-primary flex items-center\"\r\n            onClick={handleCreateCategory}\r\n          >\r\n            <PlusIcon className=\"w-5 h-5 mr-1\" />\r\n            Create\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Category Table */}\r\n      <div className=\"mt-6 overflow-x-auto\">\r\n        <table className=\"table-auto w-full border-collapse border border-gray-300 dark:border-gray-700\">\r\n          <thead>\r\n            <tr className=\"bg-gray-200 dark:bg-gray-700\">\r\n              <th className=\"px-4 py-2 text-left\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"checkbox\"\r\n                  onChange={(e) => {\r\n                    if (e.target.checked) {\r\n                      setSelectedCategories(\r\n                        currentItems.map((item) => item.id)\r\n                      );\r\n                    } else {\r\n                      setSelectedCategories([]); // Deselect all\r\n                    }\r\n                  }}\r\n                  checked={\r\n                    selectedCategories.length === currentItems.length &&\r\n                    currentItems.length > 0\r\n                  }\r\n                />\r\n              </th>\r\n              <th className=\"px-4 py-2 text-left text-sm font-medium text-gray-600 dark:text-gray-300\">\r\n                Category Code\r\n              </th>\r\n              <th className=\"px-4 py-2 text-left text-sm font-medium text-gray-600 dark:text-gray-300\">\r\n                Category Name\r\n              </th>\r\n              <th className=\"px-4 py-2 text-left text-sm font-medium text-gray-600 dark:text-gray-300\">\r\n                Action\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {currentItems.map((item) => (\r\n              <tr\r\n                key={item.id}\r\n                className=\"bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-900\"\r\n              >\r\n                <td className=\"px-4 py-2\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedCategories.includes(item.id)}\r\n                    onChange={() => handleCheckboxChange(item.id)}\r\n                    className=\"checkbox\"\r\n                  />\r\n                </td>\r\n                <td className=\"px-4 py-2 text-sm text-gray-700 dark:text-gray-300\">\r\n                  {item.code}\r\n                </td>\r\n                <td className=\"px-4 py-2 text-sm text-gray-700 dark:text-gray-300\">\r\n                  {item.name}\r\n                </td>\r\n                <td className=\"px-4 py-2 flex space-x-2\">\r\n                  <button\r\n                    onClick={() => handleEditCategory(item)}\r\n                    className=\"btn btn-sm btn-warning flex items-center\"\r\n                  >\r\n                    <PencilSquareIcon className=\"w-5 h-5 mr-1\" />\r\n                  </button>\r\n\r\n                  <button\r\n                    className=\"btn btn-sm btn-error\"\r\n                    onClick={() => handleDeleteCategory(item)}\r\n                  >\r\n                    <TrashIcon className=\"w-5 h-5\" />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Footer Section */}\r\n      <div className=\"mt-4 flex justify-between items-center\">\r\n        {/* Rows Per Page Selection */}\r\n        <div className=\"flex items-center space-x-2\">\r\n          <label className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n            Rows Per Page:\r\n          </label>\r\n          <select\r\n            value={rowsPerPage}\r\n            onChange={(e) => setRowsPerPage(Number(e.target.value))}\r\n            className=\"select select-bordered\"\r\n          >\r\n            <option value={5}>5</option>\r\n            <option value={10}>10</option>\r\n            <option value={20}>20</option>\r\n          </select>\r\n        </div>\r\n\r\n        {/* Pagination Controls */}\r\n        <div className=\"flex items-center space-x-2\">\r\n          <button\r\n            onClick={() => handlePageChange(currentPage - 1)}\r\n            className=\"btn btn-neutral btn-sm\"\r\n            disabled={currentPage === 1}\r\n          >\r\n            {\"<\"}\r\n          </button>\r\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n            {(currentPage - 1) * rowsPerPage + 1} -{\" \"}\r\n            {currentPage * rowsPerPage > filteredData.length\r\n              ? filteredData.length\r\n              : currentPage * rowsPerPage}{\" \"}\r\n            of {filteredData.length}\r\n          </p>\r\n\r\n          <button\r\n            onClick={() => handlePageChange(currentPage + 1)}\r\n            className=\"btn btn-neutral btn-sm\"\r\n            disabled={currentPage === totalPages}\r\n          >\r\n            {\">\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal for creating new category */}\r\n      {isModalOpen && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n          <div className=\"bg-white dark:bg-gray-800 dark:text-white p-6 rounded shadow-lg\">\r\n            <h3 className=\"text-lg font-semibold mb-4\">Add New Category</h3>\r\n            <input\r\n              type=\"text\"\r\n              name=\"code\"\r\n              value={newCategory.code}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Category Code\"\r\n              className=\"input input-bordered w-full mb-4 bg-gray-100 dark:bg-gray-700 dark:text-white\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={newCategory.name}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Category Name\"\r\n              className=\"input input-bordered w-full mb-4 bg-gray-100 dark:bg-gray-700 dark:text-white\"\r\n            />\r\n            <div className=\"flex justify-end space-x-4\">\r\n              <button onClick={handleSaveCategory} className=\"btn btn-primary\">\r\n                Save\r\n              </button>\r\n              <button\r\n                onClick={() => setIsModalOpen(false)}\r\n                className=\"btn btn-secondary\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal for editing category */}\r\n      {isEditModalOpen && (\r\n        <Modal\r\n          onClose={() => setIsEditModalOpen(false)}\r\n          onSave={() => handleSaveEditCategory(editCategory)}\r\n          newCategory={editCategory}\r\n          handleInputChange={handleEditInputChange}\r\n          isEditMode={true}\r\n        />\r\n      )}\r\n      {isDeletePopupVisible && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-lg\">\r\n            <h3 className=\"text-lg font-bold text-gray-800 dark:text-gray-200\">\r\n              Delete Confirmation\r\n            </h3>\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-2\">\r\n              Are you sure you want to delete this category?\r\n            </p>\r\n            <div className=\"flex justify-end space-x-4 mt-4\">\r\n              <button\r\n                onClick={cancelDelete}\r\n                className=\"btn btn-neutral text-gray-800 dark:text-gray-200 dark:bg-gray-700\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={confirmDeleteCategory}\r\n                className=\"btn btn-danger text-gray-100 dark:text-white dark:bg-red-600\"\r\n              >\r\n                Confirm\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TitleCard>\r\n  );\r\n}\r\n\r\nexport default CategoryPage;\r\n","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport CategoryPage from '../../features/product/category'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Product | Category |\"}))\r\n      }, [])\r\n\r\n\r\n    return(\r\n        < CategoryPage />\r\n    )\r\n}\r\n\r\nexport default InternalPage","import { useState } from \"react\";\r\nimport TitleCard from \"../../../components/Cards/TitleCard\";\r\nimport {\r\n  QrCodeIcon,\r\n  PrinterIcon,\r\n  ArrowPathIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\r\nimport Barcode from \"react-barcode\"; // Impor Barcode\r\n\r\nfunction PrintLabels() {\r\n  const [warehouse, setWarehouse] = useState(\"\");\r\n  const [productCode, setProductCode] = useState(\"\");\r\n  const [paperSize, setPaperSize] = useState(\"\");\r\n  const [displayPrice, setDisplayPrice] = useState(false);\r\n  const [scanning, setScanning] = useState(false);\r\n  const [showBarcode, setShowBarcode] = useState(false); // State untuk menampilkan barcode\r\n\r\n  const handleReset = () => {\r\n    setWarehouse(\"\");\r\n    setProductCode(\"\");\r\n    setPaperSize(\"\");\r\n    setDisplayPrice(false);\r\n    setShowBarcode(false); // Sembunyikan barcode saat reset\r\n  };\r\n\r\n  const handleBarcodeScan = (data) => {\r\n    if (data) {\r\n      setProductCode(data.text);\r\n      setScanning(false);\r\n    }\r\n  };\r\n\r\n  const toggleScanner = () => {\r\n    setScanning(!scanning);\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    console.log(\"Print\");\r\n    setShowBarcode(true); // Tampilkan barcode setelah tombol Print diklik\r\n  };\r\n\r\n  return (\r\n    <TitleCard title=\"Print Labels\" topMargin=\"mt-4\">\r\n      {/* Form Input Section */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            Warehouse\r\n          </label>\r\n          <select\r\n            value={warehouse}\r\n            onChange={(e) => setWarehouse(e.target.value)}\r\n            className=\"select select-bordered w-full\"\r\n          >\r\n            <option value=\"\" disabled>\r\n              Choose Warehouse\r\n            </option>\r\n            <option value=\"warehouse1\">Warehouse 1</option>\r\n            <option value=\"warehouse2\">Warehouse 2</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            Code Product\r\n          </label>\r\n          <div className=\"relative flex items-center\">\r\n            <input\r\n              type=\"text\"\r\n              value={productCode}\r\n              onChange={(e) => setProductCode(e.target.value)}\r\n              placeholder=\"Scan or Search Product By Code\"\r\n              className=\"input input-bordered w-full\"\r\n            />\r\n            <button\r\n              onClick={toggleScanner}\r\n              className=\"btn btn-primary ml-2 flex items-center\"\r\n            >\r\n              <QrCodeIcon className=\"w-5 h-5 mr-1\" />\r\n              Scan\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Barcode Scanner */}\r\n      {scanning && (\r\n        <div className=\"mt-4\">\r\n          <BarcodeScannerComponent\r\n            onUpdate={(err, result) => {\r\n              if (result) handleBarcodeScan(result);\r\n            }}\r\n            width={300}\r\n            height={300}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            onClick={toggleScanner}\r\n            className=\"btn btn-secondary mt-2\"\r\n          >\r\n            Close Scanner\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"mb-6\">\r\n        <table className=\"table-auto w-full border-collapse border border-gray-300 dark:border-gray-700\">\r\n          <thead>\r\n            <tr className=\"bg-gray-200 dark:bg-gray-700\">\r\n              <th className=\"px-4 py-2 text-left text-sm font-medium text-gray-600 dark:text-gray-300\">\r\n                Product\r\n              </th>\r\n              <th className=\"px-4 py-2 text-left text-sm font-medium text-gray-600 dark:text-gray-300\">\r\n                Code Product\r\n              </th>\r\n              <th className=\"px-4 py-2 text-left text-sm font-medium text-gray-600 dark:text-gray-300\">\r\n                Quantity\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td className=\"px-4 py-2 text-sm text-gray-700 dark:text-gray-300\">\r\n                No data available\r\n              </td>\r\n              <td className=\"px-4 py-2 text-sm text-gray-700 dark:text-gray-300\">\r\n                -\r\n              </td>\r\n              <td className=\"px-4 py-2 text-sm text-gray-700 dark:text-gray-300\">\r\n                -\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            Paper Size\r\n          </label>\r\n          <select\r\n            value={paperSize}\r\n            onChange={(e) => setPaperSize(e.target.value)}\r\n            className=\"select select-bordered w-full\"\r\n          >\r\n            <option value=\"\" disabled>\r\n              Select Paper Size\r\n            </option>\r\n            <option value=\"A4\">A4</option>\r\n            <option value=\"A5\">A5</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"flex items-center mt-6\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"displayPrice\"\r\n            checked={displayPrice}\r\n            onChange={(e) => setDisplayPrice(e.target.checked)}\r\n            className=\"checkbox checkbox-primary mr-2\"\r\n          />\r\n          <label\r\n            htmlFor=\"displayPrice\"\r\n            className=\"text-sm font-medium text-gray-700 dark:text-gray-300\"\r\n          >\r\n            Display Price\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex justify-end space-x-4\">\r\n        <button\r\n          className=\"btn btn-primary flex items-center\"\r\n          onClick={() => console.log(\"Update\")}\r\n        >\r\n          <ArrowPathIcon className=\"w-5 h-5 mr-2\" />\r\n          Update\r\n        </button>\r\n        <button\r\n          className=\"btn btn-error flex items-center\"\r\n          onClick={handleReset}\r\n        >\r\n          <ArrowPathIcon className=\"w-5 h-5 mr-2\" />\r\n          Reset\r\n        </button>\r\n        <button\r\n          className=\"btn btn-success flex items-center\"\r\n          onClick={handlePrint}\r\n        >\r\n          <PrinterIcon className=\"w-5 h-5 mr-2\" />\r\n          Print\r\n        </button>\r\n      </div>\r\n\r\n      {/* Barcode Display */}\r\n      {showBarcode && productCode && (\r\n        <div className=\"mt-6 flex justify-center\">\r\n          <Barcode value={productCode} />\r\n        </div>\r\n      )}\r\n    </TitleCard>\r\n  );\r\n}\r\n\r\nexport default PrintLabels;\r\n","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport PrintLabels from '../../features/product/printLabels/'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Product | Print Labels |\"}))\r\n      }, [])\r\n\r\n\r\n    return(\r\n        < PrintLabels />\r\n    )\r\n}\r\n\r\nexport default InternalPage","import React, { useState } from \"react\";\r\nimport TitleCard from \"../../../components/Cards/TitleCard\"; // Menggunakan TitleCard yang sama\r\nimport {\r\n  PencilSquareIcon,\r\n  TrashIcon,\r\n  PlusIcon,\r\n  XMarkIcon,\r\n} from \"@heroicons/react/24/outline\";\r\n\r\nconst UnitPage = () => {\r\n  // Data contoh untuk tabel unit\r\n  const [units, setUnits] = useState([\r\n    { id: 1, name: \"Grams\", shortName: \"g\", operator: \"/\", value: 1000 },\r\n    { id: 2, name: \"Piece\", shortName: \"pc\", operator: \"*\", value: 1 },\r\n    { id: 3, name: \"Kilogram\", shortName: \"kg\", operator: \"*\", value: 1 },\r\n    { id: 4, name: \"Meter\", shortName: \"m\", operator: \"*\", value: 1 },\r\n    { id: 5, name: \"Centimeter\", shortName: \"cm\", operator: \"/\", value: 100 },\r\n  ]);\r\n  const [searchText, setSearchText] = useState(\"\"); // Untuk pencarian\r\n  const [selectedUnits, setSelectedUnits] = useState([]); // Untuk checkbox\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // Modal state\r\n  const [isEditMode, setIsEditMode] = useState(false); // Untuk membedakan Create/Edit\r\n  const [editUnit, setEditUnit] = useState(null); // Data unit yang sedang diedit\r\n  const [newUnit, setNewUnit] = useState({\r\n    name: \"\",\r\n    shortName: \"\",\r\n    operator: \"/\",\r\n    value: \"\",\r\n  });\r\n  const [unitToDelete, setUnitToDelete] = useState(null); // To hold the category being deleted\r\n  const [isDeletePopupVisible, setIsDeletePopupVisible] = useState(false); // To control visibility of the delete confirmation popup\r\n\r\n  const [unitDataState, setUnitDataState] = useState(units);\r\n\r\n  // Fungsi filter berdasarkan pencarian\r\n  const filteredUnits = unitDataState.filter(\r\n    (unit) =>\r\n      unit.name.toLowerCase().includes(searchText.toLowerCase()) ||\r\n      unit.shortName.toLowerCase().includes(searchText.toLowerCase())\r\n  );\r\n\r\n  // Delete logic\r\n  const handleDeleteUnit = (unit) => {\r\n    setUnitToDelete(unit);\r\n    setIsDeletePopupVisible(true);\r\n  };\r\n\r\n  const confirmDeleteUnit = () => {\r\n    setUnitDataState((prevState) =>\r\n      prevState.filter((unit) => unit.id !== unitToDelete.id)\r\n    );\r\n    setIsDeletePopupVisible(false);\r\n    setUnitToDelete(null);\r\n  };\r\n\r\n  const cancelDelete = () => {\r\n    setIsDeletePopupVisible(false);\r\n    setUnitToDelete(null);\r\n  };\r\n\r\n  const handleEditUnit = (unit) => {\r\n    setEditUnit(unit); // Set data unit yang akan diedit\r\n    setIsModalOpen(true); // Buka modal\r\n  };\r\n\r\n  // Fungsi untuk menyimpan perubahan\r\n  const handleSaveUnit = () => {\r\n    if (!editUnit.name || !editUnit.shortName || !editUnit.value) {\r\n      alert(\"Please fill all required fields!\");\r\n      return;\r\n    }\r\n\r\n    setUnits((prevUnits) =>\r\n      prevUnits.map((unit) =>\r\n        unit.id === editUnit.id\r\n          ? { ...editUnit, value: parseFloat(editUnit.value) }\r\n          : unit\r\n      )\r\n    );\r\n\r\n    setIsModalOpen(false);\r\n    setEditUnit(null); // Reset setelah menyimpan\r\n  };\r\n\r\n  // Fungsi untuk menambah unit baru\r\n  const handleAddUnit = () => {\r\n    if (!newUnit.name || !newUnit.shortName || !newUnit.value) {\r\n      alert(\"Please fill all required fields!\");\r\n      return;\r\n    }\r\n    setUnits([\r\n      ...units,\r\n      {\r\n        id: units.length + 1,\r\n        ...newUnit,\r\n        value: parseFloat(newUnit.value),\r\n      },\r\n    ]);\r\n    setIsModalOpen(false);\r\n    setNewUnit({\r\n      name: \"\",\r\n      shortName: \"\",\r\n      operator: \"/\",\r\n      value: \"\",\r\n    });\r\n  };\r\n\r\n  const handleUpdateUnit = () => {\r\n    if (!editUnit.name || !editUnit.shortName || !editUnit.value) {\r\n      alert(\"Please fill all required fields!\");\r\n      return;\r\n    }\r\n    setUnits(\r\n      units.map((unit) =>\r\n        unit.id === editUnit.id ? { ...unit, ...editUnit } : unit\r\n      )\r\n    );\r\n    setIsModalOpen(false);\r\n    setIsEditMode(false);\r\n    setEditUnit(null);\r\n  };\r\n\r\n  const handleEditClick = (unit) => {\r\n    setEditUnit(unit);\r\n    setIsEditMode(true);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setIsModalOpen(false); // Close the modal\r\n  };\r\n\r\n  // Fungsi untuk menangani checkbox\r\n  const handleCheckboxChange = (id) => {\r\n    if (selectedUnits.includes(id)) {\r\n      setSelectedUnits((prev) => prev.filter((unitId) => unitId !== id));\r\n    } else {\r\n      setSelectedUnits((prev) => [...prev, id]);\r\n    }\r\n  };\r\n\r\n  // Fungsi untuk memilih semua checkbox\r\n  const handleSelectAll = (isChecked) => {\r\n    if (isChecked) {\r\n      setSelectedUnits(filteredUnits.map((unit) => unit.id));\r\n    } else {\r\n      setSelectedUnits([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TitleCard title=\"Unit\" topMargin=\"mt-4\">\r\n      {/* Search Bar dan Create Button */}\r\n      <div className=\"flex justify-between mb-4 items-center\">\r\n        {/* Search Input */}\r\n        <div className=\"w-full sm:w-1/2\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            placeholder=\"Search by Name or Short Name\"\r\n            className=\"input input-bordered w-full\"\r\n          />\r\n        </div>\r\n\r\n        {/* Create Button */}\r\n        <div className=\"ml-4\">\r\n          <button\r\n            className=\"btn btn-primary flex items-center\"\r\n            onClick={() => {\r\n              setIsEditMode(false);\r\n              setIsModalOpen(true);\r\n              setNewUnit({\r\n                name: \"\",\r\n                shortName: \"\",\r\n                operator: \"/\",\r\n                value: \"\",\r\n              });\r\n            }}\r\n          >\r\n            <PlusIcon className=\"w-5 h-5 mr-1\" />\r\n            Create\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tabel Unit */}\r\n      <div className=\"mt-6 overflow-x-auto\">\r\n        <table className=\"table-auto w-full border-collapse border border-gray-300 dark:border-gray-700\">\r\n          <thead>\r\n            <tr className=\"bg-gray-200 dark:bg-gray-700\">\r\n              <th className=\"px-4 py-2 text-left\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"checkbox\"\r\n                  onChange={(e) => handleSelectAll(e.target.checked)}\r\n                  checked={\r\n                    filteredUnits.length > 0 &&\r\n                    selectedUnits.length === filteredUnits.length\r\n                  }\r\n                />\r\n              </th>\r\n              <th className=\"px-4 py-2 text-left\">Name</th>\r\n              <th className=\"px-4 py-2 text-left\">Short Name</th>\r\n              <th className=\"px-4 py-2 text-left\">Operator</th>\r\n              <th className=\"px-4 py-2 text-left\">Operation Value</th>\r\n              <th className=\"px-4 py-2 text-left\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredUnits.map((unit) => (\r\n              <tr\r\n                key={unit.id}\r\n                className=\"hover:bg-gray-50 dark:hover:bg-gray-900\"\r\n              >\r\n                <td className=\"px-4 py-2\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"checkbox\"\r\n                    checked={selectedUnits.includes(unit.id)}\r\n                    onChange={() => handleCheckboxChange(unit.id)}\r\n                  />\r\n                </td>\r\n                <td className=\"px-4 py-2\">{unit.name}</td>\r\n                <td className=\"px-4 py-2\">{unit.shortName}</td>\r\n                <td className=\"px-4 py-2\">{unit.operator}</td>\r\n                <td className=\"px-4 py-2\">{unit.value}</td>\r\n                <td className=\"px-4 py-2 flex space-x-2\">\r\n                  <button\r\n                    onClick={() => handleEditUnit(unit)}\r\n                    className=\"btn btn-sm btn-warning flex items-center\"\r\n                  >\r\n                    <PencilSquareIcon className=\"w-5 h-5 mr-1\" />\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-sm btn-error\"\r\n                    onClick={() => handleDeleteUnit(unit)}\r\n                  >\r\n                    <TrashIcon className=\"w-5 h-5\" />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Modal */}\r\n      {isModalOpen && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center\">\r\n          <div className=\"bg-white dark:bg-gray-800 dark:text-gray-200 p-6 rounded-lg shadow-lg w-1/3\">\r\n            {/* Header Modal */}\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h2 className=\"text-xl font-bold\">\r\n                {editUnit ? \"Edit Unit\" : \"Create Unit\"}\r\n              </h2>\r\n              <button\r\n                onClick={() => {\r\n                  setIsModalOpen(false);\r\n                  setEditUnit(null); // Reset jika modal ditutup\r\n                }}\r\n                className=\"btn btn-sm btn-ghost text-gray-800 dark:text-gray-300\"\r\n              >\r\n                <XMarkIcon className=\"w-5 h-5\" />\r\n              </button>\r\n            </div>\r\n\r\n            {/* Form Inputs */}\r\n            <div className=\"mb-4\">\r\n              <label className=\"block mb-1 text-sm font-medium\">Name*</label>\r\n              <input\r\n                type=\"text\"\r\n                value={editUnit ? editUnit.name : newUnit.name}\r\n                onChange={(e) =>\r\n                  editUnit\r\n                    ? setEditUnit({ ...editUnit, name: e.target.value })\r\n                    : setNewUnit({ ...newUnit, name: e.target.value })\r\n                }\r\n                className=\"input input-bordered w-full bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block mb-1 text-sm font-medium\">\r\n                Short Name*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={editUnit ? editUnit.shortName : newUnit.shortName}\r\n                onChange={(e) =>\r\n                  editUnit\r\n                    ? setEditUnit({ ...editUnit, shortName: e.target.value })\r\n                    : setNewUnit({ ...newUnit, shortName: e.target.value })\r\n                }\r\n                className=\"input input-bordered w-full bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block mb-1 text-sm font-medium\">Operator</label>\r\n              <select\r\n                value={editUnit ? editUnit.operator : newUnit.operator}\r\n                onChange={(e) =>\r\n                  editUnit\r\n                    ? setEditUnit({ ...editUnit, operator: e.target.value })\r\n                    : setNewUnit({ ...newUnit, operator: e.target.value })\r\n                }\r\n                className=\"select select-bordered w-full bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n              >\r\n                <option value=\"/\">Divide</option>\r\n                <option value=\"*\">Multiply</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block mb-1 text-sm font-medium\">\r\n                Operation Value*\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={editUnit ? editUnit.value : newUnit.value}\r\n                onChange={(e) =>\r\n                  editUnit\r\n                    ? setEditUnit({ ...editUnit, value: e.target.value })\r\n                    : setNewUnit({ ...newUnit, value: e.target.value })\r\n                }\r\n                className=\"input input-bordered w-full bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\"\r\n              />\r\n            </div>\r\n\r\n            {/* Footer Modal */}\r\n            <div className=\"flex justify-end space-x-2\">\r\n              <button\r\n                onClick={() => {\r\n                  setIsModalOpen(false);\r\n                  setEditUnit(null);\r\n                }}\r\n                className=\"btn btn-ghost text-gray-700 dark:text-gray-300\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={editUnit ? handleSaveUnit : handleAddUnit}\r\n                className=\"btn btn-primary bg-blue-500 hover:bg-blue-600 text-white dark:bg-blue-700 dark:hover:bg-blue-800\"\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isDeletePopupVisible && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-lg\">\r\n            <h3 className=\"text-lg font-bold text-gray-800 dark:text-gray-200\">\r\n              Delete Confirmation\r\n            </h3>\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-2\">\r\n              Are you sure you want to delete this unit?\r\n            </p>\r\n            <div className=\"flex justify-end space-x-4 mt-4\">\r\n              <button\r\n                onClick={cancelDelete}\r\n                className=\"btn btn-neutral text-gray-800 dark:text-gray-200 dark:bg-gray-700\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={confirmDeleteUnit}\r\n                className=\"btn btn-danger text-gray-100 dark:text-white dark:bg-red-600\"\r\n              >\r\n                Confirm\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TitleCard>\r\n  );\r\n};\r\n\r\nexport default UnitPage;\r\n","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport UnitPage from '../../features/product/unit'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Product | Unit |\"}))\r\n      }, [])\r\n\r\n\r\n    return(\r\n        < UnitPage />\r\n    )\r\n}\r\n\r\nexport default InternalPage","import React, { useState } from \"react\";\r\nimport TitleCard from \"../../../components/Cards/TitleCard\"; // Menggunakan TitleCard yang sama\r\nimport {\r\n  PencilSquareIcon,\r\n  TrashIcon,\r\n  PlusIcon,\r\n  XMarkIcon,\r\n} from \"@heroicons/react/24/outline\";\r\n\r\nconst BrandPage = () => {\r\n  const [brands, setBrands] = useState([\r\n    { id: 1, name: \"Brand A\", description: \"Description of Brand A\" },\r\n    { id: 2, name: \"Brand B\", description: \"Description of Brand B\" },\r\n    { id: 3, name: \"Brand C\", description: \"Description of Brand C\" },\r\n    { id: 4, name: \"Brand D\", description: \"Description of Brand D\" },\r\n    { id: 5, name: \"Brand E\", description: \"Description of Brand E\" },\r\n  ]);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [selectedBrands, setSelectedBrands] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false); // State untuk edit modal\r\n  const [newBrand, setNewBrand] = useState({ name: \"\", description: \"\" });\r\n  const [editBrand, setEditBrand] = useState(null); // State untuk menyimpan brand yang akan diedit\r\n  const [isDeletePopupVisible, setIsDeletePopupVisible] = useState(false); // Untuk menampilkan/menghilangkan popup delete\r\n  const [brandToDelete, setBrandToDelete] = useState(null);\r\n\r\n  const filteredBrands = brands.filter(\r\n    (brand) =>\r\n      brand.name.toLowerCase().includes(searchText.toLowerCase()) ||\r\n      brand.description.toLowerCase().includes(searchText.toLowerCase())\r\n  );\r\n\r\n  const handleAddBrand = () => {\r\n    if (!newBrand.name || !newBrand.description) {\r\n      alert(\"Please fill all required fields!\");\r\n      return;\r\n    }\r\n    setBrands([...brands, { id: brands.length + 1, ...newBrand }]);\r\n    setIsModalOpen(false);\r\n    setNewBrand({ name: \"\", description: \"\" });\r\n  };\r\n\r\n  const handleEditClick = (brand) => {\r\n    setEditBrand({ ...brand });\r\n    setIsEditModalOpen(true);\r\n  };\r\n\r\n  const handleEditSave = () => {\r\n    if (!editBrand.name || !editBrand.description) {\r\n      alert(\"Please fill all required fields!\");\r\n      return;\r\n    }\r\n    setBrands(\r\n      brands.map((brand) =>\r\n        brand.id === editBrand.id ? { ...editBrand } : brand\r\n      )\r\n    );\r\n    setIsEditModalOpen(false);\r\n    setEditBrand(null);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const confirmDelete = window.confirm(\r\n      \"Are you sure you want to delete this brand?\"\r\n    );\r\n    if (confirmDelete) {\r\n      setBrands(brands.filter((brand) => brand.id !== id));\r\n      setSelectedBrands(\r\n        selectedBrands.filter((selectedId) => selectedId !== id)\r\n      );\r\n    }\r\n  };\r\n  // Fungsi untuk menangani checkbox\r\n  const handleCheckboxChange = (id) => {\r\n    if (selectedBrands.includes(id)) {\r\n      setSelectedBrands((prev) => prev.filter((brandId) => brandId !== id));\r\n    } else {\r\n      setSelectedBrands((prev) => [...prev, id]);\r\n    }\r\n  };\r\n\r\n  // Fungsi untuk memilih semua checkbox\r\n  const handleSelectAll = (isChecked) => {\r\n    if (isChecked) {\r\n      setSelectedBrands(filteredBrands.map((brand) => brand.id));\r\n    } else {\r\n      setSelectedBrands([]);\r\n    }\r\n  };\r\n\r\n  const handleDeleteBrand = (brand) => {\r\n    setBrandToDelete(brand);\r\n    setIsDeletePopupVisible(true);\r\n  };\r\n\r\n  const confirmDeleteBrand = () => {\r\n    setBrands((prevBrand) =>\r\n      prevBrand.filter((brand) => brand.id !== brandToDelete.id)\r\n    );\r\n    setIsDeletePopupVisible(false);\r\n    setBrandToDelete(null);\r\n  };\r\n\r\n  const cancelDelete = () => {\r\n    setIsDeletePopupVisible(false);\r\n    setBrandToDelete(null);\r\n  };\r\n\r\n  return (\r\n    <TitleCard title=\"Brand\" topMargin=\"mt-4\">\r\n      {/* Search Bar dan Create Button */}\r\n      <div className=\"flex justify-between mb-4 items-center\">\r\n        <div className=\"w-full sm:w-1/2\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            placeholder=\"Search by Name or Description\"\r\n            className=\"input input-bordered w-full\"\r\n          />\r\n        </div>\r\n        {/* Create Button */}\r\n        <div className=\"ml-4\">\r\n          <button\r\n            className=\"btn btn-primary flex items-center\"\r\n            onClick={() => setIsModalOpen(true)}\r\n          >\r\n            <PlusIcon className=\"w-5 h-5 mr-1\" />\r\n            Create\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tabel Brand */}\r\n      <div className=\"mt-6 overflow-x-auto\">\r\n        <table className=\"table-auto w-full border-collapse border border-gray-300 dark:border-gray-700\">\r\n          <thead>\r\n            <tr className=\"bg-gray-200 dark:bg-gray-700\">\r\n              <th className=\"px-4 py-2 text-left\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"checkbox\"\r\n                  onChange={(e) => handleSelectAll(e.target.checked)}\r\n                  checked={\r\n                    filteredBrands.length > 0 &&\r\n                    selectedBrands.length === filteredBrands.length\r\n                  }\r\n                />\r\n              </th>\r\n              <th className=\"px-4 py-2 text-left\">Brand Name</th>\r\n              <th className=\"px-4 py-2 text-left\">Brand Description</th>\r\n              <th className=\"px-4 py-2 text-left\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredBrands.map((brand) => (\r\n              <tr\r\n                key={brand.id}\r\n                className=\"hover:bg-gray-50 dark:hover:bg-gray-900\"\r\n              >\r\n                <td className=\"px-4 py-2\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"checkbox\"\r\n                    checked={selectedBrands.includes(brand.id)}\r\n                    onChange={() => handleCheckboxChange(brand.id)}\r\n                  />\r\n                </td>\r\n                <td className=\"px-4 py-2\">{brand.name}</td>\r\n                <td className=\"px-4 py-2\">{brand.description}</td>\r\n                <td className=\"px-4 py-2 flex space-x-2\">\r\n                  <button\r\n                    onClick={() => handleEditClick(brand)}\r\n                    className=\"btn btn-sm btn-warning flex items-center\"\r\n                  >\r\n                    <PencilSquareIcon className=\"w-5 h-5 mr-1\" />\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-sm btn-error\"\r\n                    onClick={() => handleDeleteBrand(brand)}\r\n                  >\r\n                    <TrashIcon className=\"w-5 h-5\" />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Modal */}\r\n      {isModalOpen && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center\">\r\n          <div className=\"bg-white dark:bg-gray-800 dark:text-gray-200 p-6 rounded-lg shadow-lg w-1/3\">\r\n            {/* Header Modal */}\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h2 className=\"text-xl font-bold\">Create Brand</h2>\r\n              <button\r\n                onClick={() => setIsModalOpen(false)}\r\n                className=\"btn btn-sm btn-ghost text-gray-800 dark:text-gray-300\"\r\n              >\r\n                <XMarkIcon className=\"w-5 h-5\" />\r\n              </button>\r\n            </div>\r\n\r\n            {/* Form Inputs */}\r\n            <div className=\"mb-4\">\r\n              <label className=\"block mb-1 text-sm font-medium\">\r\n                Brand Name*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={newBrand.name}\r\n                onChange={(e) =>\r\n                  setNewBrand({ ...newBrand, name: e.target.value })\r\n                }\r\n                className=\"input input-bordered w-full bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block mb-1 text-sm font-medium\">\r\n                Brand Description*\r\n              </label>\r\n              <textarea\r\n                value={newBrand.description}\r\n                onChange={(e) =>\r\n                  setNewBrand({ ...newBrand, description: e.target.value })\r\n                }\r\n                className=\"input input-bordered w-full bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\"\r\n              />\r\n            </div>\r\n\r\n            {/* Footer Modal */}\r\n            <div className=\"flex justify-end space-x-2\">\r\n              <button\r\n                onClick={() => setIsModalOpen(false)}\r\n                className=\"btn btn-ghost text-gray-700 dark:text-gray-300\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleAddBrand}\r\n                className=\"btn btn-primary bg-blue-500 hover:bg-blue-600 text-white dark:bg-blue-700 dark:hover:bg-blue-800\"\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal Edit */}\r\n      {isEditModalOpen && editBrand && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center\">\r\n          <div className=\"bg-white dark:bg-gray-800 dark:text-gray-200 p-6 rounded-lg shadow-lg w-1/3\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h2 className=\"text-xl font-bold\">Edit Brand</h2>\r\n              <button\r\n                onClick={() => setIsEditModalOpen(false)}\r\n                className=\"btn btn-sm btn-ghost text-gray-800 dark:text-gray-300\"\r\n              >\r\n                <XMarkIcon className=\"w-5 h-5\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"mb-4\">\r\n              <label className=\"block mb-1 text-sm font-medium\">\r\n                Brand Name*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={editBrand.name}\r\n                onChange={(e) =>\r\n                  setEditBrand({ ...editBrand, name: e.target.value })\r\n                }\r\n                className=\"input input-bordered w-full bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block mb-1 text-sm font-medium\">\r\n                Brand Description*\r\n              </label>\r\n              <textarea\r\n                value={editBrand.description}\r\n                onChange={(e) =>\r\n                  setEditBrand({ ...editBrand, description: e.target.value })\r\n                }\r\n                className=\"input input-bordered w-full bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex justify-end space-x-2\">\r\n              <button\r\n                onClick={() => setIsEditModalOpen(false)}\r\n                className=\"btn btn-ghost text-gray-700 dark:text-gray-300\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleEditSave}\r\n                className=\"btn btn-primary bg-blue-500 hover:bg-blue-600 text-white dark:bg-blue-700 dark:hover:bg-blue-800\"\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isDeletePopupVisible && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n          <div className=\"bg-white dark:bg-gray-800 dark:text-gray-200 rounded-lg p-6 shadow-lg\">\r\n            <h3 className=\"text-lg font-bold\">Delete Confirmation</h3>\r\n            <p className=\"text-sm mt-2\">\r\n              Are you sure you want to delete this brand?\r\n            </p>\r\n            <div className=\"flex justify-end space-x-4 mt-4\">\r\n              {/* Tombol Cancel */}\r\n              <button\r\n                onClick={cancelDelete}\r\n                className=\"btn btn-neutral bg-gray-200 dark:bg-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600\"\r\n              >\r\n                Cancel\r\n              </button>\r\n\r\n              {/* Tombol Confirm */}\r\n              <button\r\n                onClick={confirmDeleteBrand}\r\n                className=\"btn btn-danger bg-red-500 dark:bg-red-600 hover:bg-red-600 dark:hover:bg-red-700 text-white\"\r\n              >\r\n                Confirm\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TitleCard>\r\n  );\r\n};\r\n\r\nexport default BrandPage;\r\n","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport BrandPage from '../../features/product/brand'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Product | Brand |\"}))\r\n      }, [])\r\n\r\n\r\n    return(\r\n        < BrandPage />\r\n    )\r\n}\r\n\r\nexport default InternalPage","import React, { useState } from \"react\";\r\nimport TitleCard from \"../../components/Cards/TitleCard\";\r\nimport {\r\n  PencilSquareIcon,\r\n  TrashIcon,\r\n  PlusIcon,\r\n  XMarkIcon,\r\n} from \"@heroicons/react/24/outline\";\r\n\r\nconst WarehousePage = () => {\r\n  // Data awal warehouse\r\n  const [warehouses, setWarehouses] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"Warehouse 1\",\r\n      phone: \"0819281021\",\r\n      country: \"indonesia\",\r\n      city: \"jakarta\",\r\n      email: \"admin@gmail.com\",\r\n      zipcode: \"1234\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Warehouse 2\",\r\n      phone: \"0819281021\",\r\n      country: \"indonesia\",\r\n      city: \"jakarta\",\r\n      email: \"admin@gmail.com\",\r\n      zipcode: \"1234\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Warehouse 1\",\r\n      phone: \"0819281021\",\r\n      country: \"indonesia\",\r\n      city: \"Surabaya\",\r\n      email: \"admin@gmail.com\",\r\n      zipcode: \"1234\",\r\n    },\r\n  ]);\r\n  const [searchText, setSearchText] = useState(\"\"); // Untuk pencarian\r\n  const [selectedWarehouses, setSelectedWarehouses] = useState([]); // Untuk checkbox\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // Modal state\r\n  const [isEditMode, setIsEditMode] = useState(false); // Untuk membedakan Create/Edit\r\n  const [editWarehouse, setEditWarehouse] = useState(null); // Data warehouse yang sedang diedit\r\n  const [newWarehouse, setNewWarehouse] = useState({\r\n    name: \"\",\r\n    phone: \"\",\r\n    country: \"\",\r\n    city: \"\",\r\n    email: \"\",\r\n    zipcode: \"\",\r\n  });\r\n\r\n  const [warehouseToDelete, setWarehouseToDelete] = useState(null); // Untuk konfirmasi hapus\r\n  const [isDeletePopupVisible, setIsDeletePopupVisible] = useState(false); // Kontrol popup hapus\r\n\r\n  // Filter warehouse berdasarkan pencarian\r\n  const filteredWarehouses = warehouses.filter(\r\n    (warehouse) =>\r\n      warehouse.name.toLowerCase().includes(searchText.toLowerCase()) ||\r\n      warehouse.country.toLowerCase().includes(searchText.toLowerCase()) ||\r\n      warehouse.city.toLowerCase().includes(searchText.toLowerCase()) ||\r\n      warehouse.zipcode.toLowerCase().includes(searchText.toLowerCase())\r\n  );\r\n\r\n  // Fungsi hapus warehouse\r\n  const handleDeleteWarehouse = (warehouse) => {\r\n    setWarehouseToDelete(warehouse);\r\n    setIsDeletePopupVisible(true);\r\n  };\r\n\r\n  const confirmDeleteWarehouse = () => {\r\n    setWarehouses((prevState) =>\r\n      prevState.filter((warehouse) => warehouse.id !== warehouseToDelete.id)\r\n    );\r\n    setIsDeletePopupVisible(false);\r\n    setWarehouseToDelete(null);\r\n  };\r\n\r\n  const cancelDelete = () => {\r\n    setIsDeletePopupVisible(false);\r\n    setWarehouseToDelete(null);\r\n  };\r\n\r\n  // Fungsi tambah dan edit warehouse\r\n  const handleSaveWarehouse = () => {\r\n    if (\r\n      !editWarehouse.name ||\r\n      !editWarehouse.phone ||\r\n      !editWarehouse.country ||\r\n      !editWarehouse.city ||\r\n      !editWarehouse.email ||\r\n      !editWarehouse.zipcode\r\n    ) {\r\n      alert(\"Please fill all required fields!\");\r\n      return;\r\n    }\r\n    setWarehouses((prevState) =>\r\n      prevState.map((warehouse) =>\r\n        warehouse.id === editWarehouse.id ? editWarehouse : warehouse\r\n      )\r\n    );\r\n    setIsModalOpen(false);\r\n    setEditWarehouse(null);\r\n  };\r\n\r\n  const handleAddWarehouse = () => {\r\n    if (\r\n      !newWarehouse.name ||\r\n      !newWarehouse.phone ||\r\n      !newWarehouse.country ||\r\n      !newWarehouse.city ||\r\n      !newWarehouse.email ||\r\n      !newWarehouse.zipcode\r\n    ) {\r\n      alert(\"Please fill all required fields!\");\r\n      return;\r\n    }\r\n    setWarehouses([\r\n      ...warehouses,\r\n      { id: warehouses.length + 1, ...newWarehouse },\r\n    ]);\r\n    setIsModalOpen(false);\r\n    setNewWarehouse({\r\n      name: \"\",\r\n      phone: \"\",\r\n      country: \"\",\r\n      city: \"\",\r\n      email: \"\",\r\n      zipcode: \"\",\r\n    });\r\n  };\r\n\r\n  // Fungsi modal\r\n  const handleEditWarehouse = (warehouse) => {\r\n    setEditWarehouse(warehouse);\r\n    setIsModalOpen(true);\r\n    setIsEditMode(true);\r\n  };\r\n\r\n  const handleCheckboxChange = (id) => {\r\n    setSelectedWarehouses((prev) =>\r\n      prev.includes(id) ? prev.filter((wid) => wid !== id) : [...prev, id]\r\n    );\r\n  };\r\n\r\n  const handleSelectAll = (isChecked) => {\r\n    if (isChecked) {\r\n      setSelectedWarehouses(filteredWarehouses.map((w) => w.id));\r\n    } else {\r\n      setSelectedWarehouses([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TitleCard title=\"Warehouse\" topMargin=\"mt-4\">\r\n      {/* Search Bar dan Create Button */}\r\n      <div className=\"flex justify-between mb-4 items-center\">\r\n        <div className=\"w-full sm:w-1/2\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            placeholder=\"Search by Name or Location\"\r\n            className=\"input input-bordered w-full\"\r\n          />\r\n        </div>\r\n        <div className=\"ml-4\">\r\n          <button\r\n            className=\"btn btn-primary flex items-center\"\r\n            onClick={() => {\r\n              setIsEditMode(false);\r\n              setIsModalOpen(true);\r\n              setNewWarehouse({\r\n                name: \"\",\r\n                phone: \"\",\r\n                country: \"\",\r\n                city: \"\",\r\n                email: \"\",\r\n                zipcode: \"\",\r\n              });\r\n            }}\r\n          >\r\n            <PlusIcon className=\"w-5 h-5 mr-1\" />\r\n            Create\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Table Warehouse */}\r\n      <div className=\"mt-6 overflow-x-auto\">\r\n        <table className=\"table-auto w-full border-collapse border border-gray-300 dark:border-gray-700\">\r\n          <thead>\r\n            <tr className=\"bg-gray-200 dark:bg-gray-700\">\r\n              <th className=\"px-4 py-2 text-left\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"checkbox\"\r\n                  onChange={(e) => handleSelectAll(e.target.checked)}\r\n                  checked={\r\n                    filteredWarehouses.length > 0 &&\r\n                    selectedWarehouses.length === filteredWarehouses.length\r\n                  }\r\n                />\r\n              </th>\r\n              <th className=\"px-4 py-2 text-left\">Name</th>\r\n              <th className=\"px-4 py-2 text-left\">Phone</th>\r\n              <th className=\"px-4 py-2 text-left\">Country</th>\r\n              <th className=\"px-4 py-2 text-left\">City</th>\r\n              <th className=\"px-4 py-2 text-left\">Email</th>\r\n              <th className=\"px-4 py-2 text-left\">Zip Code</th>\r\n              <th className=\"px-4 py-2 text-left\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredWarehouses.map((warehouse) => (\r\n              <tr\r\n                key={warehouse.id}\r\n                className=\"hover:bg-gray-50 dark:hover:bg-gray-900\"\r\n              >\r\n                <td className=\"px-4 py-2\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"checkbox\"\r\n                    checked={selectedWarehouses.includes(warehouse.id)}\r\n                    onChange={() => handleCheckboxChange(warehouse.id)}\r\n                  />\r\n                </td>\r\n                <td className=\"px-4 py-2\">{warehouse.name}</td>\r\n                <td className=\"px-4 py-2\">{warehouse.phone}</td>\r\n                <td className=\"px-4 py-2\">{warehouse.country}</td>\r\n                <td className=\"px-4 py-2\">{warehouse.city}</td>\r\n                <td className=\"px-4 py-2\">{warehouse.email}</td>\r\n                <td className=\"px-4 py-2\">{warehouse.zipcode}</td>\r\n                <td className=\"px-4 py-2 flex space-x-2\">\r\n                  <button\r\n                    onClick={() => handleEditWarehouse(warehouse)}\r\n                    className=\"btn btn-sm btn-warning flex items-center\"\r\n                  >\r\n                    <PencilSquareIcon className=\"w-5 h-5 mr-1\" />\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-sm btn-error\"\r\n                    onClick={() => handleDeleteWarehouse(warehouse)}\r\n                  >\r\n                    <TrashIcon className=\"w-5 h-5\" />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Modal */}\r\n      {isModalOpen && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg w-1/3\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h2 className=\"text-xl font-bold\">\r\n                {isEditMode ? \"Edit Warehouse\" : \"Create Warehouse\"}\r\n              </h2>\r\n              <button\r\n                onClick={() => setIsModalOpen(false)}\r\n                className=\"btn btn-sm btn-ghost\"\r\n              >\r\n                <XMarkIcon className=\"w-5 h-5\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-sm font-medium mb-1\">Name*</label>\r\n              <input\r\n                type=\"text\"\r\n                value={isEditMode ? editWarehouse.name : newWarehouse.name}\r\n                onChange={(e) =>\r\n                  isEditMode\r\n                    ? setEditWarehouse({\r\n                        ...editWarehouse,\r\n                        name: e.target.value,\r\n                      })\r\n                    : setNewWarehouse({ ...newWarehouse, name: e.target.value })\r\n                }\r\n                className=\"input input-bordered w-full\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-sm font-medium mb-1\">Phone*</label>\r\n              <input\r\n                type=\"text\"\r\n                value={isEditMode ? editWarehouse.phone : newWarehouse.phone}\r\n                onChange={(e) =>\r\n                  isEditMode\r\n                    ? setEditWarehouse({\r\n                        ...editWarehouse,\r\n                        phone: e.target.value,\r\n                      })\r\n                    : setNewWarehouse({\r\n                        ...newWarehouse,\r\n                        phone: e.target.value,\r\n                      })\r\n                }\r\n                className=\"input input-bordered w-full\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-sm font-medium mb-1\">Country*</label>\r\n              <input\r\n                type=\"text\"\r\n                value={\r\n                  isEditMode ? editWarehouse.country : newWarehouse.country\r\n                }\r\n                onChange={(e) =>\r\n                  isEditMode\r\n                    ? setEditWarehouse({\r\n                        ...editWarehouse,\r\n                        country: e.target.value,\r\n                      })\r\n                    : setNewWarehouse({\r\n                        ...newWarehouse,\r\n                        country: e.target.value,\r\n                      })\r\n                }\r\n                className=\"input input-bordered w-full\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-sm font-medium mb-1\">City*</label>\r\n              <input\r\n                type=\"text\"\r\n                value={isEditMode ? editWarehouse.city : newWarehouse.city}\r\n                onChange={(e) =>\r\n                  isEditMode\r\n                    ? setEditWarehouse({\r\n                        ...editWarehouse,\r\n                        city: e.target.value,\r\n                      })\r\n                    : setNewWarehouse({\r\n                        ...newWarehouse,\r\n                        city: e.target.value,\r\n                      })\r\n                }\r\n                className=\"input input-bordered w-full\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-sm font-medium mb-1\">Email*</label>\r\n              <input\r\n                type=\"text\"\r\n                value={isEditMode ? editWarehouse.email : newWarehouse.email}\r\n                onChange={(e) =>\r\n                  isEditMode\r\n                    ? setEditWarehouse({\r\n                        ...editWarehouse,\r\n                        email: e.target.value,\r\n                      })\r\n                    : setNewWarehouse({\r\n                        ...newWarehouse,\r\n                        email: e.target.value,\r\n                      })\r\n                }\r\n                className=\"input input-bordered w-full\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-sm font-medium mb-1\">\r\n                Zip Code*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={\r\n                  isEditMode ? editWarehouse.zipcode : newWarehouse.zipcode\r\n                }\r\n                onChange={(e) =>\r\n                  isEditMode\r\n                    ? setEditWarehouse({\r\n                        ...editWarehouse,\r\n                        zipcode: e.target.value,\r\n                      })\r\n                    : setNewWarehouse({\r\n                        ...newWarehouse,\r\n                        zipcode: e.target.value,\r\n                      })\r\n                }\r\n                className=\"input input-bordered w-full\"\r\n              />\r\n            </div>\r\n            <div className=\"flex justify-end space-x-2\">\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={() => setIsModalOpen(false)}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={isEditMode ? handleSaveWarehouse : handleAddWarehouse}\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Delete Confirmation */}\r\n      {isDeletePopupVisible && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg w-1/3\">\r\n            <h2 className=\"text-lg font-bold mb-4\">Confirm Delete</h2>\r\n            <p>\r\n              Are you sure you want to delete warehouse{\" \"}\r\n              <span className=\"font-semibold\">{warehouseToDelete.name}</span>?\r\n            </p>\r\n            <div className=\"flex justify-end space-x-2 mt-4\">\r\n              <button className=\"btn btn-secondary\" onClick={cancelDelete}>\r\n                Cancel\r\n              </button>\r\n              <button\r\n                className=\"btn btn-error\"\r\n                onClick={confirmDeleteWarehouse}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TitleCard>\r\n  );\r\n};\r\n\r\nexport default WarehousePage;\r\n","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport WarehousePage from '../../features/warehouse/warehouse'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Warehouse | Warehouses |\"}))\r\n      }, [])\r\n\r\n\r\n    return(\r\n        < WarehousePage />\r\n    )\r\n}\r\n\r\nexport default InternalPage","import React, { useState } from \"react\";\r\nimport TitleCard from \"../../components/Cards/TitleCard\";\r\nimport InputText from \"../../components/Input/InputText\";\r\nimport TextAreaInput from \"../../components/Input/TextAreaInput\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { showNotification } from \"../common/headerSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\r\nimport { QrCodeIcon } from \"@heroicons/react/24/outline\";\r\n\r\nconst CreateTransfer = () => {\r\n  const dispatch = useDispatch();\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [form, setForm] = useState({\r\n    date: \"\",\r\n    fromWarehouse: \"\",\r\n    toWarehouse: \"\",\r\n    orderItems: [],  // Tambahkan orderItems di sini\r\n    orderTax: 0,\r\n    discount: 0,\r\n    shipping: 0,\r\n    status: \"\",\r\n    note: \"\",\r\n  });\r\n\r\n  const calculateTotal = () => {\r\n    const totalSubtotal = form.orderItems.reduce(\r\n      (total, item) => total + item.subtotal,\r\n      0\r\n    );\r\n    return totalSubtotal + form.orderTax - form.discount + form.shipping;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // Validasi tanggal\r\n    if (!selectedDate) {\r\n      dispatch(\r\n        showNotification({\r\n          message: \"Please select a date\",\r\n          status: 0,\r\n        })\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Validasi dropdown: Pastikan pilihan tidak kosong\r\n    if (\r\n      !form.fromWarehouse ||\r\n      form.fromWarehouse === \"\" ||\r\n      !form.toWarehouse ||\r\n      form.toWarehouse === \"\"\r\n    ) {\r\n      dispatch(\r\n        showNotification({\r\n          message: \"Please select both warehouses\",\r\n          status: 0,\r\n        })\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Validasi status\r\n    if (!form.status || form.status === \"\") {\r\n      dispatch(\r\n        showNotification({\r\n          message: \"Please select a transfer status\",\r\n          status: 0,\r\n        })\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Validasi input numerik (pastikan ada nilai yang valid)\r\n    if (\r\n      form.orderTax === \"\" ||\r\n      form.orderTax === 0 ||\r\n      form.discount === \"\" ||\r\n      form.discount === 0 ||\r\n      form.shipping === \"\" ||\r\n      form.shipping === 0\r\n    ) {\r\n      dispatch(\r\n        showNotification({\r\n          message:\r\n            \"Please enter valid values for Order Tax, Discount, and Shipping\",\r\n          status: 0,\r\n        })\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Validasi apakah semua form terisi dengan benar\r\n    const isValid = Object.keys(form).every((key) => {\r\n      if (key === \"orderTax\" || key === \"discount\" || key === \"shipping\") {\r\n        // Validasi input numerik: harus ada nilai yang valid\r\n        return form[key] !== \"\" && form[key] !== 0;\r\n      }\r\n      // Validasi string dan dropdown\r\n      return form[key] !== \"\" && form[key] !== null;\r\n    });\r\n\r\n    if (isValid) {\r\n      dispatch(\r\n        showNotification({\r\n          message: \"Transfer Created Successfully\",\r\n          status: 1,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        showNotification({\r\n          message: \"Please fill all required fields\",\r\n          status: 0,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const [scanning, setScanning] = useState(false);\r\n  const [productCode, setProductCode] = useState(\"\");\r\n\r\n  const toggleScanner = () => {\r\n    setScanning(!scanning);\r\n  };\r\n\r\n  const handleBarcodeScan = (data) => {\r\n    if (data) {\r\n      setProductCode(data.text);\r\n      setScanning(false);\r\n    }\r\n  };\r\n\r\n  const updateFormValue = ({ updateType, value }) => {\r\n    setForm((prevForm) => ({\r\n      ...prevForm,\r\n      [updateType]: value,\r\n    }));\r\n  };\r\n\r\n  const totalSubtotal = form.orderItems.reduce(\r\n    (total, item) => total + item.subtotal,\r\n    0\r\n  );\r\n  const total = calculateTotal(); // Menghitung total berdasarkan orderItems, orderTax, discount, dan shipping\r\n\r\n  return (\r\n    <>\r\n      {/* Title Card */}\r\n      <TitleCard title=\"Create Transfer\" topMargin=\"mt-2\">\r\n        <div className=\"grid grid-cols-1 gap-6\">\r\n          {/* Date */}\r\n          <div className=\"flex left-6 mb-4\">\r\n            <div className=\"w-full sm:w-1/2\">\r\n              <DatePicker\r\n                selected={selectedDate}\r\n                onChange={(date) => setSelectedDate(date)}\r\n                className=\"input input-bordered w-full\"\r\n                placeholderText=\"Select a date\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* From and To Warehouse */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <InputText\r\n              labelTitle=\"From Warehouse\"\r\n              updateType=\"fromWarehouse\"\r\n              defaultValue=\"\"\r\n              placeholder=\"Select source warehouse\"\r\n              updateFormValue={updateFormValue}\r\n              isDropdown={true}\r\n              options={[\r\n                { label: \"Choose Warehouse\", value: \"\" },\r\n                { label: \"Warehouse A\", value: \"Warehouse A\" },\r\n                { label: \"Warehouse B\", value: \"Warehouse B\" },\r\n              ]}\r\n            />\r\n            <InputText\r\n              labelTitle=\"To Warehouse\"\r\n              updateType=\"toWarehouse\"\r\n              defaultValue=\"\"\r\n              placeholder=\"Select destination warehouse\"\r\n              updateFormValue={updateFormValue}\r\n              isDropdown={true}\r\n              options={[\r\n                { label: \"Choose Warehouse\", value: \"\" },\r\n                { label: \"Warehouse C\", value: \"Warehouse C\" },\r\n                { label: \"Warehouse D\", value: \"Warehouse D\" },\r\n              ]}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Code Product\r\n            </label>\r\n            <div className=\"relative flex items-center\">\r\n              <input\r\n                type=\"text\"\r\n                value={productCode}\r\n                onChange={(e) => setProductCode(e.target.value)}\r\n                placeholder=\"Scan or Search Product By Code\"\r\n                className=\"input input-bordered w-full\"\r\n              />\r\n              <button\r\n                onClick={toggleScanner}\r\n                className=\"btn btn-primary ml-2 flex items-center\"\r\n              >\r\n                <QrCodeIcon className=\"w-5 h-5 mr-1\" />\r\n                Scan\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Barcode Scanner */}\r\n          {scanning && (\r\n            <div className=\"mt-4\">\r\n              <BarcodeScannerComponent\r\n                onUpdate={(err, result) => {\r\n                  if (result) handleBarcodeScan(result);\r\n                }}\r\n                width={300}\r\n                height={300}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={toggleScanner}\r\n                className=\"btn btn-secondary mt-2\"\r\n              >\r\n                Close Scanner\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"mb-6\">\r\n            <table className=\"table-auto w-full border-collapse border border-gray-300 dark:border-gray-700\">\r\n              <thead>\r\n                <tr className=\"bg-gray-200 dark:bg-gray-700\">\r\n                  <th className=\"px-4 py-2 text-left text-sm font-medium text-gray-600 dark:text-gray-300\">\r\n                    Product\r\n                  </th>\r\n                  <th className=\"px-4 py-2 text-left text-sm font-medium text-gray-600 dark:text-gray-300\">\r\n                    Code Product\r\n                  </th>\r\n                  <th className=\"px-4 py-2 text-left text-sm font-medium text-gray-600 dark:text-gray-300\">\r\n                    Quantity\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td className=\"px-4 py-2 text-sm text-gray-700 dark:text-gray-300\">\r\n                    No data available\r\n                  </td>\r\n                  <td className=\"px-4 py-2 text-sm text-gray-700 dark:text-gray-300\">\r\n                    -\r\n                  </td>\r\n                  <td className=\"px-4 py-2 text-sm text-gray-700 dark:text-gray-300\">\r\n                    -\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {/* Total Summary */}\r\n          <div className=\"flex justify-end mb-6\">\r\n            <div className=\"text-sm text-right w-72\">\r\n              <div className=\"bg-[#D9D9D9] border-t border-b border-black p-2 flex justify-between\">\r\n                <span className=\"text-sm text-neutral font-medium\">\r\n                  Subtotal:\r\n                </span>\r\n                <span className=\"text-sm text-neutral font-medium\">\r\n                  ${totalSubtotal.toFixed(2)}\r\n                </span>\r\n              </div>\r\n              <div className=\"bg-base-100 border-t border-b border-black p-2 flex justify-between\">\r\n                <span className=\"text-sm  font-medium\">Order Tax:</span>\r\n                <span className=\"text-sm font-medium\">\r\n                  ${form.orderTax.toFixed(2)}\r\n                </span>\r\n              </div>\r\n              <div className=\"bg-[#D9D9D9] border-t border-b border-black p-2 flex justify-between\">\r\n                <span className=\"text-sm text-neutral font-medium\">\r\n                  Discount:\r\n                </span>\r\n                <span className=\"text-sm text-neutral font-medium\">\r\n                  ${form.discount.toFixed(2)}\r\n                </span>\r\n              </div>\r\n              <div className=\"bg-base-100 border-t border-b border-black p-2 flex justify-between\">\r\n                <span className=\"text-sm font-medium\">Shipping:</span>\r\n                <span className=\"text-sm font-medium\">\r\n                  ${form.shipping.toFixed(2)}\r\n                </span>\r\n              </div>\r\n              <div className=\"bg-[#D9D9D9] border-t border-b border-black p-2 flex justify-between\">\r\n                <span className=\"text-sm text-neutral font-bold\">\r\n                  Grand Total:\r\n                </span>\r\n                <span className=\"text-sm text-neutral font-bold\">\r\n                  ${total.toFixed(2)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Order Tax, Discount, and Shipping */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            <InputText\r\n              labelTitle=\"Order Tax\"\r\n              updateType=\"orderTax\"\r\n              defaultValue=\"\"\r\n              placeholder=\"Enter order tax\"\r\n              updateFormValue={updateFormValue}\r\n              inputType=\"number\"\r\n            />\r\n            <InputText\r\n              labelTitle=\"Discount\"\r\n              updateType=\"discount\"\r\n              defaultValue=\"\"\r\n              placeholder=\"Enter discount amount\"\r\n              updateFormValue={updateFormValue}\r\n              inputType=\"number\"\r\n            />\r\n            <InputText\r\n              labelTitle=\"Shipping\"\r\n              updateType=\"shipping\"\r\n              defaultValue=\"\"\r\n              placeholder=\"Enter shipping cost\"\r\n              updateFormValue={updateFormValue}\r\n              inputType=\"number\"\r\n            />\r\n          </div>\r\n\r\n          {/* Status */}\r\n          <InputText\r\n            labelTitle=\"Status\"\r\n            updateType=\"status\"\r\n            defaultValue=\"\"\r\n            placeholder=\"Select transfer status\"\r\n            updateFormValue={updateFormValue}\r\n            isDropdown={true}\r\n            options={[\r\n              { label: \"Choose Status\", value: \"\" },\r\n              { label: \"Pending\", value: \"Pending\" },\r\n              { label: \"Completed\", value: \"Completed\" },\r\n            ]}\r\n          />\r\n\r\n          {/* Note */}\r\n          <TextAreaInput\r\n            labelTitle=\"Note\"\r\n            updateType=\"note\"\r\n            defaultValue=\"\"\r\n            placeholder=\"Add any additional notes\"\r\n            updateFormValue={updateFormValue}\r\n          />\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <div className=\"mt-8\">\r\n          <button\r\n            className=\"btn btn-primary float-right\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </TitleCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateTransfer;\r\n","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport CreateTransfer from '../../features/warehouse/createTransfer'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Warehouse | Create Transfer |\"}))\r\n      }, [])\r\n\r\n\r\n    return(\r\n        < CreateTransfer />\r\n    )\r\n}\r\n\r\nexport default InternalPage","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\r\nimport {\r\n  MagnifyingGlassIcon,\r\n  FunnelIcon,\r\n  DocumentArrowDownIcon,\r\n  DocumentTextIcon,\r\n  PlusIcon,\r\n  PencilSquareIcon,\r\n  TrashIcon,\r\n  EyeIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport TitleCard from \"../../components/Cards/TitleCard\";\r\nimport FilterAllP from \"../filter\";\r\nimport TableComponent from \"../../components/Table/TableComponent\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { saveAs } from \"file-saver\"; // untuk men-download file\r\nimport { BsFilter, BsPower } from \"react-icons/bs\";\r\n\r\nfunction AllTransfer() {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [isFilterVisible, setIsFilterVisible] = useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isDeletePopupVisible, setIsDeletePopupVisible] = useState(false);\r\n  const [transferToDelete, setTransferToDelete] = useState(null);\r\n  const totalItems = 100;\r\n\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [transfers, setTransfers] = useState([\r\n    {\r\n      id: 1,\r\n      date: \"2024-10-26\",\r\n      reference: \"TR_1119\",\r\n      fromWarehouse: \"Warehouse 2\",\r\n      toWarehouse: \"Warehouse 1\",\r\n      items: 22.0,\r\n      grandTotal: 22.0,\r\n      status: \"Completed\",\r\n    },\r\n    // Add more transfer objects here if needed\r\n  ]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const filteredTransfers = transfers.filter(\r\n    (transfer) =>\r\n      transfer.reference.toLowerCase().includes(searchText.toLowerCase()) ||\r\n      transfer.fromWarehouse.toLowerCase().includes(searchText.toLowerCase()) ||\r\n      transfer.toWarehouse.toLowerCase().includes(searchText.toLowerCase())\r\n  );\r\n\r\n  const handleSelectAll = (e) => {\r\n    if (e.target.checked) {\r\n      setSelectedRows(transfers.map((item) => item.id));\r\n    } else {\r\n      setSelectedRows([]);\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = (id) => {\r\n    setSelectedRows((prev) =>\r\n      prev.includes(id) ? prev.filter((rowId) => rowId !== id) : [...prev, id]\r\n    );\r\n  };\r\n\r\n  const handleViewDetails = (id) => {\r\n    navigate(`/app/warehouse-detailTransfer/${id}`);\r\n  };\r\n\r\n  const handleDeleteTransfer = (item) => {\r\n    setTransferToDelete(item);\r\n    setIsDeletePopupVisible(true);\r\n  };\r\n\r\n  const confirmDeleteTransfer = () => {\r\n    setTransfers(\r\n      transfers.filter((transfer) => transfer.id !== transferToDelete.id)\r\n    );\r\n    setIsDeletePopupVisible(false);\r\n    setTransferToDelete(null);\r\n  };\r\n\r\n  const cancelDelete = () => {\r\n    setIsDeletePopupVisible(false);\r\n    setTransferToDelete(null);\r\n  };\r\n  const handleEditTransfer = (id) => {\r\n    // Navigate to the edit page or handle the edit logic\r\n    navigate(`/app/warehouse-editTransfer/${id}`);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      label: (\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"checkbox\"\r\n          onChange={handleSelectAll}\r\n        />\r\n      ),\r\n      render: (item) => (\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"checkbox\"\r\n          checked={selectedRows.includes(item.id)}\r\n          onChange={() => handleCheckboxChange(item.id)}\r\n        />\r\n      ),\r\n      className: \"text-center\",\r\n    },\r\n    { label: \"Date\", accessor: \"date\" },\r\n    { label: \"Reference\", accessor: \"reference\" },\r\n    { label: \"From Warehouse\", accessor: \"fromWarehouse\" },\r\n    { label: \"To Warehouse\", accessor: \"toWarehouse\" },\r\n    {\r\n      label: \"Items\",\r\n      accessor: \"items\",\r\n      className: \"text-right\",\r\n    },\r\n    {\r\n      label: \"Grand Total\",\r\n      accessor: \"grandTotal\",\r\n      className: \"text-right\",\r\n    },\r\n    {\r\n      label: \"Status\",\r\n      render: (item) => (\r\n        <span\r\n          className={`badge ${\r\n            item.status === \"Completed\" ? \"badge-success\" : \"badge-warning\"\r\n          }`}\r\n        >\r\n          {item.status}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      label: \"Actions\",\r\n      render: (item) => (\r\n        <div className=\"flex space-x-2 justify-center\">\r\n          <button\r\n            onClick={() => handleViewDetails(item.id)}\r\n            className=\"btn btn-sm btn-info\"\r\n          >\r\n            <EyeIcon className=\"w-5 h-5\" />\r\n          </button>\r\n          <button\r\n            onClick={() => handleEditTransfer(item.id)}\r\n            className=\"btn btn-sm btn-warning\"\r\n          >\r\n            <PencilSquareIcon className=\"w-5 h-5\" />\r\n          </button>\r\n          <button\r\n            className=\"btn btn-sm btn-error\"\r\n            onClick={() => handleDeleteTransfer(item)}\r\n          >\r\n            <TrashIcon className=\"w-5 h-5\" />\r\n          </button>\r\n        </div>\r\n      ),\r\n      className: \"text-center\",\r\n    },\r\n  ];\r\n\r\n  const handleExportExcel = () => {\r\n    const ws = XLSX.utils.aoa_to_sheet([\r\n      [\r\n        \"Transfer Reference\",\r\n        \"From Warehouse\",\r\n        \"To Warehouse\",\r\n        \"Items\",\r\n        \"Grand Total\",\r\n      ],\r\n      ...transfers.map((transfer) => [\r\n        transfer.reference,\r\n        transfer.fromWarehouse,\r\n        transfer.toWarehouse,\r\n        transfer.items,\r\n        transfer.grandTotal,\r\n      ]),\r\n    ]);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Transfers\");\r\n    XLSX.writeFile(wb, \"transfers.xlsx\");\r\n  };\r\n\r\n  const handleExportPDF = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"Transfer List\", 10, 10);\r\n    transfers.forEach((transfer, index) => {\r\n      doc.text(\r\n        `${transfer.reference} - ${transfer.fromWarehouse} to ${transfer.toWarehouse} - Items: ${transfer.items} - Total: $${transfer.grandTotal}`,\r\n        10,\r\n        20 + index * 10\r\n      );\r\n    });\r\n    doc.save(\"transfers.pdf\");\r\n  };\r\n\r\n  return (\r\n    <TitleCard title=\"All Transfer\" topMargin=\"mt-2\">\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 items-center\">\r\n        <div className=\"relative\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            placeholder=\"Search by Reference or Warehouse\"\r\n            className=\"input input-bordered w-full\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"absolute right-6 flex space-x-2\">\r\n          <button\r\n            className=\"btn btn-outline btn-primary flex items-center text-sm h-10\"\r\n            onClick={() => setIsFilterVisible(true)}\r\n          >\r\n            <FunnelIcon className=\"w-5 h-5 mr-1\" />\r\n            Filter\r\n          </button>\r\n          <button\r\n            className=\"btn btn-outline btn-success flex items-center\"\r\n            onClick={handleExportExcel}\r\n          >\r\n            <DocumentArrowDownIcon className=\"w-5 h-5 mr-1\" />\r\n            Export Excel\r\n          </button>\r\n          <button\r\n            className=\"btn btn-outline btn-error flex items-center\"\r\n            onClick={handleExportPDF}\r\n          >\r\n            <DocumentTextIcon className=\"w-5 h-5 mr-1\" />\r\n            Export PDF\r\n          </button>\r\n\r\n          <button\r\n            className=\"btn btn-primary flex items-center\"\r\n            onClick={() => navigate(\"/app/warehouse-createTransfer\")}\r\n          >\r\n            <PlusIcon className=\"w-5 h-5 mr-1\" />\r\n            Create\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"overflow-x-auto mt-6\">\r\n        <TableComponent\r\n          columns={columns}\r\n          data={filteredTransfers}\r\n          selectedRows={selectedRows}\r\n          onRowSelect={handleCheckboxChange}\r\n          onSelectAll={handleSelectAll}\r\n          rowsPerPage={rowsPerPage}\r\n          currentPage={currentPage}\r\n          totalItems={totalItems}\r\n          onPageChange={setCurrentPage}\r\n        />\r\n      </div>\r\n\r\n      {isFilterVisible && <FilterAllP isVisible={isFilterVisible} />}\r\n      {isDeletePopupVisible && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 w-96 shadow-lg\">\r\n            <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-100\">\r\n              Delete Confirmation\r\n            </h3>\r\n            <p className=\"mt-4 text-gray-600 dark:text-gray-300\">\r\n              Are you sure you want to delete{\" \"}\r\n              <strong className=\"text-black dark:text-white\">\r\n                {transferToDelete?.reference}\r\n              </strong>\r\n              ?\r\n            </p>\r\n            <div className=\"flex justify-end mt-6 space-x-2\">\r\n              <button\r\n                className=\"btn btn-outline btn-secondary dark:text-gray-300 dark:border-gray-600 dark:hover:bg-gray-700\"\r\n                onClick={cancelDelete}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                className=\"btn btn-outline btn-error dark:text-red-400\"\r\n                onClick={confirmDeleteTransfer}\r\n              >\r\n                Confirm\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TitleCard>\r\n  );\r\n}\r\n\r\nexport default AllTransfer;\r\n","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport AllTransfer from '../../features/warehouse/allTransfer'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Warehouse | All Transfer |\"}))\r\n      }, [])\r\n\r\n\r\n    return(\r\n        < AllTransfer />\r\n    )\r\n}\r\n\r\nexport default InternalPage","import { useState, useEffect } from \"react\";\r\nimport TitleCard from \"../../components/Cards/TitleCard\"; // Import TitleCard\r\n\r\nfunction DetailTransfer({ transferId }) {\r\n  // Data dummy untuk transfer\r\n  const transferData = {\r\n    date: \"2024-11-05\",\r\n    reference: \"TR_1115\",\r\n    fromWarehouse: \"Warehouse 1\",\r\n    toWarehouse: \"Warehouse 2\",\r\n    grandTotal: \"$1300.00\",\r\n    status: \"Completed\",\r\n    products: [\r\n      {\r\n        name: \"Macbook Pro\",\r\n        code: \"86102192\",\r\n        quantity: \"10 pc\",\r\n        subtotal: \"$13000.00\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [transfer, setTransfer] = useState(null);\r\n\r\n  // Set data transfer dummy saat komponen dimuat\r\n  useEffect(() => {\r\n    if (transferId) {\r\n      setTransfer(transferData);\r\n    }\r\n  }, [transferId]);\r\n\r\n  // Fungsi untuk handle print\r\n\r\n  return (\r\n    <>\r\n      <TitleCard\r\n        title=\"Transfer Details\"\r\n        description=\"View and manage transfer details\"\r\n        topMargin=\"mt-2\"\r\n        padding=\"8\"\r\n      >\r\n        {/* Transfer Information */}\r\n        <div className=\"flex flex-wrap items-start space-x-6\">\r\n          {/* Transfer Detail */}\r\n          <div className=\"w-full\">\r\n            <table className=\"table-auto w-full border-collapse border border-gray-300\">\r\n              <tbody>\r\n                <tr className=\"border-b\">\r\n                  <td className=\"px-4 py-2 font-semibold\">Date</td>\r\n                  <td className=\"px-4 py-2\">{transfer?.date || \"N/A\"}</td>\r\n                </tr>\r\n                <tr className=\"border-b\">\r\n                  <td className=\"px-4 py-2 font-semibold\">Reference</td>\r\n                  <td className=\"px-4 py-2\">{transfer?.reference || \"N/A\"}</td>\r\n                </tr>\r\n                <tr className=\"border-b\">\r\n                  <td className=\"px-4 py-2 font-semibold\">From Warehouse</td>\r\n                  <td className=\"px-4 py-2\">\r\n                    {transfer?.fromWarehouse || \"N/A\"}\r\n                  </td>\r\n                </tr>\r\n                <tr className=\"border-b\">\r\n                  <td className=\"px-4 py-2 font-semibold\">To Warehouse</td>\r\n                  <td className=\"px-4 py-2\">\r\n                    {transfer?.toWarehouse || \"N/A\"}\r\n                  </td>\r\n                </tr>\r\n                <tr className=\"border-b\">\r\n                  <td className=\"px-4 py-2 font-semibold\">Grand Total</td>\r\n                  <td className=\"px-4 py-2\">{transfer?.grandTotal || \"N/A\"}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"px-4 py-2 font-semibold\">Status</td>\r\n                  <td className=\"px-4 py-2\">{transfer?.status || \"N/A\"}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Product List */}\r\n        <div className=\"mt-6\">\r\n          <h3 className=\"text-lg font-semibold\">Products</h3>\r\n          <table className=\"table-auto w-full border-collapse border border-gray-300 mt-4\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"px-4 py-2 font-semibold\">Product</th>\r\n                <th className=\"px-4 py-2 font-semibold\">Code</th>\r\n                <th className=\"px-4 py-2 font-semibold\">Quantity</th>\r\n                <th className=\"px-4 py-2 font-semibold\">Subtotal</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {transfer?.products.map((product, index) => (\r\n                <tr key={index} className=\"border-b\">\r\n                  <td className=\"px-4 py-2\">{product.name || \"N/A\"}</td>\r\n                  <td className=\"px-4 py-2\">{product.code || \"N/A\"}</td>\r\n                  <td className=\"px-4 py-2\">{product.quantity || \"N/A\"}</td>\r\n                  <td className=\"px-4 py-2\">{product.subtotal || \"N/A\"}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </TitleCard>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DetailTransfer;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { showNotification } from \"../common/headerSlice\";\r\nimport TitleCard from \"../../components/Cards/TitleCard\"; // Import TitleCard\r\nimport InputText from \"../../components/Input/InputText\"; // Input components\r\nimport TextAreaInput from \"../../components/Input/TextAreaInput\"; // TextArea component\r\n\r\nfunction EditTransfer({ transferId }) {\r\n  const dispatch = useDispatch();\r\n  const dummyTransferData = {\r\n    productName: \"Pineapple\",\r\n    productCost: \"1300\",\r\n    taxType: \"Exclusive\",\r\n    orderTax: \"0\",\r\n    discountType: \"Fixed\",\r\n    discount: \"0\",\r\n    note: \"A few words about the transfer.\",\r\n    date: \"11/06/2024\",\r\n    fromWarehouse: \"Warehouse A\",\r\n    toWarehouse: \"Warehouse B\",\r\n    status: \"Pending\",\r\n  };\r\n\r\n  const [transfer, setTransfer] = useState(dummyTransferData);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (transferId) {\r\n      setTransfer(dummyTransferData);\r\n    }\r\n  }, [transferId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setTransfer((prevTransfer) => ({\r\n      ...prevTransfer,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n\r\n    // Simulasi proses submit\r\n    setTimeout(() => {\r\n      setIsSubmitting(false);\r\n\r\n      // Tampilkan notifikasi setelah submit\r\n      dispatch(\r\n        showNotification({\r\n          message: \"Transfer updated successfully!\",\r\n          status: 1, // 1 untuk sukses, 0 untuk error\r\n        })\r\n      );\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TitleCard\r\n        title=\"Edit Transfer\"\r\n        description=\"Edit transfer details and save changes\"\r\n        topMargin=\"mt-2\"\r\n        padding=\"8\"\r\n      >\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <InputText\r\n              labelTitle=\"Product Cost *\"\r\n              name=\"productCost\"\r\n              defaultValue={transfer.productCost}\r\n              updateFormValue={handleChange}\r\n            />\r\n            <div className=\"flex flex-col\">\r\n              <label className=\"label\">Tax Type *</label>\r\n              <select\r\n                name=\"taxType\"\r\n                value={transfer.taxType}\r\n                onChange={handleChange}\r\n                className=\"input input-bordered\"\r\n              >\r\n                <option value=\"Exclusive\">Exclusive</option>\r\n                <option value=\"Inclusive\">Inclusive</option>\r\n              </select>\r\n            </div>\r\n            <InputText\r\n              labelTitle=\"Order Tax *\"\r\n              name=\"orderTax\"\r\n              defaultValue={transfer.orderTax}\r\n              updateFormValue={handleChange}\r\n              suffix=\"%\"\r\n            />\r\n            <div className=\"flex flex-col\">\r\n              <label className=\"label\">Discount Type *</label>\r\n              <select\r\n                name=\"discountType\"\r\n                value={transfer.discountType}\r\n                onChange={handleChange}\r\n                className=\"input input-bordered\"\r\n              >\r\n                <option value=\"Fixed\">Fixed</option>\r\n                <option value=\"Percentage\">Percentage</option>\r\n              </select>\r\n            </div>\r\n            <InputText\r\n              labelTitle=\"Discount *\"\r\n              name=\"discount\"\r\n              defaultValue={transfer.discount}\r\n              updateFormValue={handleChange}\r\n              suffix=\"%\"\r\n            />\r\n            <TextAreaInput\r\n              labelTitle=\"Note\"\r\n              name=\"note\"\r\n              defaultValue={transfer.note}\r\n              updateFormValue={handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mt-6\">\r\n            <div className=\"flex space-x-6 mt-4\">\r\n              <InputText\r\n                labelTitle=\"Date *\"\r\n                name=\"date\"\r\n                defaultValue={transfer.date}\r\n                updateFormValue={handleChange}\r\n                type=\"date\"\r\n              />\r\n              <div className=\"flex flex-col\">\r\n                <InputText\r\n                  labelTitle=\"From Warehouse *\"\r\n                  name=\"fromWarehouse\"\r\n                  defaultValue={transfer.fromWarehouse}\r\n                  updateFormValue={handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"flex flex-col\">\r\n                <InputText\r\n                  labelTitle=\"To Warehouse *\"\r\n                  name=\"toWarehouse\"\r\n                  defaultValue={transfer.toWarehouse}\r\n                  updateFormValue={handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"flex space-x-6 mt-4\">\r\n              <InputText\r\n                labelTitle=\"Status *\"\r\n                name=\"status\"\r\n                defaultValue={transfer.status}\r\n                updateFormValue={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-16\">\r\n            <button\r\n              className={`btn btn-primary float-right ${\r\n                isSubmitting ? \"opacity-50 cursor-not-allowed\" : \"\"\r\n              }`}\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n            >\r\n              {isSubmitting ? \"Updating...\" : \"Update\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </TitleCard>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditTransfer;\r\n","// All components mapping with path for internal routes\r\n\r\nimport { lazy } from \"react\";\r\nimport CreateProduct from \"../pages/protected/CreateProduct\";\r\nimport AllProducts from \"../pages/protected/AllProduct\";\r\nimport CountStock from \"../pages/protected/CountStock\";\r\nimport CategoryPage from \"../pages/protected/Category\";\r\nimport PrintLabels from \"../pages/protected/PrintLabel\";\r\nimport UnitPage from \"../pages/protected/Unit\";\r\nimport BrandPage from \"../pages/protected/Brand\";\r\nimport DetailProduct from \"../features/product/allProduct/detailProduct\";\r\nimport EditProduct from \"../features/product/allProduct/editProduct\";\r\n\r\nimport Warehouse from \"../pages/protected/Warehouse\";\r\nimport CreateTransfer from \"../pages/protected/CreateTransfer\";\r\nimport AllTransfer from \"../pages/protected/AllTransfer\";\r\nimport DetailTransfer from \"../features/warehouse/detailTransfer\";\r\nimport EditTransfer from \"../features/warehouse/editTransfer\";\r\n\r\nconst SalesReport = lazy(() => import('../pages/protected/SalesReport'))\r\nconst ProductReport = lazy(() => import('../pages/protected/ProductReport'))\r\nconst PSalesReport = lazy(() => import('../pages/protected/PSalesReport'))\r\nconst PurchaseReport = lazy(() => import('../pages/protected/PurchaseReport'))\r\nconst StockReport = lazy(() => import('../pages/protected/StockReport'))\r\nconst SupplierReport = lazy(() => import('../pages/protected/SupplierReport'))\r\nconst QtyAlert = lazy(() => import('../pages/protected/QtyAlert'))\r\nconst CustomerReport = lazy(() => import('../pages/protected/CustomerReport'))\r\nconst BestCustomer = lazy(() => import('../pages/protected/BestCustomer'))\r\nconst TopSell = lazy(() => import('../pages/protected/TopSell'))\r\n\r\nconst CreatePurchase = lazy(() => import('../pages/protected/CreatePurchase'))\r\nconst ReturnPurchase = lazy(() => import('../pages/protected/ReturnPurchase'))\r\nconst AllPurchase = lazy(() => import('../pages/protected/AllPurchase'))\r\n\r\nconst Dashboard = lazy(() => import(\"../pages/protected/Dashboard\"));\r\nconst Welcome = lazy(() => import(\"../pages/protected/Welcome\"));\r\nconst Page404 = lazy(() => import(\"../pages/protected/404\"));\r\nconst Blank = lazy(() => import(\"../pages/protected/Blank\"));\r\nconst Charts = lazy(() => import(\"../pages/protected/Charts\"));\r\nconst Leads = lazy(() => import(\"../pages/protected/Leads\"));\r\nconst Integration = lazy(() => import(\"../pages/protected/Integration\"));\r\nconst Calendar = lazy(() => import(\"../pages/protected/Calendar\"));\r\nconst Team = lazy(() => import(\"../pages/protected/Team\"));\r\nconst Transactions = lazy(() => import(\"../pages/protected/Transactions\"));\r\nconst Bills = lazy(() => import(\"../pages/protected/Bills\"));\r\nconst ProfileSettings = lazy(() =>\r\n  import(\"../pages/protected/ProfileSettings\")\r\n);\r\nconst GettingStarted = lazy(() => import(\"../pages/GettingStarted\"));\r\nconst DocFeatures = lazy(() => import(\"../pages/DocFeatures\"));\r\nconst DocComponents = lazy(() => import(\"../pages/DocComponents\"));\r\n\r\nconst Customer = lazy(() => import('../pages/protected/Customer'));\r\nconst Supplier = lazy(() => import('../pages/protected/Supplier'));\r\nconst User = lazy(() => import('../pages/protected/User'));\r\nconst AllSales = lazy(() => import('../pages/protected/AllSales'))\r\nconst CreateSales = lazy(() => import('../pages/protected/CreateSales'))\r\nconst POS = lazy(() => import('../pages/protected/POS'))\r\nconst ReturnSales = lazy(() => import('../pages/protected/ReturnSales'))\r\nconst SalesDetail = lazy(() => import('../features/sales/allsales/SalesDetail'))\r\nconst ReturnDetail = lazy(() => import('../features/sales/returnsales/ReturnDetail'))\r\n\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/dashboard\", // the url\r\n    component: Dashboard, // view rendered\r\n  },\r\n  // {\r\n  //   path: \"/welcome\", // the url\r\n  //   component: Welcome, // view rendered\r\n  // },\r\n  {\r\n    path: '/customer',\r\n    component: Customer,\r\n  },\r\n  {\r\n    path: '/supplier',\r\n    component: Supplier,\r\n  },\r\n  {\r\n    path: '/user',\r\n    component: User,\r\n  },\r\n  {\r\n    path: '/allsales',\r\n    component: AllSales,\r\n  },\r\n  {\r\n    path: '/salesdetail',\r\n    component: SalesDetail,\r\n  },\r\n  {\r\n    path: '/createsales',\r\n    component: CreateSales,\r\n  },\r\n  {\r\n    path: '/returnsales',\r\n    component: ReturnSales,\r\n  },{\r\n    path: '/returndetail',\r\n    component: ReturnDetail,\r\n  },\r\n  {\r\n    path: '/pos',\r\n    component: POS,\r\n  },\r\n  {\r\n    path: \"/product-createProduct\",\r\n    component: CreateProduct,\r\n  },\r\n  {\r\n    path: \"/product-allProduct\",\r\n    component: AllProducts,\r\n  },\r\n  {\r\n    path: \"/product-allProduct/detailProduct\",\r\n    component: DetailProduct,\r\n  },\r\n  {\r\n    path: \"/product-allProduct/editProduct\",\r\n    component: EditProduct,\r\n  },\r\n  {\r\n    path: \"/product-countStock\",\r\n    component: CountStock,\r\n  },\r\n  {\r\n    path: \"/product-category\",\r\n    component: CategoryPage,\r\n  },\r\n  {\r\n    path: \"/product-printLabels\",\r\n    component: PrintLabels,\r\n  },\r\n  {\r\n    path: \"/product-unit\",\r\n    component: UnitPage,\r\n  },\r\n  {\r\n    path: \"/product-brand\",\r\n    component: BrandPage,\r\n  },\r\n  {\r\n    path: \"/warehouse-warehouse\",\r\n    component: Warehouse,\r\n  },\r\n  {\r\n    path: \"/warehouse-createTransfer\",\r\n    component: CreateTransfer,\r\n  },\r\n  {\r\n    path: \"/warehouse-allTransfer\",\r\n    component: AllTransfer,\r\n  },\r\n  {\r\n    path: \"/warehouse-detailTransfer\",\r\n    component: DetailTransfer,\r\n  },\r\n  {\r\n    path: \"/warehouse-editTransfer\",\r\n    component: EditTransfer,\r\n  },\r\n  {\r\n    path: '/CreatePurchase',\r\n    component: CreatePurchase,\r\n  },\r\n  {\r\n    path: '/AllPurchases',\r\n    component: AllPurchase,\r\n  },\r\n  {\r\n    path: '/ReturnPurchases',\r\n    component: ReturnPurchase,\r\n  },\r\n  {\r\n    path: '/SalesReport',\r\n    component: SalesReport,\r\n  },\r\n  {\r\n    path: '/ProductReport',\r\n    component: ProductReport,\r\n  },\r\n  {\r\n    path: '/PSalesReport',\r\n    component: PSalesReport,\r\n  },\r\n  {\r\n    path: '/PurchaseReport',\r\n    component: PurchaseReport,\r\n  },\r\n  {\r\n    path: '/StockReport',\r\n    component: StockReport,\r\n  },\r\n  {\r\n    path: '/SupplierReport',\r\n    component: SupplierReport,\r\n  },\r\n  {\r\n    path: '/QtyAlert',\r\n    component: QtyAlert,\r\n  },\r\n  {\r\n    path: '/CustomerReport',\r\n    component: CustomerReport,\r\n  },\r\n  {\r\n    path: '/BestCustomer',\r\n    component: BestCustomer,\r\n  },\r\n  {\r\n    path: '/TopSell',\r\n    component: TopSell,\r\n  },\r\n  {\r\n    path: \"/settings-team\",\r\n    component: Team,\r\n  },\r\n  {\r\n    path: \"/calendar\",\r\n    component: Calendar,\r\n  },\r\n  {\r\n    path: \"/transactions\",\r\n    component: Transactions,\r\n  },\r\n  {\r\n    path: \"/settings-profile\",\r\n    component: ProfileSettings,\r\n  },\r\n  {\r\n    path: \"/settings-billing\",\r\n    component: Bills,\r\n  },\r\n  {\r\n    path: \"/getting-started\",\r\n    component: GettingStarted,\r\n  },\r\n  {\r\n    path: \"/features\",\r\n    component: DocFeatures,\r\n  },\r\n  {\r\n    path: \"/components\",\r\n    component: DocComponents,\r\n  },\r\n  {\r\n    path: \"/integration\",\r\n    component: Integration,\r\n  },\r\n  {\r\n    path: \"/charts\",\r\n    component: Charts,\r\n  },\r\n  {\r\n    path: \"/404\",\r\n    component: Page404,\r\n  },\r\n  {\r\n    path: \"/blank\",\r\n    component: Blank,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import Header from \"./Header\"\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\r\nimport routes from '../routes'\r\nimport { Suspense, lazy } from 'react'\r\nimport SuspenseContent from \"./SuspenseContent\"\r\nimport { useSelector } from 'react-redux'\r\nimport { useEffect, useRef } from \"react\"\r\n\r\nconst Page404 = lazy(() => import('../pages/protected/404'))\r\n\r\n\r\nfunction PageContent(){\r\n    const mainContentRef = useRef(null);\r\n    const {pageTitle} = useSelector(state => state.header)\r\n\r\n\r\n    // Scroll back to top on new page load\r\n    useEffect(() => {\r\n        mainContentRef.current.scroll({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n          });\r\n      }, [pageTitle])\r\n\r\n    return(\r\n        <div className=\"drawer-content flex flex-col \">\r\n            <Header/>\r\n            <main className=\"flex-1 overflow-y-auto md:pt-4 pt-4 px-6  bg-base-200\" ref={mainContentRef}>\r\n                <Suspense fallback={<SuspenseContent />}>\r\n                        <Routes>\r\n                            {\r\n                                routes.map((route, key) => {\r\n                                    return(\r\n                                        <Route\r\n                                            key={key}\r\n                                            exact={true}\r\n                                            path={`${route.path}`}\r\n                                            element={<route.component />}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                            {/* Redirecting unknown url to 404 page */}\r\n                            <Route path=\"*\" element={<Page404 />} />\r\n                        </Routes>\r\n                </Suspense>\r\n                <div className=\"h-16\"></div>\r\n            </main>\r\n        </div> \r\n    )\r\n}\r\n\r\n\r\nexport default PageContent\r\n","function NotificationBodyRightDrawer(){\r\n    return(\r\n        <>\r\n             {\r\n                [...Array(15)].map((_, i) => {\r\n                    return <div key={i} className={\"grid mt-3 card bg-base-200 rounded-box p-3\" + (i < 5 ? \" bg-secondary\" : \"\")}>\r\n                            {i % 2 === 0 ? `Your sales has increased by 30% yesterday` : `Total likes for instagram post - New launch this week,  has crossed 100k `}\r\n                        </div> \r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotificationBodyRightDrawer","import { CALENDAR_EVENT_STYLE } from \"../../components/CalendarView/util\"\r\n\r\nconst THEME_BG = CALENDAR_EVENT_STYLE\r\n\r\nfunction CalendarEventsBodyRightDrawer({filteredEvents}){\r\n    return(\r\n        <>\r\n             {\r\n                filteredEvents.map((e, k) => {\r\n                    return <div key={k} className={`grid mt-3 card  rounded-box p-3 ${THEME_BG[e.theme] || \"\"}`}>\r\n                            {e.title}\r\n                        </div> \r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CalendarEventsBodyRightDrawer","import React from \"react\";\r\n\r\nfunction InputFilterText({ type, value, onChange, containerStyle, labelTitle, placeholder }) {\r\n    const updateInputValue = (val) => {\r\n        onChange(val); // Memanggil onChange yang diteruskan dari komponen induk\r\n    };\r\n\r\n    return (\r\n        <div className={`form-control w-full ${containerStyle}`}>\r\n            <label className=\"label font-bold\">\r\n                <span className=\"label-text\">{labelTitle}</span>\r\n            </label>\r\n            <input\r\n                type={type || \"text\"}\r\n                value={value}\r\n                placeholder={placeholder || \"\"}\r\n                onChange={(e) => updateInputValue(e.target.value)} \r\n                className=\"input input-bordered w-full\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputFilterText;\r\n","import React, { useState } from \"react\";\r\nimport InputFilterText from \"../../../components/Input/InputFilter\"; \r\nimport Funnel from \"@heroicons/react/24/outline/FunnelIcon\";\r\nimport Power from \"@heroicons/react/24/outline/PowerIcon\";\r\n\r\nfunction CustomerFilterBodyRightDrawer() {\r\n  const [formData, setFormData] = useState({\r\n    customerCode: \"\",\r\n    customerName: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); \r\n    console.log(\"Form data submitted:\", formData);\r\n    // Lakukan logika pengiriman data di sini\r\n  };\r\n\r\n  const handleReset = () => {\r\n    // Mengosongkan semua input\r\n    setFormData({\r\n      customerCode: \"\",\r\n      customerName: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"min-h-screen flex\">\r\n        <div className=\"w-full max-w-md\">\r\n          <form onSubmit={handleSubmit}>\r\n            {/* Input Customer Code */}\r\n            <InputFilterText\r\n              type=\"text\"\r\n              value={formData.customerCode}\r\n              onChange={(value) => handleInputChange(\"customerCode\", value)}\r\n              containerStyle=\"mt-2\"\r\n              labelTitle=\"Customer Code\"\r\n              placeholder=\"Search by Code\"\r\n            />\r\n\r\n            {/* Input Customer Name */}\r\n            <InputFilterText\r\n              type=\"text\"\r\n              value={formData.customerName}\r\n              onChange={(value) => handleInputChange(\"customerName\", value)}\r\n              containerStyle=\"mt-2\"\r\n              labelTitle=\"Customer Name\"\r\n              placeholder=\"Search by Name\"\r\n            />\r\n            \r\n\r\n            {/* Input Phone */}\r\n            <InputFilterText\r\n              type=\"text\"\r\n              value={formData.phone}\r\n              onChange={(value) => handleInputChange(\"phone\", value)}\r\n              containerStyle=\"mt-2\"\r\n              labelTitle=\"Phone\"\r\n              placeholder=\"Search by Phone\"\r\n            />\r\n\r\n            {/* Input Email */}\r\n            <InputFilterText\r\n              type=\"email\"\r\n              value={formData.email}\r\n              onChange={(value) => handleInputChange(\"email\", value)}\r\n              containerStyle=\"mt-2\"\r\n              labelTitle=\"Email\"\r\n              placeholder=\"Search by Email\"\r\n            />\r\n\r\n            {/* Buttons */}\r\n            <div className=\"flex justify-between mt-4\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-800\"\r\n              >\r\n                <Funnel className=\"h-5 w-5 inline-block mr-1 mb-1\" />\r\n                Filter\r\n              </button>\r\n\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleReset} // Panggil fungsi reset\r\n                className=\"bg-error text-white py-2 px-4 rounded-md hover:bg-red-500\"\r\n              >\r\n                <Power className=\"h-5 w-5 inline-block mr-1 mb-1\" />\r\n                Reset\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomerFilterBodyRightDrawer;\r\n","import React, { useState } from \"react\";\r\nimport InputFilterText from \"../../../components/Input/InputFilter\"; \r\nimport Funnel from \"@heroicons/react/24/outline/FunnelIcon\";\r\nimport Power from \"@heroicons/react/24/outline/PowerIcon\";\r\n\r\nfunction SupplierFilterBodyRightDrawer() {\r\n  const [formData, setFormData] = useState({\r\n    supplierCode: \"\",\r\n    supplierName: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); \r\n    console.log(\"Form data submitted:\", formData);\r\n    // Lakukan logika pengiriman data di sini\r\n  };\r\n\r\n  const handleReset = () => {\r\n    // Mengosongkan semua input\r\n    setFormData({\r\n      supplierCode: \"\",\r\n      supplierName: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"min-h-screen flex\">\r\n        <div className=\"w-full max-w-md\">\r\n          <form onSubmit={handleSubmit}>\r\n            {/* Input Supplier Code */}\r\n            <InputFilterText\r\n              type=\"text\"\r\n              value={formData.supplierCode}\r\n              onChange={(value) => handleInputChange(\"supplierCode\", value)}\r\n              containerStyle=\"mt-2\"\r\n              labelTitle=\"Supplier Code\"\r\n              placeholder=\"Search by Code\"\r\n            />\r\n\r\n            {/* Input Supplier Name */}\r\n            <InputFilterText\r\n              type=\"text\"\r\n              value={formData.supplierName}\r\n              onChange={(value) => handleInputChange(\"supplierName\", value)}\r\n              containerStyle=\"mt-2\"\r\n              labelTitle=\"SUpplier Name\"\r\n              placeholder=\"Search by Name\"\r\n            />\r\n            \r\n\r\n            {/* Input Phone */}\r\n            <InputFilterText\r\n              type=\"text\"\r\n              value={formData.phone}\r\n              onChange={(value) => handleInputChange(\"phone\", value)}\r\n              containerStyle=\"mt-2\"\r\n              labelTitle=\"Phone\"\r\n              placeholder=\"Search by Phone\"\r\n            />\r\n\r\n            {/* Input Email */}\r\n            <InputFilterText\r\n              type=\"email\"\r\n              value={formData.email}\r\n              onChange={(value) => handleInputChange(\"email\", value)}\r\n              containerStyle=\"mt-2\"\r\n              labelTitle=\"Email\"\r\n              placeholder=\"Search by Email\"\r\n            />\r\n\r\n            {/* Buttons */}\r\n            <div className=\"flex justify-between mt-4\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-800\"\r\n              >\r\n                <Funnel className=\"h-5 w-5 inline-block mr-1 mb-1\" />\r\n                Filter\r\n              </button>\r\n\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleReset} // Panggil fungsi reset\r\n                className=\"bg-error text-white py-2 px-4 rounded-md hover:bg-red-500\"\r\n              >\r\n                <Power className=\"h-5 w-5 inline-block mr-1 mb-1\" />\r\n                Reset\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SupplierFilterBodyRightDrawer;\r\n","import React, { useState } from \"react\";\r\nimport InputFilterText from \"../../../components/Input/InputFilter\";\r\nimport Funnel from \"@heroicons/react/24/outline/FunnelIcon\";\r\nimport Power from \"@heroicons/react/24/outline/PowerIcon\";\r\n\r\nfunction UserFilterBodyRightDrawer() {\r\n  const [formData, setFormData] = useState({\r\n    firstName: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    role: \"\",\r\n  });\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Form data submitted:\", formData);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFormData({\r\n      firstName: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      role: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex\">\r\n      <div className=\"w-full max-w-md\">\r\n        <form onSubmit={handleSubmit}>\r\n          {/* Input User Name */}\r\n          <InputFilterText\r\n            type=\"text\"\r\n            value={formData.firstName}\r\n            onChange={(value) => handleInputChange(\"firstName\", value)}\r\n            containerStyle=\"mt-2\"\r\n            labelTitle=\"Name\"\r\n            placeholder=\"Search by Username\"\r\n          />\r\n\r\n          {/* Input Phone */}\r\n          <InputFilterText\r\n            type=\"text\"\r\n            value={formData.phone}\r\n            onChange={(value) => handleInputChange(\"phone\", value)}\r\n            containerStyle=\"mt-2\"\r\n            labelTitle=\"Phone\"\r\n            placeholder=\"Search by Phone\"\r\n          />\r\n\r\n          {/* Input Email */}\r\n          <InputFilterText\r\n            type=\"email\"\r\n            value={formData.email}\r\n            onChange={(value) => handleInputChange(\"email\", value)}\r\n            containerStyle=\"mt-2\"\r\n            labelTitle=\"Email\"\r\n            placeholder=\"Search by Email\"\r\n          />\r\n\r\n          {/* Input Role */}\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"role\" className=\"label font-bold\">\r\n              Role\r\n            </label>\r\n            <select\r\n              id=\"role\"\r\n              value={formData.role}\r\n              onChange={(e) => handleInputChange(\"role\", e.target.value)}\r\n              className=\"select select-bordered\"\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select a Role\r\n              </option>\r\n              <option value=\"Admin\">Admin</option>\r\n              <option value=\"Manager\">Manager</option>\r\n              <option value=\"Cashier\">Cashier</option>\r\n            </select>\r\n          </div>\r\n\r\n          {/* Buttons */}\r\n          <div className=\"flex justify-between mt-4\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-800\"\r\n            >\r\n              <Funnel className=\"h-5 w-5 inline-block mr-1 mb-1\" />\r\n              Filter\r\n            </button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleReset}\r\n              className=\"bg-error text-white py-2 px-4 rounded-md hover:bg-red-500\"\r\n            >\r\n              <Power className=\"h-5 w-5 inline-block mr-1 mb-1\" />\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserFilterBodyRightDrawer;\r\n","import React, { useState } from \"react\";\r\nimport InputFilterText from \"../../../components/Input/InputFilter\";\r\nimport Funnel from \"@heroicons/react/24/outline/FunnelIcon\";\r\nimport Power from \"@heroicons/react/24/outline/PowerIcon\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction SalesFilterBodyRightDrawer() {\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [formData, setFormData] = useState({\r\n    date: \"\", \r\n    addedBy: \"\", \r\n    customerName: \"\", \r\n    warehouse: \"\", \r\n    grandTotal: \"\", \r\n    paid: \"\", \r\n    due: \"\",     \r\n    status: \"\"\r\n  });\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Form data submitted:\", formData);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFormData({\r\n        date: \"\", \r\n        addedBy: \"\", \r\n        customerName: \"\", \r\n        warehouse: \"\", \r\n        grandTotal: \"\", \r\n        paid: \"\", \r\n        due: \"\",\r\n        status: \"\"\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex\">\r\n        \r\n        {/* Input Date */}\r\n        <div className=\"w-full max-w-md mt-2\">\r\n            <form onSubmit={handleSubmit}>\r\n            <div className=\"form-control w-full\">\r\n            <label className=\"label font-bold\">\r\n                Date\r\n            </label>\r\n            <DatePicker\r\n                selected={selectedDate}\r\n                onChange={(date) => setSelectedDate(date)}\r\n                className=\"input input-bordered w-full bg-gray-200\"\r\n            />\r\n        </div>\r\n          \r\n          \r\n          {/* Input Added By */}\r\n          <InputFilterText\r\n            type=\"text\"\r\n            value={formData.customerName}\r\n            onChange={(value) => handleInputChange(\"customerName\", value)}\r\n            containerStyle=\"mt-2\"\r\n            labelTitle=\"Customer\"\r\n            placeholder=\"Search by Customer\"\r\n          />\r\n\r\n          {/* Input Warehouse */}\r\n          <InputFilterText\r\n            type=\"text\"\r\n            value={formData.warehouse}\r\n            onChange={(value) => handleInputChange(\"warehouse\", value)}\r\n            containerStyle=\"mt-2\"\r\n            labelTitle=\"Warehouse\"\r\n            placeholder=\"Search by Warehouse\"\r\n          />\r\n\r\n          {/* Input Status */}\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"status\" className=\"label font-bold\">\r\n              Status\r\n            </label>\r\n            <select\r\n              id=\"role\"\r\n              value={formData.status}\r\n              onChange={(e) => handleInputChange(\"status\", e.target.value)}\r\n              className=\"select select-bordered\"\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select a Status\r\n              </option>\r\n              <option value=\"Delivered\">Delivered</option>\r\n              <option value=\"Pending\">Pending</option>\r\n            </select>\r\n          </div>\r\n\r\n          {/* Buttons */}\r\n          <div className=\"flex justify-between mt-4\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-800\"\r\n            >\r\n              <Funnel className=\"h-5 w-5 inline-block mr-1 mb-1\" />\r\n              Filter\r\n            </button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleReset}\r\n              className=\"bg-error text-white py-2 px-4 rounded-md hover:bg-red-500\"\r\n            >\r\n              <Power className=\"h-5 w-5 inline-block mr-1 mb-1\" />\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SalesFilterBodyRightDrawer;\r\n","import XMarkIcon  from '@heroicons/react/24/solid/XMarkIcon'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport NotificationBodyRightDrawer from '../features/common/components/NotificationBodyRightDrawer'\r\nimport { closeRightDrawer } from '../features/common/rightDrawerSlice'\r\nimport { RIGHT_DRAWER_TYPES } from '../utils/globalConstantUtil'\r\nimport CalendarEventsBodyRightDrawer from '../features/calendar/CalendarEventsBodyRightDrawer'\r\nimport CustomerFilterEventsBodyRightDrawer from '../features/people/customer/CustomerFilterBodyRightDrawer'\r\nimport SupplierFilterEventsBodyRightDrawer from '../features/people/supplier/SupplierFilterBodyRightDrawer'\r\nimport UserFilterBodyRightDrawer from '../features/people/user/UserFilterBodyRightDrawer'\r\nimport SalesFilterBodyRightDrawer from '../features/sales/allsales/SalesFilterBodyRightDrawer'\r\n\r\nfunction RightSidebar(){\r\n\r\n    const {isOpen, bodyType, extraObject, header} = useSelector(state => state.rightDrawer)\r\n    const dispatch = useDispatch()\r\n\r\n    const close = (e) => {\r\n      dispatch(closeRightDrawer(e))\r\n    }      \r\n\r\n    return(\r\n        <div className={\" fixed overflow-hidden z-20 bg-gray-900 bg-opacity-25 inset-0 transform ease-in-out \" + (isOpen ? \" transition-opacity opacity-100 duration-500 translate-x-0  \" : \" transition-all delay-500 opacity-0 translate-x-full  \")}>\r\n      \r\n            <section className={ \"w-80 md:w-96  right-0 absolute bg-base-100 h-full shadow-xl delay-400 duration-500 ease-in-out transition-all transform  \" + (isOpen ? \" translate-x-0 \" : \" translate-x-full \")}>\r\n                \r\n                    <div className=\"relative  pb-5 flex flex-col  h-full\">\r\n                        \r\n                        {/* Header */}\r\n                        <div className=\"navbar flex pl-4 pr-4 shadow-md \">\r\n                            <button className=\"float-left btn btn-circle btn-outline btn-sm\" onClick={() => close()}>\r\n                            <XMarkIcon className=\"h-5 w-5\"/>\r\n                            </button>\r\n                            <span className=\"ml-2 font-bold text-xl\">{header}</span>\r\n                        </div>\r\n\r\n\r\n                        {/* ------------------ Content Start ------------------ */}\r\n                        <div className=\"overflow-y-scroll pl-4 pr-4\">\r\n                            <div className=\"flex flex-col w-full\">\r\n                            {/* Loading drawer body according to different drawer type */}\r\n                            {\r\n                                {\r\n                                        [RIGHT_DRAWER_TYPES.NOTIFICATION] : <NotificationBodyRightDrawer {...extraObject} closeRightDrawer={close}/>,\r\n                                        [RIGHT_DRAWER_TYPES.CALENDAR_EVENTS] : <CalendarEventsBodyRightDrawer {...extraObject} closeRightDrawer={close}/>,\r\n                                        [RIGHT_DRAWER_TYPES.CUSTOMER_FILTER] : <CustomerFilterEventsBodyRightDrawer {...extraObject} closeRightDrawer={close}/>,\r\n                                        [RIGHT_DRAWER_TYPES.SUPPLIER_FILTER] : <SupplierFilterEventsBodyRightDrawer {...extraObject} closeRightDrawer={close}/>,\r\n                                        [RIGHT_DRAWER_TYPES.USER_FILTER] : <UserFilterBodyRightDrawer {...extraObject} closeRightDrawer={close}/>,                                        \r\n                                        [RIGHT_DRAWER_TYPES.SALES_FILTER] : <SalesFilterBodyRightDrawer {...extraObject} closeRightDrawer={close}/>,\r\n                                        [RIGHT_DRAWER_TYPES.DEFAULT] : <div></div>\r\n                                }[bodyType]\r\n                            }\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        {/* ------------------ Content End ------------------ */}\r\n                    </div>\r\n\r\n            </section>\r\n\r\n            <section className=\" w-screen h-full cursor-pointer \" onClick={() => close()} ></section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RightSidebar","import PageContent from \"./PageContent\"\r\nimport LeftSidebar from \"./LeftSidebar\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport RightSidebar from './RightSidebar'\r\nimport { useEffect } from \"react\"\r\nimport  {  removeNotificationMessage } from \"../features/common/headerSlice\"\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport ModalLayout from \"./ModalLayout\"\r\n\r\nfunction Layout(){\r\n  const dispatch = useDispatch()\r\n  const {newNotificationMessage, newNotificationStatus} = useSelector(state => state.header)\r\n\r\n\r\n  useEffect(() => {\r\n      if(newNotificationMessage !== \"\"){\r\n          if(newNotificationStatus === 1)NotificationManager.success(newNotificationMessage, 'Success')\r\n          if(newNotificationStatus === 0)NotificationManager.error( newNotificationMessage, 'Error')\r\n          dispatch(removeNotificationMessage())\r\n      }\r\n  }, [newNotificationMessage])\r\n\r\n    return(\r\n      <>\r\n        { /* Left drawer - containing page content and side bar (always open) */ }\r\n        <div className=\"drawer  lg:drawer-open\">\r\n            <input id=\"left-sidebar-drawer\" type=\"checkbox\" className=\"drawer-toggle\" />\r\n            <PageContent/>\r\n            <LeftSidebar />\r\n        </div>\r\n\r\n        { /* Right drawer - containing secondary content like notifications list etc.. */ }\r\n        <RightSidebar />\r\n\r\n\r\n        {/** Notification layout container */}\r\n        <NotificationContainer />\r\n\r\n      {/* Modal layout container */}\r\n        <ModalLayout />\r\n\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Layout","import React, { useState } from \"react\";\r\nimport { BsFilter, BsPower } from \"react-icons/bs\";\r\n\r\nfunction FilterAllP() {\r\n  // State untuk mengontrol visibilitas filter\r\n  const [isVisible, setIsVisible] = useState(true);\r\n\r\n  // Fungsi untuk menutup filter\r\n  const handleCloseFilter = () => {\r\n    console.log(\"Tombol ❌ diklik, menutup filter...\");\r\n    setIsVisible(false); // Menyembunyikan filter\r\n  };\r\n\r\n  // Fungsi untuk membuka kembali filter\r\n  const handleOpenFilter = () => {\r\n    setIsVisible(true); // Menampilkan filter\r\n  };\r\n\r\n  if (!isVisible) return null; // Jika tidak visible, tidak merender komponen\r\n\r\n  return (\r\n    <div>\r\n      {/* Tombol untuk menampilkan filter */}\r\n      <button\r\n        className=\"flex items-center bg-blue-600 text-white px-8 py-2 rounded-md shadow-md text-sm hover:bg-blue-700 transition-all duration-300\"\r\n        onClick={handleOpenFilter} // Fungsi ini membuka kembali filter\r\n      >\r\n        <BsFilter className=\"w-5 h-5 mr-2\" />\r\n        Filter\r\n      </button>\r\n\r\n      {/* Filter Modal */}\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-end z-50\">\r\n        <div className=\"w-[450px] bg-white dark:bg-gray-800 h-full shadow-lg p-6 overflow-y-auto rounded-l-lg\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <button\r\n              className=\"text-xl text-gray-600 dark:text-gray-200 hover:text-gray-800 dark:hover:text-gray-400\"\r\n              onClick={handleCloseFilter} // Panggil handleCloseFilter untuk menutup filter\r\n            >\r\n              ❌\r\n            </button>\r\n            <h2 className=\"text-xl font-semibold text-center flex-1 text-gray-800 dark:text-gray-100\">\r\n              Filter\r\n            </h2>\r\n          </div>\r\n          <form>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"mb-3\">\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  Code Product\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search by Code\"\r\n                  className=\"input input-bordered w-full text-sm py-2 px-3 rounded-md border-gray-300 dark:border-gray-600 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-gray-200\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"mb-3\">\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  Product\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search by Name\"\r\n                  className=\"input input-bordered w-full text-sm py-2 px-3 rounded-md border-gray-300 dark:border-gray-600 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-gray-200\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"mb-3\">\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  Category\r\n                </label>\r\n                <select className=\"select select-bordered w-full text-sm py-2 px-3 rounded-md border-gray-300 dark:border-gray-600 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-gray-200\">\r\n                  <option>Choose Category</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"mb-3\">\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  Brand\r\n                </label>\r\n                <select className=\"select select-bordered w-full text-sm py-2 px-3 rounded-md border-gray-300 dark:border-gray-600 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-gray-200\">\r\n                  <option>Choose Brand</option>\r\n                </select>\r\n              </div>\r\n\r\n              {/* Filter and Reset Buttons */}\r\n              <div className=\"flex justify-between mt-4 space-x-2\">\r\n                <button className=\"flex items-center bg-blue-600 text-white px-8 py-2 rounded-md shadow-md text-sm hover:bg-blue-700 transition-all duration-300\">\r\n                  <BsFilter className=\"w-5 h-5 mr-2\" />\r\n                  Filter\r\n                </button>\r\n                <button\r\n                  className=\"flex items-center bg-red-600 text-white px-8 py-2 rounded-md shadow-md text-sm hover:bg-red-700 transition-all duration-300\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    console.log(\"Reset Filters\");\r\n                  }}\r\n                >\r\n                  <BsPower className=\"w-5 h-5 mr-2\" />\r\n                  Reset\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterAllP;\r\n","import { useState, useEffect } from \"react\";\r\nimport TitleCard from \"../../../components/Cards/TitleCard\"; // Import TitleCard\r\nimport { PrinterIcon } from \"@heroicons/react/24/outline\"; // Import Printer Icon\r\n\r\nfunction ProductDetail({ productId }) {\r\n  // Data dummy untuk produk\r\n  const productData = {\r\n    name: \"Product Example\",\r\n    image: \"https://via.placeholder.com/150\", // URL gambar produk\r\n    barcodeSymbology: \"EAN-13\",\r\n    barcode: \"1234567890123\",\r\n    category: \"Fruits\",\r\n    brand: \"Brand Example\",\r\n    description: \"This is a detailed description of the product.\",\r\n    price: \"20.00\",\r\n    cost: \"15.00\",\r\n    stockAlert: \"5\",\r\n    unit: \"Kilogram\",\r\n  };\r\n\r\n  const [product, setProduct] = useState(null);\r\n\r\n  // Set data produk dummy saat komponen dimuat\r\n  useEffect(() => {\r\n    if (productId) {\r\n      setProduct(productData);\r\n    }\r\n  }, [productId]);\r\n\r\n  // Fungsi untuk handle print\r\n  const handlePrint = () => {\r\n    window.print(); // Ini akan memicu print dialog pada browser\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TitleCard\r\n        title=\"Product Details\"\r\n        description=\"View and manage product details\"\r\n        topMargin=\"mt-2\"\r\n        padding=\"8\"\r\n      >\r\n        {/* Tombol Print */}\r\n        <div className=\"flex justify-end mb-4\">\r\n          <button\r\n            onClick={handlePrint}\r\n            className=\"btn btn-primary flex items-center space-x-2\"\r\n          >\r\n            <PrinterIcon className=\"h-5 w-5 text-white\" />\r\n            <span>Print</span>\r\n          </button>\r\n        </div>\r\n\r\n        {/* Kontainer Gambar dan Tabel */}\r\n        <div className=\"flex flex-wrap items-start space-x-6\">\r\n          {/* Gambar Produk */}\r\n          <div className=\"w-1/3\">\r\n            <img\r\n              src={product?.image || \"default-image-url.jpg\"}\r\n              alt={product?.name}\r\n              className=\"w-full h-auto rounded-lg shadow-md\"\r\n            />\r\n          </div>\r\n\r\n          {/* Tabel Detail Produk */}\r\n          <div className=\"w-2/3\">\r\n            <table className=\"table-auto w-full border-collapse border border-gray-300\">\r\n              <tbody>\r\n                <tr className=\"border-b\">\r\n                  <td className=\"px-4 py-2 font-semibold\">Name</td>\r\n                  <td className=\"px-4 py-2\">{product?.name || \"N/A\"}</td>\r\n                </tr>\r\n                <tr className=\"border-b\">\r\n                  <td className=\"px-4 py-2 font-semibold\">Category</td>\r\n                  <td className=\"px-4 py-2\">{product?.category || \"N/A\"}</td>\r\n                </tr>\r\n                <tr className=\"border-b\">\r\n                  <td className=\"px-4 py-2 font-semibold\">Brand</td>\r\n                  <td className=\"px-4 py-2\">{product?.brand || \"N/A\"}</td>\r\n                </tr>\r\n                <tr className=\"border-b\">\r\n                  <td className=\"px-4 py-2 font-semibold\">Cost</td>\r\n                  <td className=\"px-4 py-2\">{product?.cost || \"N/A\"}</td>\r\n                </tr>\r\n                <tr className=\"border-b\">\r\n                  <td className=\"px-4 py-2 font-semibold\">Price</td>\r\n                  <td className=\"px-4 py-2\">{product?.price || \"N/A\"}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"px-4 py-2 font-semibold\">Unit</td>\r\n                  <td className=\"px-4 py-2\">{product?.unit || \"N/A\"}</td>\r\n                </tr>\r\n                <tr className=\"border-b\">\r\n                  <td className=\"px-4 py-2 font-semibold\">Stock Alert</td>\r\n                  <td className=\"px-4 py-2\">{product?.stockAlert || \"N/A\"}</td>\r\n                </tr>\r\n\r\n                <tr className=\"border-b\">\r\n                  <td className=\"px-4 py-2 font-semibold\">Warehouse</td>\r\n                  <td className=\"px-4 py-2\">{product?.warehouse || \"N/A\"}</td>\r\n                </tr>\r\n                <tr className=\"border-b\">\r\n                  <td className=\"px-4 py-2 font-semibold\">Quantity</td>\r\n                  <td className=\"px-4 py-2\">{product?.quantity || \"N/A\"}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Barcode */}\r\n        <div className=\"mt-6 text-center\">\r\n          <img\r\n            src={`https://api.barcodes4.me/barcode/c128b/${product?.barcode}.png`}\r\n            alt=\"Barcode\"\r\n            className=\"mx-auto\"\r\n          />\r\n        </div>\r\n      </TitleCard>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProductDetail;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\r\nimport {\r\n  MagnifyingGlassIcon,\r\n  FunnelIcon,\r\n  DocumentArrowDownIcon,\r\n  DocumentTextIcon,\r\n  PlusIcon,\r\n  PencilSquareIcon,\r\n  TrashIcon,\r\n  EyeIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport TitleCard from \"../../../components/Cards/TitleCard\";\r\nimport FilterAllP from \"../../filter\";\r\nimport TableComponent from \"../../../components/Table/TableComponent\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { saveAs } from \"file-saver\"; // untuk men-download file\r\nimport { BsFilter, BsPower } from \"react-icons/bs\";\r\n\r\nfunction AllProducts() {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [isFilterVisible, setIsFilterVisible] = useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isDeletePopupVisible, setIsDeletePopupVisible] = useState(false);\r\n  const [productToDelete, setProductToDelete] = useState(null);\r\n  const totalItems = 100;\r\n\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [data, setData] = useState([\r\n    {\r\n      id: 1,\r\n      image: \"/intro.png\",\r\n      name: \"Unpaired Gray\",\r\n      code: \"87654321\",\r\n      brand: \"Adidas\",\r\n      category: \"Shoes\",\r\n      cost: 22.0,\r\n      price: 25.0,\r\n      quantity: \"101 kg\",\r\n    },\r\n  ]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const filteredProduct = data.filter(\r\n    (product) =>\r\n      product.name.toLowerCase().includes(searchText.toLowerCase()) ||\r\n      product.code.toLowerCase().includes(searchText.toLowerCase()) ||\r\n      product.brand.toLowerCase().includes(searchText.toLowerCase())\r\n  );\r\n\r\n  const handleSelectAll = (e) => {\r\n    if (e.target.checked) {\r\n      setSelectedRows(data.map((item) => item.id));\r\n    } else {\r\n      setSelectedRows([]);\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = (id) => {\r\n    setSelectedRows((prev) =>\r\n      prev.includes(id) ? prev.filter((rowId) => rowId !== id) : [...prev, id]\r\n    );\r\n  };\r\n\r\n  const handleViewDetails = (id) => {\r\n    navigate(`/app/product-allProduct/detailProduct/${id}`);\r\n  };\r\n\r\n  const handleEditProduct = (id) => {\r\n    navigate(`/app/product-allProduct/editProduct/${id}`);\r\n  };\r\n\r\n  const handleDeleteProduct = (item) => {\r\n    setProductToDelete(item);\r\n    setIsDeletePopupVisible(true);\r\n  };\r\n\r\n  const confirmDeleteProduct = () => {\r\n    setData(data.filter((product) => product.id !== productToDelete.id));\r\n    setIsDeletePopupVisible(false);\r\n    setProductToDelete(null);\r\n  };\r\n\r\n  const cancelDelete = () => {\r\n    setIsDeletePopupVisible(false);\r\n    setProductToDelete(null);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      label: (\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"checkbox\"\r\n          onChange={handleSelectAll}\r\n        />\r\n      ),\r\n      render: (item) => (\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"checkbox\"\r\n          checked={selectedRows.includes(item.id)}\r\n          onChange={() => handleCheckboxChange(item.id)}\r\n        />\r\n      ),\r\n      className: \"text-center\",\r\n    },\r\n    {\r\n      label: \"Image\",\r\n      render: (item) => (\r\n        <img src={item.image} alt={item.name} className=\"w-10 h-10 rounded\" />\r\n      ),\r\n      className: \"text-center\",\r\n    },\r\n    { label: \"Name\", accessor: \"name\" },\r\n    { label: \"Code\", accessor: \"code\" },\r\n    { label: \"Brand\", accessor: \"brand\" },\r\n    { label: \"Category\", accessor: \"category\" },\r\n    {\r\n      label: \"Cost\",\r\n      accessor: \"cost\",\r\n      className: \"text-right\",\r\n      render: (item) => `$${item.cost.toFixed(2)}`,\r\n    },\r\n    {\r\n      label: \"Price\",\r\n      accessor: \"price\",\r\n      className: \"text-right\",\r\n      render: (item) => `$${item.price.toFixed(2)}`,\r\n    },\r\n    { label: \"Quantity\", accessor: \"quantity\", className: \"text-right\" },\r\n    {\r\n      label: \"Actions\",\r\n      render: (item) => (\r\n        <div className=\"flex space-x-2 justify-center\">\r\n          <button\r\n            onClick={() => handleViewDetails(item.id)}\r\n            className=\"btn btn-sm btn-info\"\r\n          >\r\n            <EyeIcon className=\"w-5 h-5\" />\r\n          </button>\r\n          <button\r\n            onClick={() => handleEditProduct(item.id)}\r\n            className=\"btn btn-sm btn-warning\"\r\n          >\r\n            <PencilSquareIcon className=\"w-5 h-5\" />\r\n          </button>\r\n          <button\r\n            className=\"btn btn-sm btn-error\"\r\n            onClick={() => handleDeleteProduct(item)}\r\n          >\r\n            <TrashIcon className=\"w-5 h-5\" />\r\n          </button>\r\n        </div>\r\n      ),\r\n      className: \"text-center\",\r\n    },\r\n  ];\r\n\r\n  const handleCreateProduct = () => {\r\n    navigate(\"/app/product-createProduct\");\r\n  };\r\n\r\n  const handleExportExcel = () => {\r\n    const ws = XLSX.utils.aoa_to_sheet([\r\n      [\"Product Name\", \"Price\", \"Category\"],\r\n      ...data.map((product) => [\r\n        product.name,\r\n        `$${product.price.toFixed(2)}`,\r\n        product.category,\r\n      ]),\r\n    ]);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Products\");\r\n    XLSX.writeFile(wb, \"products.xlsx\");\r\n  };\r\n\r\n  const handleExportPDF = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"Product List\", 10, 10);\r\n    data.forEach((product, index) => {\r\n      doc.text(\r\n        `${product.name} - $${product.price.toFixed(2)} - ${product.category}`,\r\n        10,\r\n        20 + index * 10\r\n      );\r\n    });\r\n    doc.save(\"products.pdf\");\r\n  };\r\n\r\n  return (\r\n    <TitleCard title=\"All Products\" topMargin=\"mt-2\">\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 items-center\">\r\n        <div className=\"relative\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            placeholder=\"Search by Name or Code\"\r\n            className=\"input input-bordered w-full\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"absolute right-6 flex space-x-2\">\r\n          <button\r\n            className=\"btn btn-outline btn-primary flex items-center text-sm h-10\"\r\n            onClick={() => setIsFilterVisible(true)}\r\n          >\r\n            <FunnelIcon className=\"w-5 h-5 mr-1\" />\r\n            Filter\r\n          </button>\r\n          <button\r\n            className=\"btn btn-outline btn-success flex items-center\"\r\n            onClick={handleExportExcel}\r\n          >\r\n            <DocumentArrowDownIcon className=\"w-5 h-5 mr-1\" />\r\n            Export Excel\r\n          </button>\r\n          <button\r\n            className=\"btn btn-outline btn-error flex items-center\"\r\n            onClick={handleExportPDF}\r\n          >\r\n            <DocumentTextIcon className=\"w-5 h-5 mr-1\" />\r\n            Export PDF\r\n          </button>\r\n\r\n          <button\r\n            className=\"btn btn-primary flex items-center\"\r\n            onClick={handleCreateProduct}\r\n          >\r\n            <PlusIcon className=\"w-5 h-5 mr-1\" />\r\n            Create\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"overflow-x-auto mt-6\">\r\n        <TableComponent\r\n          columns={columns}\r\n          data={filteredProduct}\r\n          selectedRows={selectedRows}\r\n          onRowSelect={handleCheckboxChange}\r\n          onSelectAll={handleSelectAll}\r\n          rowsPerPage={rowsPerPage}\r\n          currentPage={currentPage}\r\n          totalItems={totalItems}\r\n          onPageChange={setCurrentPage}\r\n        />\r\n      </div>\r\n\r\n      {isFilterVisible && <FilterAllP isVisible={isFilterVisible} />}\r\n      {isDeletePopupVisible && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 w-96 shadow-lg\">\r\n            <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-100\">\r\n              Delete Confirmation\r\n            </h3>\r\n            <p className=\"mt-4 text-gray-600 dark:text-gray-300\">\r\n              Are you sure you want to delete{\" \"}\r\n              <strong className=\"text-black dark:text-white\">\r\n                {productToDelete?.name}\r\n              </strong>\r\n              ?\r\n            </p>\r\n            <div className=\"flex justify-end mt-6 space-x-2\">\r\n              <button\r\n                className=\"btn btn-outline btn-secondary dark:text-gray-300 dark:border-gray-600 dark:hover:bg-gray-700\"\r\n                onClick={cancelDelete}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                className=\"btn btn-outline btn-error dark:text-red-400 dark:border-red-600 dark:hover:bg-red-700\"\r\n                onClick={confirmDeleteProduct}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </TitleCard>\r\n  );\r\n}\r\n\r\nexport default AllProducts;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport InputText from \"../../../components/Input/InputText\";\r\nimport TextAreaInput from \"../../../components/Input/TextAreaInput\";\r\nimport TitleCard from \"../../../components/Cards/TitleCard\";\r\nimport { showNotification } from \"../../common/headerSlice\";\r\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\"; // Impor Barcode Scanner\r\n\r\nfunction CreateProduct() {\r\n  const dispatch = useDispatch();\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    barcode: \"\",\r\n    barcodeSymbology: \"\",\r\n    category: \"\",\r\n    brand: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    cost: \"\",\r\n    stockAlert: \"\",\r\n    unit: \"\",\r\n    image: null,\r\n  });\r\n\r\n  const [scanning, setScanning] = useState(false); // Status untuk scanner\r\n\r\n  const updateFormValue = ({ updateType, value }) => {\r\n    setForm({ ...form, [updateType]: value });\r\n  };\r\n\r\n  const handleImageUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    setForm({ ...form, image: file });\r\n  };\r\n\r\n  const handleBarcodeScan = (data) => {\r\n    if (data) {\r\n      updateFormValue({ updateType: \"barcode\", value: data.text });\r\n      setScanning(false); // Tutup scanner setelah sukses memindai\r\n    }\r\n  };\r\n\r\n  const createProduct = () => {\r\n    const isValid = Object.keys(form).every((key) => form[key]);\r\n    if (isValid) {\r\n      dispatch(\r\n        showNotification({ message: \"Product Created Successfully\", status: 1 })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        showNotification({\r\n          message: \"Please fill all required fields\",\r\n          status: 0,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const toggleScanner = () => {\r\n    setScanning(!scanning); // Aktifkan/Tutup Scanner\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TitleCard title=\"Create Product\" topMargin=\"mt-2\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          {/* Product Name */}\r\n          <InputText\r\n            labelTitle=\"Name\"\r\n            updateType=\"name\"\r\n            defaultValue=\"\"\r\n            updateFormValue={updateFormValue}\r\n          />\r\n\r\n          {/* Product Image */}\r\n          <div className=\"flex flex-col\">\r\n            <label htmlFor=\"productImage\" className=\"label\">\r\n              Product Image\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"productImage\"\r\n              onChange={handleImageUpload}\r\n              className=\"input input-bordered\"\r\n            />\r\n            <span>{form.image ? form.image.name : \" \"}</span>\r\n          </div>\r\n\r\n          {/* Barcode Symbology */}\r\n          <InputText\r\n            labelTitle=\"Barcode Symbology\"\r\n            updateType=\"barcodeSymbology\"\r\n            defaultValue=\"\"\r\n            updateFormValue={updateFormValue}\r\n            isDropdown={true}\r\n            options={[\r\n              { label: \"Choose Symbology\", value: \"\" },\r\n              { label: \"Code 128\", value: \"code128\" },\r\n              { label: \"EAN-13\", value: \"ean13\" },\r\n            ]}\r\n          />\r\n\r\n          {/* Barcode Scanner */}\r\n          <div className=\"flex flex-col\">\r\n            <label htmlFor=\"barcode\" className=\"label\">\r\n              Barcode\r\n            </label>\r\n            <div className=\"flex items-center gap-x-2\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"barcode\"\r\n                placeholder=\"Scan or Enter Barcode\"\r\n                value={form.barcode}\r\n                onChange={(e) =>\r\n                  updateFormValue({ updateType: \"barcode\", value: e.target.value })\r\n                }\r\n                className=\"input input-bordered w-full h-12\" // Pastikan tinggi input sama\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={toggleScanner}\r\n                className=\"btn btn-primary h-12 px-4\" // Sesuaikan tinggi dan padding tombol\r\n              >\r\n                Scan\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Scanner Camera */}\r\n          {scanning && (\r\n            <div className=\"mt-4\">\r\n              <BarcodeScannerComponent\r\n                onUpdate={(err, result) => {\r\n                  if (result) handleBarcodeScan(result);\r\n                }}\r\n                width={300}\r\n                height={300}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={toggleScanner}\r\n                className=\"btn btn-secondary mt-2\"\r\n              >\r\n                Close Scanner\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {/* Other Inputs */}\r\n          <InputText\r\n            labelTitle=\"Category\"\r\n            updateType=\"category\"\r\n            defaultValue=\"\"\r\n            updateFormValue={updateFormValue}\r\n            isDropdown={true}\r\n            options={[\r\n              { label: \"Choose Category\", value: \"\" },\r\n              { label: \"Fruits\", value: \"fruits\" },\r\n              { label: \"Shoes\", value: \"shoes\" },\r\n            ]}\r\n          />\r\n          <InputText\r\n            labelTitle=\"Brand\"\r\n            updateType=\"brand\"\r\n            defaultValue=\"\"\r\n            updateFormValue={updateFormValue}\r\n            isDropdown={true}\r\n            options={[\r\n              { label: \"Choose Brand\", value: \"\" },\r\n              { label: \"Adidas\", value: \"adidas\" },\r\n              { label: \"Samsung\", value: \"samsung\" },\r\n            ]}\r\n          />\r\n          <div className=\"flex flex-col space-y-4\">\r\n            <div className=\"relative flex-grow\">\r\n              <InputText\r\n                labelTitle=\"Order Tax\"\r\n                updateType=\"\"\r\n                defaultValue=\"\"\r\n                updateFormValue={updateFormValue}\r\n              />\r\n              <span className=\"absolute right-3 top-2/3 transform -translate-y-1/2 text-xl\">\r\n                %\r\n              </span>\r\n            </div>\r\n\r\n            <TextAreaInput\r\n              labelTitle=\"Description\"\r\n              updateType=\"description\"\r\n              defaultValue=\"\"\r\n              updateFormValue={updateFormValue}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Line Separator */}\r\n        <div className=\"border-t border-gray-300 my-4\"></div>\r\n\r\n        {/* Product Price, Cost, Stock Alert, Product Unit */}\r\n        <div className=\"space-y-4\">\r\n          {/* Product Price dan Product Cost sejajar kiri-kanan */}\r\n          <div className=\"flex space-x-4\">\r\n            <div className=\"flex-1\">\r\n              <InputText\r\n                labelTitle=\"Product Price\"\r\n                updateType=\"price\"\r\n                defaultValue=\"\"\r\n                updateFormValue={updateFormValue}\r\n              />\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <InputText\r\n                labelTitle=\"Product Cost\"\r\n                updateType=\"cost\"\r\n                defaultValue=\"\"\r\n                updateFormValue={updateFormValue}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Stock Alert dan Product Unit di bawahnya */}\r\n          <div className=\"flex space-x-4\">\r\n            <div className=\"flex-1\">\r\n              <InputText\r\n                labelTitle=\"Stock Alert\"\r\n                updateType=\"stockAlert\"\r\n                defaultValue=\"\"\r\n                updateFormValue={updateFormValue}\r\n              />\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <InputText\r\n                labelTitle=\"Product Unit\"\r\n                updateType=\"unit\"\r\n                defaultValue=\"\"\r\n                updateFormValue={updateFormValue}\r\n                isDropdown={true}\r\n                options={[\r\n                  { label: \"Choose Unit\", value: \"\" },\r\n                  { label: \"Kilogram\", value: \"kilogram\" },\r\n                  { label: \"Meter\", value: \"meter\" },\r\n                ]}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <div className=\"mt-16\">\r\n          <button\r\n            className=\"btn btn-primary float-right\"\r\n            onClick={() => createProduct()}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </TitleCard>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateProduct;\r\n"],"names":["require","module","exports","Object","freeze","CALENDAR_EVENT_STYLE","_ref","columns","data","selectedRows","onRowSelect","onSelectAll","onActionClick","rowsPerPage","currentPage","totalItems","onPageChange","onRowsPerPageChange","startItem","endItem","Math","min","_jsxs","className","children","_jsx","map","col","index","renderHeader","label","item","render","accessor","id","value","onChange","e","parseInt","target","onClick","disabled","ceil","dispatch","useDispatch","useEffect","setPageTitle","title","CreateProduct","AllProducts","selectedDate","setSelectedDate","useState","searchText","setSearchText","setRowsPerPage","setCurrentPage","editingProduct","setEditingProduct","isEditPopupVisible","setIsEditPopupVisible","stockData","setStockData","name","stock","date","filteredData","filter","Date","toDateString","toLowerCase","includes","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","length","handlePageChange","pageNumber","TitleCard","topMargin","DatePicker","selected","placeholderText","type","placeholder","handleEditClick","PencilSquareIcon","Number","handleSaveChanges","updatedStockData","CountStock","onClose","onSave","newCategory","handleInputChange","code","isModalOpen","setIsModalOpen","setNewCategory","selectedCategories","setSelectedCategories","isEditModalOpen","setIsEditModalOpen","editCategory","setEditCategory","categoryToDelete","setCategoryToDelete","isDeletePopupVisible","setIsDeletePopupVisible","categoryDataState","setCategoryDataState","prev","handleCreateCategory","PlusIcon","checked","handleCheckboxChange","categoryId","category","handleEditCategory","handleDeleteCategory","TrashIcon","handleSaveCategory","newId","categoryWithId","alert","Modal","updatedCategory","isEditMode","cancelDelete","confirmDeleteCategory","prevState","CategoryPage","warehouse","setWarehouse","productCode","setProductCode","paperSize","setPaperSize","displayPrice","setDisplayPrice","scanning","setScanning","showBarcode","setShowBarcode","toggleScanner","QrCodeIcon","BarcodeScannerComponent","onUpdate","err","result","text","width","height","htmlFor","console","log","ArrowPathIcon","handleReset","handlePrint","PrinterIcon","Barcode","PrintLabels","UnitPage","units","setUnits","shortName","operator","selectedUnits","setSelectedUnits","setIsEditMode","editUnit","setEditUnit","newUnit","setNewUnit","unitToDelete","setUnitToDelete","unitDataState","setUnitDataState","filteredUnits","unit","handleSelectAll","isChecked","unitId","handleEditUnit","handleDeleteUnit","XMarkIcon","handleSaveUnit","prevUnits","parseFloat","handleAddUnit","confirmDeleteUnit","BrandPage","brands","setBrands","description","selectedBrands","setSelectedBrands","newBrand","setNewBrand","editBrand","setEditBrand","brandToDelete","setBrandToDelete","filteredBrands","brand","brandId","handleDeleteBrand","handleAddBrand","handleEditSave","confirmDeleteBrand","prevBrand","WarehousePage","warehouses","setWarehouses","phone","country","city","email","zipcode","selectedWarehouses","setSelectedWarehouses","editWarehouse","setEditWarehouse","newWarehouse","setNewWarehouse","warehouseToDelete","setWarehouseToDelete","filteredWarehouses","w","wid","handleEditWarehouse","handleDeleteWarehouse","handleSaveWarehouse","handleAddWarehouse","confirmDeleteWarehouse","CreateTransfer","form","setForm","fromWarehouse","toWarehouse","orderItems","orderTax","discount","shipping","status","note","updateFormValue","updateType","prevForm","totalSubtotal","reduce","total","subtotal","calculateTotal","_Fragment","InputText","labelTitle","defaultValue","isDropdown","options","toFixed","inputType","TextAreaInput","handleSubmit","showNotification","message","isValid","keys","every","key","isFilterVisible","setIsFilterVisible","transferToDelete","setTransferToDelete","setSelectedRows","transfers","setTransfers","reference","items","grandTotal","navigate","useNavigate","filteredTransfers","transfer","rowId","handleViewDetails","EyeIcon","handleEditTransfer","handleDeleteTransfer","FunnelIcon","handleExportExcel","ws","XLSX","aoa_to_sheet","wb","book_new","book_append_sheet","DocumentArrowDownIcon","handleExportPDF","doc","jsPDF","forEach","save","DocumentTextIcon","TableComponent","FilterAllP","isVisible","confirmDeleteTransfer","AllTransfer","transferId","transferData","products","quantity","setTransfer","padding","product","dummyTransferData","productName","productCost","taxType","discountType","isSubmitting","setIsSubmitting","handleChange","prevTransfer","onSubmit","preventDefault","setTimeout","suffix","SalesReport","lazy","ProductReport","PSalesReport","PurchaseReport","StockReport","SupplierReport","QtyAlert","CustomerReport","BestCustomer","TopSell","CreatePurchase","ReturnPurchase","AllPurchase","Dashboard","Page404","Blank","Charts","Integration","Calendar","Team","Transactions","Bills","ProfileSettings","GettingStarted","DocFeatures","DocComponents","Customer","Supplier","User","AllSales","CreateSales","POS","ReturnSales","path","component","DetailProduct","EditProduct","Warehouse","DetailTransfer","EditTransfer","mainContentRef","useRef","pageTitle","useSelector","state","header","current","scroll","top","behavior","Header","ref","Suspense","fallback","SuspenseContent","Routes","routes","route","Route","exact","element","Array","_","i","THEME_BG","filteredEvents","k","theme","containerStyle","updateInputValue","val","formData","setFormData","customerCode","customerName","field","InputFilterText","Funnel","Power","supplierCode","supplierName","firstName","role","addedBy","paid","due","isOpen","bodyType","extraObject","rightDrawer","close","closeRightDrawer","RIGHT_DRAWER_TYPES","NOTIFICATION","NotificationBodyRightDrawer","CALENDAR_EVENTS","CalendarEventsBodyRightDrawer","CUSTOMER_FILTER","CustomerFilterEventsBodyRightDrawer","SUPPLIER_FILTER","SupplierFilterEventsBodyRightDrawer","USER_FILTER","UserFilterBodyRightDrawer","SALES_FILTER","SalesFilterBodyRightDrawer","DEFAULT","newNotificationMessage","newNotificationStatus","NotificationManager","success","error","removeNotificationMessage","PageContent","LeftSidebar","RightSidebar","NotificationContainer","ModalLayout","setIsVisible","handleOpenFilter","BsFilter","handleCloseFilter","BsPower","productId","productData","image","barcodeSymbology","barcode","price","cost","stockAlert","setProduct","window","print","src","alt","productToDelete","setProductToDelete","setData","filteredProduct","handleEditProduct","handleDeleteProduct","handleCreateProduct","confirmDeleteProduct","event","file","files","createProduct"],"sourceRoot":""}