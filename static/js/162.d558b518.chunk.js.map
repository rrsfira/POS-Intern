{"version":3,"file":"static/js/162.d558b518.chunk.js","mappings":"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","sources":["components/PageControl/PageControl.js","features/report/topsellingproduct/index.js","pages/protected/TopSell.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction PageControl() {\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const totalItems = 100;\r\n\r\n  const handleRowsPerPageChange = (e) => {\r\n    setRowsPerPage(parseInt(e.target.value, 10));\r\n    setCurrentPage(1); // Reset ke halaman pertama ketika rows per page berubah\r\n  };\r\n\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage < 1 || newPage > Math.ceil(totalItems / rowsPerPage)) return;\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  const startItem = (currentPage - 1) * rowsPerPage + 1;\r\n  const endItem = Math.min(currentPage * rowsPerPage, totalItems);\r\n\r\n  return (\r\n    <div className=\"flex flex-wrap justify-between items-center mt-4 gap-4\">\r\n      {/* Rows Per Page */}\r\n      <div className=\"w-full sm:w-auto\">\r\n        <span className=\"flex items-center gap-2 text-[10px] sm:text-[14px]\">\r\n          Rows Per Page:\r\n          <select\r\n            value={rowsPerPage}\r\n            onChange={handleRowsPerPageChange}\r\n            className=\"select select-bordered select-sm w-20 text-[10px] sm:text-[14px]\"\r\n          >\r\n            {[10, 20, 30, 40].map((rows) => (\r\n              <option key={rows} value={rows}>\r\n                {rows}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </span>\r\n      </div>\r\n\r\n      {/* Pagination */}\r\n      <div className=\"w-full sm:w-auto flex justify-between sm:justify-center items-center gap-4\">\r\n        <span className=\"text-[10px] sm:text-[14px]\">\r\n          {startItem} - {endItem} of {totalItems}\r\n        </span>\r\n        <div className=\"flex space-x-2\">\r\n          <button\r\n            onClick={() => handlePageChange(currentPage - 1)}\r\n            disabled={currentPage === 1}\r\n            className=\"btn btn-outline btn-sm text-[10px] sm:text-[14px]\"\r\n          >\r\n            {\"<\"}\r\n          </button>\r\n          <button\r\n            onClick={() => handlePageChange(currentPage + 1)}\r\n            disabled={currentPage === Math.ceil(totalItems / rowsPerPage)}\r\n            className=\"btn btn-outline btn-sm text-[10px] sm:text-[14px]\"\r\n          >\r\n            {\">\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageControl;\r\n","import { useState } from \"react\";\r\nimport TitleCard from \"../../../components/Cards/TitleCard\";\r\nimport PageControl from \"../../../components/PageControl/PageControl\";\r\nimport SearchBar from \"../../../components/Input/SearchBar\";\r\nimport {\r\n  DocumentTextIcon,\r\n  DocumentArrowDownIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Datepicker from \"react-tailwindcss-datepicker\";\r\n\r\nconst TOP = [\r\n  {\r\n    code: \"123\",\r\n    name: \"Avocat\",\r\n    totalSales: \"5\",\r\n    totalAmount: 480,\r\n  },\r\n];\r\n\r\nfunction TopSell() {\r\n  const [topsell] = useState(TOP);\r\n\r\n  const handlePrint = (type) => {\r\n    console.log(`Exporting ${type} PDF`);\r\n    window.print(); // Placeholder for exporting PDF\r\n  };\r\n\r\n  const [dateValue, setDateValue] = useState({\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n  });\r\n\r\n  const handleDatePickerValueChange = (newValue) => {\r\n    console.log(\"newValue:\", newValue);\r\n    setDateValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center h-screen pt-10 px-4\">\r\n      <div className=\"flex justify-center w-full mb-1\">\r\n        <Datepicker\r\n          containerClassName=\"w-full sm:w-72\"\r\n          value={dateValue}\r\n          theme=\"light\"\r\n          inputClassName=\"input input-bordered w-full sm:w-72 text-center\"\r\n          popoverDirection=\"down-start\"\r\n          toggleClassName=\"invisible\"\r\n          onChange={handleDatePickerValueChange}\r\n          showShortcuts={true}\r\n          primaryColor=\"white\"\r\n        />\r\n      </div>\r\n\r\n      <TitleCard title=\"Top-Selling Product\" topMargin=\"mt-2\">\r\n        <div className=\"flex w-full items-center justify-between flex-wrap\">\r\n          {/* Search Bar */}\r\n          <div className=\"flex-grow sm:flex-grow-0 mr-4\">\r\n            <SearchBar className=\"input input-bordered h-10 w-full sm:w-96\" />\r\n          </div>\r\n\r\n          {/* Buttons */}\r\n          <div className=\"flex space-x-2 mt-2 sm:mt-0\">\r\n            <button\r\n              onClick={() => console.log(\"Exporting Excel\")}\r\n              className=\"btn btn-outline btn-success flex items-center text-sm h-10\"\r\n            >\r\n              <DocumentArrowDownIcon className=\"w-5 h-5 mr-1\" />\r\n              Excel\r\n            </button>\r\n            <button\r\n              onClick={() => handlePrint(\"PDF\")}\r\n              className=\"btn btn-outline btn-error flex items-center text-sm h-10\"\r\n            >\r\n              <DocumentTextIcon className=\"w-5 h-5 mr-1\" />\r\n              PDF\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Table */}\r\n        <div className=\"overflow-x-auto mt-4\">\r\n          <table className=\"table w-full\">\r\n            <thead>\r\n              <tr>\r\n                <th>Code</th>\r\n                <th>Product</th>\r\n                <th>Total Sales</th>\r\n                <th>Total Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {topsell.map((top, index) => (\r\n                <tr key={index}>\r\n                  <td>{top.code}</td>\r\n                  <td>{top.name}</td>\r\n                  <td>{top.totalSales}</td>\r\n                  <td>${top.totalAmount}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <PageControl />\r\n      </TitleCard>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopSell;\r\n","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport TopSell from '../../features/report/topsellingproduct'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Report | Top-Selling Product |\"}))\r\n      }, [])\r\n\r\n\r\n    return(\r\n        < TopSell />\r\n    )\r\n}\r\n\r\nexport default InternalPage"],"names":["rowsPerPage","setRowsPerPage","useState","currentPage","setCurrentPage","totalItems","handlePageChange","newPage","Math","ceil","startItem","endItem","min","_jsxs","className","children","_jsx","value","onChange","e","parseInt","target","map","rows","onClick","disabled","TOP","code","name","totalSales","totalAmount","topsell","dateValue","setDateValue","startDate","Date","endDate","Datepicker","containerClassName","theme","inputClassName","popoverDirection","toggleClassName","newValue","console","log","showShortcuts","primaryColor","TitleCard","title","topMargin","SearchBar","DocumentArrowDownIcon","handlePrint","type","window","print","DocumentTextIcon","top","index","PageControl","dispatch","useDispatch","useEffect","setPageTitle","TopSell"],"sourceRoot":""}