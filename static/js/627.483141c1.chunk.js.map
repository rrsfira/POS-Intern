{"version":3,"file":"static/js/627.483141c1.chunk.js","mappings":"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","sources":["containers/Header.js","routes/sidebar.js","containers/SidebarSubmenu.js","containers/LeftSidebar.js","features/sales/pos/index.js"],"sourcesContent":["import { themeChange } from 'theme-change'\r\nimport React, {  useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport BellIcon  from '@heroicons/react/24/outline/BellIcon'\r\nimport Bars3Icon  from '@heroicons/react/24/outline/Bars3Icon'\r\nimport MoonIcon from '@heroicons/react/24/outline/MoonIcon'\r\nimport SunIcon from '@heroicons/react/24/outline/SunIcon'\r\nimport { openRightDrawer } from '../features/common/rightDrawerSlice';\r\nimport { RIGHT_DRAWER_TYPES } from '../utils/globalConstantUtil'\r\nimport POS from \"../features/sales/pos\";\r\n\r\nimport { NavLink,  Routes, Link , useLocation, useNavigate} from 'react-router-dom'\r\n\r\n\r\nfunction Header(){\r\n\r\n    const dispatch = useDispatch()\r\n    const {noOfNotifications, pageTitle} = useSelector(state => state.header)\r\n    const [currentTheme, setCurrentTheme] = useState(localStorage.getItem(\"theme\"))\r\n\r\n    useEffect(() => {\r\n        themeChange(false)\r\n        if(currentTheme === null){\r\n            if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ) {\r\n                setCurrentTheme(\"dark\")\r\n            }else{\r\n                setCurrentTheme(\"light\")\r\n            }\r\n        }\r\n        // 👆 false parameter is required for react project\r\n      }, [])\r\n\r\n    // VIEW\r\n    const navigate = useNavigate();\r\n\r\n    const handleClick = () => {\r\n        navigate(\"/app/pos\");\r\n    };\r\n\r\n\r\n    // Opening right sidebar for notification\r\n    const openNotification = () => {\r\n        dispatch(openRightDrawer({header : \"Notifications\", bodyType : RIGHT_DRAWER_TYPES.NOTIFICATION}))\r\n    }\r\n\r\n\r\n    function logoutUser(){\r\n        localStorage.clear();\r\n        window.location.href = '/'\r\n    }\r\n\r\n    return(\r\n        // navbar fixed  flex-none justify-between bg-base-300  z-10 shadow-md\r\n        \r\n        <>\r\n            <div className=\"navbar sticky top-0 bg-base-100  z-10 shadow-md \">\r\n\r\n\r\n                {/* Menu toogle for mobile view or small screen */}\r\n                <div className=\"flex-1\">\r\n                    <label htmlFor=\"left-sidebar-drawer\" className=\"btn btn-primary drawer-button lg:hidden\">\r\n                    <Bars3Icon className=\"h-5 inline-block w-5\"/></label>\r\n                    <h1 className=\"text-2xl font-bold ml-2 text-primary\">{pageTitle}</h1>\r\n                </div>\r\n\r\n           \r\n\r\n            <div className=\"flex-none \">\r\n\r\n                {/* Multiple theme selection, uncomment this if you want to enable multiple themes selection, \r\n                also includes corporate and retro themes in tailwind.config file */}\r\n                \r\n                {/* <select className=\"select select-sm mr-4\" data-choose-theme>\r\n                    <option disabled selected>Theme</option>\r\n                    <option value=\"light\">Default</option>\r\n                    <option value=\"dark\">Dark</option>\r\n                    <option value=\"corporate\">Corporate</option>\r\n                    <option value=\"retro\">Retro</option>\r\n                </select> */}\r\n            {/* Notification icon */}\r\n                <button class=\"btn btn-sm btn-primary mx-7\"\r\n                    onClick={handleClick} >                  \r\n                    <span className=\"text-bold\">POS</span>\r\n                </button>\r\n\r\n            {/* Light and dark theme selection toogle **/}\r\n            <label className=\"swap \">\r\n                <input type=\"checkbox\"/>\r\n                <SunIcon data-set-theme=\"light\" data-act-class=\"ACTIVECLASS\" className={\"fill-current w-6 h-6 \"+(currentTheme === \"dark\" ? \"swap-on\" : \"swap-off\")}/>\r\n                <MoonIcon data-set-theme=\"dark\" data-act-class=\"ACTIVECLASS\" className={\"fill-current w-6 h-6 \"+(currentTheme === \"light\" ? \"swap-on\" : \"swap-off\")} />\r\n            </label>\r\n\r\n\r\n                {/* Notification icon */}\r\n                <button className=\"btn btn-ghost ml-4  btn-circle\" onClick={() => openNotification()}>\r\n                    <div className=\"indicator\">\r\n                        <BellIcon className=\"h-6 w-6\"/>\r\n                        {noOfNotifications > 0 ? <span className=\"indicator-item badge badge-primary badge-sm\">{noOfNotifications}</span> : null }\r\n                    </div>\r\n                </button>\r\n\r\n\r\n                {/* Profile icon, opening menu on click */}\r\n                <div className=\"dropdown dropdown-end ml-4\">\r\n                    <label tabIndex={0} className=\"btn btn-ghost btn-circle avatar\">\r\n                        <div className=\"w-10 rounded-full\">\r\n                        <img src=\"/Profile.svg\" />\r\n                        {/* <img src=\"https://placeimg.com/80/80/people\" alt=\"profile\" /> */}\r\n                        </div>\r\n                    </label>\r\n                    <ul\r\n            tabIndex={0}\r\n            className=\"menu menu-compact dropdown-content mt-3 p-2 shadow bg-base-100 rounded-box w-52\"\r\n        >\r\n            {/* Profile Settings */}\r\n            <li className=\"justify-between\">\r\n                <Link to=\"/app/settings-profile\">\r\n                    Profile Settings\r\n                    <span className=\"badge\">New</span>\r\n                </Link>\r\n            </li>\r\n\r\n            {/* Divider */}\r\n            <div className=\"divider mt-0 mb-0\"></div>\r\n\r\n            {/* Login */}\r\n            <li>\r\n                <Link to=\"/login\">\r\n                    Login\r\n                </Link>\r\n            </li>\r\n\r\n            {/* Divider */}\r\n            <div className=\"divider mt-0 mb-0\"></div>\r\n\r\n            {/* Logout */}\r\n            <li>\r\n                <a onClick={logoutUser} role=\"button\" className=\"cursor-pointer\">\r\n                    Logout\r\n                </a>\r\n            </li>\r\n        </ul>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header","/** Icons are imported separatly to reduce build time */\r\nimport BellIcon from \"@heroicons/react/24/outline/BellIcon\";\r\nimport DocumentTextIcon from \"@heroicons/react/24/outline/DocumentTextIcon\";\r\nimport Squares2X2Icon from \"@heroicons/react/24/outline/Squares2X2Icon\";\r\nimport TableCellsIcon from \"@heroicons/react/24/outline/TableCellsIcon\";\r\nimport WalletIcon from \"@heroicons/react/24/outline/WalletIcon\";\r\nimport CodeBracketSquareIcon from \"@heroicons/react/24/outline/CodeBracketSquareIcon\";\r\nimport DocumentIcon from \"@heroicons/react/24/outline/DocumentIcon\";\r\nimport ExclamationTriangleIcon from \"@heroicons/react/24/outline/ExclamationTriangleIcon\";\r\nimport CalendarDaysIcon from \"@heroicons/react/24/outline/CalendarDaysIcon\";\r\nimport ArrowRightOnRectangleIcon from \"@heroicons/react/24/outline/ArrowRightOnRectangleIcon\";\r\nimport UserIcon from \"@heroicons/react/24/outline/UserIcon\";\r\nimport Cog6ToothIcon from \"@heroicons/react/24/outline/Cog6ToothIcon\";\r\nimport BoltIcon from \"@heroicons/react/24/outline/BoltIcon\";\r\nimport ChartBarIcon from \"@heroicons/react/24/outline/ChartBarIcon\";\r\nimport CurrencyDollarIcon from \"@heroicons/react/24/outline/CurrencyDollarIcon\";\r\nimport InboxArrowDownIcon from \"@heroicons/react/24/outline/InboxArrowDownIcon\";\r\nimport UsersIcon from \"@heroicons/react/24/outline/UsersIcon\";\r\nimport KeyIcon from \"@heroicons/react/24/outline/KeyIcon\";\r\nimport DocumentDuplicateIcon from \"@heroicons/react/24/outline/DocumentDuplicateIcon\";\r\nimport {\r\n  ChevronDownIcon,\r\n  FolderIcon,\r\n  ClipboardDocumentListIcon,\r\n  HomeModernIcon,\r\n  IdentificationIcon,\r\n  InboxStackIcon,\r\n  SwatchIcon,\r\n} from \"@heroicons/react/24/outline\";\r\n\r\nconst iconClasses = `h-6 w-6`;\r\nconst submenuIconClasses = `h-5 w-5`;\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/app/dashboard\",\r\n    icon: <Squares2X2Icon className={iconClasses} />,\r\n    name: \"Dashboard\",\r\n  },\r\n\r\n  {\r\n    path: \"\", //no url needed as this has submenu\r\n    icon: <FolderIcon className={`${iconClasses} inline`} />, // icon component\r\n    name: \"Product\", // name that appear in Sidebar\r\n    submenu: [\r\n      {\r\n        path: \"/app/product-createProduct\",\r\n        name: \"Create Product\",\r\n      },\r\n      {\r\n        path: \"/app/product-allProduct\", //url\r\n        name: \"All Products\", // name that appear in Sidebar\r\n      },\r\n      {\r\n        path: \"/app/product-countStock\",\r\n        name: \"Count Stock\",\r\n      },\r\n      {\r\n        path: \"/app/product-category\",\r\n        name: \"Category\",\r\n      },\r\n      {\r\n        path: \"/app/product-printLabels\",\r\n        name: \"Print Labels\",\r\n      },\r\n      {\r\n        path: \"/app/product-unit\",\r\n        name: \"Unit\",\r\n      },\r\n      {\r\n        path: \"/app/product-brand\",\r\n        name: \"Brand\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"\", //no url needed as this has submenu\r\n    icon: <InboxStackIcon className={`${iconClasses} inline`} />, // icon component\r\n    name: \"Inventory\", // name that appear in Sidebar\r\n    submenu: [\r\n      {\r\n        path: \"/app/CreatePurchase\",\r\n        name: \"Create Purchase\",\r\n      },\r\n      {\r\n        path: \"/app/AllPurchases\",\r\n        name: \"All Purchases\",\r\n      },\r\n      {\r\n        path: \"/app/ReturnPurchases\",\r\n        name: \"Return Purchases\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"\", //no url needed as this has submenu\r\n    icon: <IdentificationIcon className={`${iconClasses} inline`} />, // icon component\r\n    name: \"People\", // name that appear in Sidebar\r\n    submenu: [\r\n      {\r\n        path: '/app/customer',\r\n        name: \"Customers\",\r\n      },\r\n      {\r\n        path: \"/app/supplier\",\r\n        name: \"Suppliers\",\r\n      },\r\n      {\r\n        path: \"user\",\r\n        name: \"User\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"\", \r\n    icon: <SwatchIcon className={`${iconClasses} inline`} />, \r\n    name: \"Sales\",\r\n    submenu: [\r\n      {\r\n        path: '/app/createsales',\r\n        name: 'Create Sales',\r\n      },\r\n      {\r\n        path: '/app/allsales',\r\n        name: 'All Sales', \r\n      },\r\n      {\r\n        path: '/app/returnsales', \r\n        name: 'Return Sales',\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"\", //no url needed as this has submenu\r\n    icon: <HomeModernIcon className={`${iconClasses} inline`} />, // icon component\r\n    name: \"Warehouse\", // name that appear in Sidebar\r\n    submenu: [\r\n      {\r\n        path: \"/app/warehouse-warehouse\",\r\n        name: \"Warehouses\",\r\n      },\r\n      {\r\n        path: \"/app/warehouse-createTransfer\",\r\n        name: \"Create Transfer\",\r\n      },\r\n      {\r\n        path: \"/app/warehouse-allTransfer\",\r\n        name: \"All Transfer\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"\", //no url needed as this has submenu\r\n    icon: <ChartBarIcon className={`${iconClasses} inline`} />, // icon component\r\n    name: \"Report\", // name that appear in Sidebar\r\n    submenu: [\r\n      {\r\n        path: \"/app/SalesReport\",\r\n        name: \"Sales Report\",\r\n      },\r\n      {\r\n        path: \"/app/ProductReport\",\r\n        name: \"Product Report\",\r\n      },\r\n      {\r\n        path: \"/app/PSalesReport\",\r\n        name: \"Product Sales Report\",\r\n      },\r\n      {\r\n        path: \"/app/PurchaseReport\",\r\n        name: \"Purchase Report\",\r\n      },\r\n      {\r\n        path: \"/app/StockReport\",\r\n        name: \"Stock Report\",\r\n      },\r\n      {\r\n        path: \"/app/SupplierReport\",\r\n        name: \"Supplier Report\",\r\n      },\r\n      {\r\n        path: \"/app/QtyAlert\",\r\n        name: \"Product Quantity Alert\",\r\n      },\r\n      {\r\n        path: \"/app/CustomerReport\",\r\n        name: \"Customer Report\",\r\n      },\r\n      {\r\n        path: \"/app/BestCustomer\",\r\n        name: \"Best Customer\",\r\n      },\r\n      {\r\n        path: \"/app/TopSell\",\r\n        name: \"Top-Selling Product\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import ChevronDownIcon from  '@heroicons/react/24/outline/ChevronDownIcon'\r\nimport {useEffect, useState} from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n\r\nfunction SidebarSubmenu({submenu, name, icon}){\r\n    const location = useLocation()\r\n    const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n\r\n    /** Open Submenu list if path found in routes, this is for directly loading submenu routes  first time */\r\n    useEffect(() => {\r\n        if(submenu.filter(m => {return m.path === location.pathname})[0])setIsExpanded(true)\r\n    }, [])\r\n\r\n    return (\r\n        <div className='flex flex-col'>\r\n\r\n            {/** Route header */}\r\n            <div className='w-full block' onClick={() => setIsExpanded(!isExpanded)}>\r\n                {icon} {name} \r\n                <ChevronDownIcon className={'w-5 h-5 mt-1 float-right delay-400 duration-500 transition-all  ' + (isExpanded ? 'rotate-180' : '')}/>\r\n            </div>\r\n\r\n            {/** Submenu list */}\r\n            <div className={` w-full `+ (isExpanded ? \"\" : \"hidden\")}>\r\n                <ul className={`menu menu-compact`}>\r\n                {\r\n                    submenu.map((m, k) => {\r\n                        return(\r\n                            <li key={k}>\r\n                                <Link to={m.path}>\r\n                                    {m.icon} {m.name}\r\n                                    {\r\n                                            location.pathname == m.path ? (<span className=\"absolute mt-1 mb-1 inset-y-0 left-0 w-1 rounded-tr-md rounded-br-md bg-primary \"\r\n                                                aria-hidden=\"true\"></span>) : null\r\n                                    }\r\n                                </Link>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarSubmenu","import routes from '../routes/sidebar'\r\nimport { NavLink,  Routes, Link , useLocation} from 'react-router-dom'\r\nimport SidebarSubmenu from './SidebarSubmenu';\r\nimport XMarkIcon  from '@heroicons/react/24/outline/XMarkIcon'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction LeftSidebar(){\r\n    const location = useLocation();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const close = (e) => {\r\n        document.getElementById('left-sidebar-drawer').click()\r\n    }\r\n\r\n    return(\r\n        <div className=\"drawer-side  z-30  \">\r\n            <label htmlFor=\"left-sidebar-drawer\" className=\"drawer-overlay\"></label> \r\n            <ul className=\"menu  pt-2 w-80 bg-base-100 min-h-full   text-base-content\">\r\n            <button className=\"btn btn-ghost bg-base-300  btn-circle z-50 top-0 right-0 mt-4 mr-2 absolute lg:hidden\" onClick={() => close()}>\r\n            <XMarkIcon className=\"h-5 inline-block w-5\"/>\r\n            </button>\r\n\r\n            <li className=\"mb-2 text-xl font-semibold\">\r\n        <Link to={'/app/welcome'} className=\"flex items-center gap-2\">\r\n          <img className=\"mask mask-squircle w-9\" src=\"/logo.svg\" alt=\"DashWind Logo\" />\r\n          <h1 className=\"text-2xl mt-0 font-bold text-center\">\r\n    <span className=\"text-primary\">Dash</span>\r\n    <span className=\"text-accentcont\">Stack</span>\r\n</h1>\r\n\r\n        </Link>\r\n      </li>\r\n                {\r\n                    routes.map((route, k) => {\r\n                        return(\r\n                            <li className=\"\" key={k}>\r\n                                {\r\n                                    route.submenu ? \r\n                                        <SidebarSubmenu {...route}/> : \r\n                                    (<NavLink\r\n                                        end\r\n                                        to={route.path}\r\n                                        className={({isActive}) => `${isActive ? 'font-semibold  bg-secondary ' : 'font-normal'}`} >\r\n                                           {route.icon} {route.name}\r\n                                            {\r\n                                                location.pathname === route.path ? (<span className=\"absolute inset-y-0 left-0 w-1 rounded-tr-md rounded-br-md bg-primary \"\r\n                                                aria-hidden=\"true\"></span>) : null\r\n                                            }\r\n                                    </NavLink>)\r\n                                }\r\n                                \r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeftSidebar","import { useState } from \"react\";\r\nimport \"jspdf-autotable\";\r\nimport { useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport TitleCard from \"../../../components/Cards/TitleCard\";\r\nimport ShoppingCart from '@heroicons/react/24/outline/ShoppingCartIcon'\r\nimport Squares2X2Icon  from '@heroicons/react/24/outline/Squares2X2Icon'\r\nimport XCircle  from '@heroicons/react/24/outline/XCircleIcon'\r\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\r\nimport { QrCodeIcon } from \"@heroicons/react/24/outline\";\r\nimport { CUSTOMERDATA } from \"../../people/customer/index\";\r\nimport { showNotification } from \"../../common/headerSlice\";\r\nimport { openModal } from \"../../common/modalSlice\";\r\nimport { deletePayment, editPayment, getPaymentContent } from \"../pos/PaymentSlice\";\r\nimport { MODAL_BODY_TYPES } from '../../../../src/utils/globalConstantUtil';\r\nimport { NavLink,  Routes, Link , useLocation, useNavigate} from 'react-router-dom'\r\n\r\n\r\nfunction POS() {\r\n    const [orderTax, setOrderTax] = useState(0);\r\n    const [discount, setDiscount] = useState(0);\r\n    const [scanning, setScanning] = useState(false);\r\n    const [productCode, setProductCode] = useState(\"\");\r\n    const [orderItems, setOrderItems] = useState([]);\r\n    const [shipping, setShipping] = useState(0);\r\n    const [searchText, setSearchText] = useState(\"\"); // Untuk teks pencarian\r\n    const [cartItems, setCartItems] = useState([\r\n        { id: 1, product: \"Pineapple\", price: 16, quantity: 1 },\r\n        { id: 2, product: \"Lemon\", price: 16, quantity: 1 },\r\n    ]);\r\n\r\n    const handleBarcodeScan = (data) => {\r\n        if (data) {\r\n          const scannedProduct = {\r\n            id: Date.now(),\r\n            product: \"Scanned Product\",\r\n            unitPrice: 15.0,\r\n            currentStock: \"1 kg\",\r\n            qty: 1,\r\n            discount: 0.0,\r\n            tax: 0.75,\r\n            subtotal: 15.75,\r\n          };\r\n          setProductCode(data.text);\r\n          setOrderItems((prev) => [...prev, scannedProduct]);\r\n          setScanning(false);\r\n        }\r\n    };\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        dispatch(getPaymentContent())\r\n    }, [])  \r\n\r\n    // CREATE\r\n    const openCreatePayment = () => {\r\n        dispatch(openModal({title : \"Create Payment\", bodyType : MODAL_BODY_TYPES.PAYMENT_ADD_NEW}))\r\n    }\r\n    \r\n    const toggleScanner = () => {\r\n        setScanning(!scanning);\r\n    };\r\n\r\n    const resetFields = () => {\r\n        setOrderTax(0);\r\n        setDiscount(0);\r\n        setShipping(0);\r\n    };\r\n\r\n    const totalPayable = cartItems.reduce(\r\n        (total, item) => total + item.price * item.quantity,\r\n        0\r\n    );\r\n\r\n     // VIEW\r\n     const navigate = useNavigate();\r\n\r\n     const handleClick = () => {\r\n         navigate(\"/app/dashboard\");\r\n     };\r\n \r\n\r\n    const finalTotal = totalPayable + orderTax - discount + shipping;\r\n\r\n    const [products] = useState(\r\n        Array.from({ length: 12 }, (_, index) => ({\r\n            id: index + 1,\r\n            name: `Honey Bee ${index + 1}`,\r\n            price: 15,\r\n            stock: \"100 pcs\",\r\n        }))\r\n    );\r\n\r\n    const updateQuantity = (id, value) => {\r\n        setCartItems((prev) =>\r\n            prev.map((item) =>\r\n                item.id === id\r\n                    ? { ...item, quantity: Math.max(1, item.quantity + value) }\r\n                    : item\r\n            )\r\n        );\r\n    };\r\n\r\n    const removeItem = (id) => {\r\n        setCartItems((prev) => prev.filter((item) => item.id !== id));\r\n    };\r\n\r\n    const addToCart = (product) => {\r\n        setCartItems((prev) => {\r\n            const existingItem = prev.find((item) => item.id === product.id);\r\n            if (existingItem) {\r\n                return prev.map((item) =>\r\n                    item.id === product.id\r\n                        ? { ...item, quantity: item.quantity + 1 }\r\n                        : item\r\n                );\r\n            }\r\n            return [\r\n                ...prev,\r\n                { id: product.id, product: product.name, price: product.price, quantity: 1 },\r\n            ];\r\n        });\r\n    };\r\n\r\n    \r\n    // VIEW\r\n    const openInvoicePayment = () => {\r\n        dispatch(openModal({title : \"Invoice\", bodyType : MODAL_BODY_TYPES.PAYMENT_INVOICE}))\r\n    }\r\n\r\n\r\n    // State untuk halaman saat ini\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const itemsPerPage = 6;\r\n\r\n    // Menghitung total halaman\r\n    const totalPages = Math.ceil(products.length / itemsPerPage);\r\n\r\n    // Menghitung produk yang akan ditampilkan berdasarkan halaman\r\n    const indexOfLastProduct = currentPage * itemsPerPage;\r\n    const indexOfFirstProduct = indexOfLastProduct - itemsPerPage;\r\n    const currentProducts = products.slice(indexOfFirstProduct, indexOfLastProduct);\r\n\r\n    // Fungsi untuk mengubah halaman\r\n    const paginate = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    };\r\n\r\n    return (\r\n        <>\r\n                <div className=\"flex flex-row gap-2\">\r\n                    {/* Bagian Transaksi */}\r\n                    <div className=\"flex flex-col h-screen\">\r\n                        {/* Konten Utama */}\r\n                        <div className=\"flex-1 p-4 space-y-4 bg-white overflow-y-auto\">\r\n                            {/* Header */}\r\n                            <header className=\"flex justify-between items-center mb-4\">\r\n                            {/* Logo dan Text DashStack */}\r\n                            <div className=\"flex items-center space-x-2\">\r\n                                <img\r\n                                className=\"mask mask-squircle w-10\"\r\n                                src=\"/SnowIcon.png\"\r\n                                alt=\"DashStack Logo\"\r\n                                />\r\n                                <div className=\"mb-1 font-bold text-2xl\">\r\n                                <span className=\"text-primary\">Dash</span>\r\n                                <span className=\"text-accentcont\">Stack</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Ikon dan Profil */}\r\n                            <div className=\"flex items-center space-x-4\">\r\n                                <button class=\"border btn-sm border-primary text-primary rounded-md px-4 py-2 flex items-center space-x-1 hover:bg-primary hover:text-white transition duration-200\"\r\n                                    onClick={handleClick} >                  \r\n                                    <span className=\"text-semibold\">Back</span>\r\n                                </button>\r\n                                <Squares2X2Icon className=\"h-6 w-6\" />\r\n                                <ShoppingCart className=\"h-6 w-6\" />\r\n                                <label tabIndex={0} className=\"btn btn-ghost btn-circle avatar\">\r\n                                <div className=\"w-10 rounded-full\">\r\n                                    <img src=\"/Profile.svg\" />\r\n                                </div>\r\n                                </label>\r\n                            </div>\r\n                            </header>\r\n\r\n                            {/* Form dan Tabel */}\r\n                            <div className=\"space-y-4\">\r\n                            <select className=\"border p-2 rounded w-full\">\r\n                                <option value=\"\">Walk in Customers</option>\r\n                                {CUSTOMERDATA.map((cust) => (\r\n                                    <option key={cust.id} value={cust.name}>\r\n                                        {cust.name}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            <select className=\"border p-2 rounded w-full\">\r\n                                <option value=\"\">Warehouse 1</option>\r\n                                <option value=\"\">Warehouse </option>\r\n                            </select>\r\n                            </div>\r\n\r\n                            <table className=\"w-full border-collapse border border-gray-300 mt-4\">\r\n                            <thead>\r\n                                <tr>\r\n                                <th className=\"border px-4 py-2\">Product</th>\r\n                                <th className=\"border px-4 py-2\">Price</th>\r\n                                <th className=\"border px-4 py-2\">Qty</th>\r\n                                <th className=\"border px-4 py-2\">Subtotal</th>\r\n                                <th className=\"border px-4 py-2\">Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {cartItems.map((item) => (\r\n                                <tr key={item.id}>\r\n                                    <td className=\"border px-4 py-2\">{item.product}</td>\r\n                                    <td className=\"border px-4 py-2\">${item.price}</td>\r\n                                    <td className=\"border px-4 py-2 flex items-center\">\r\n                                    <button\r\n                                        onClick={() => updateQuantity(item.id, -1)}\r\n                                        className=\"px-2 py-2 rounded text-white ml-7 border bg-primary font-bold\"\r\n                                    >\r\n                                        -\r\n                                    </button>\r\n                                    <span className=\"px-2\">{item.quantity}</span>\r\n                                    <button\r\n                                        onClick={() => updateQuantity(item.id, 1)}\r\n                                        className=\"px-2 py-2 rounded text-white border bg-primary font-bold\"\r\n                                    >\r\n                                        +\r\n                                    </button>\r\n                                    </td>\r\n                                    <td className=\"border px-4 py-2\">\r\n                                    ${item.price * item.quantity}\r\n                                    </td>\r\n                                    <td className=\"border px-4 py-2\">\r\n                                    <button\r\n                                        onClick={() => removeItem(item.id)}\r\n                                        className=\"text-red-500\"\r\n                                    >\r\n                                        <XCircle className=\"h-6 w-6 font-error\" />\r\n                                    </button>\r\n                                    </td>\r\n                                </tr>\r\n                                ))}\r\n                            </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        {/* Total Payable dan Tombol */}\r\n                        <div className=\"p-4 bg-white rounded shadow-md\">\r\n                            <div className=\"text-center font-bold text-lg bg-blue-100 py-2 rounded\">\r\n                            Total Payable: ${finalTotal.toFixed(2)}\r\n                            </div>\r\n\r\n                            <div className=\"flex justify-between items-center mt-4 space-x-4\">\r\n                            <div className=\"flex flex-col\">\r\n                                <label className=\"text-gray-700 text-sm mb-2\">Order Tax</label>\r\n                                <div className=\"relative\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={orderTax}\r\n                                    onChange={(e) => setOrderTax(parseFloat(e.target.value) || 0)}\r\n                                    className=\"border rounded px-3 py-2 w-full text-sm\"\r\n                                />\r\n                                <span className=\"absolute top-2 right-3 text-gray-500\">%</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"flex flex-col\">\r\n                                <label className=\"text-gray-700 text-sm mb-2\">Discount</label>\r\n                                <div className=\"relative\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={discount}\r\n                                    onChange={(e) => setDiscount(parseFloat(e.target.value) || 0)}\r\n                                    className=\"border rounded px-3 py-2 w-full text-sm\"\r\n                                />\r\n                                <span className=\"absolute top-2 right-3 text-gray-500\">%</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"flex flex-col\">\r\n                                <label className=\"text-gray-700 text-sm mb-2\">Shipping</label>\r\n                                <div className=\"relative\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={shipping}\r\n                                    onChange={(e) => setShipping(parseFloat(e.target.value) || 0)}\r\n                                    className=\"border rounded px-3 py-2 w-full text-sm\"\r\n                                />\r\n                                <span className=\"absolute top-2 right-3 text-gray-500\">$</span>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n\r\n                            <div className=\"flex justify-between items-center mt-6\">\r\n                                <button\r\n                                    onClick={resetFields}\r\n                                    className=\"flex items-center space-x-2 px-4 py-2 border border-red-500 text-red-500 rounded\"\r\n                                >\r\n                                    <span>&#8634;</span>\r\n                                    <span>Reset</span>\r\n                                </button>\r\n                                <button className=\"bg-primary text-white px-6 py-2 rounded flex-grow ml-4\"\r\n                                    onClick={() => openCreatePayment()}>\r\n                                    Pay Now\r\n                                </button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/* Bagian Produk */}\r\n                    <div className=\"flex-1 p-4 bg-gray-50 overflow-y-auto\">\r\n                        {/* Scanner Section */}\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"relative flex items-center\">\r\n                            <button\r\n                                onClick={toggleScanner}\r\n                                className=\"btn btn-primary mr-4 flex items-center\"\r\n                            >\r\n                                <QrCodeIcon className=\"w-10 h-10 mr-1\" \r\n                                onUpdate={(err, result) => {\r\n                                    if (result) handleBarcodeScan(result);\r\n                                  }}/>\r\n                            </button>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={searchText}\r\n                                onChange={(e) => {\r\n                                    const text = e.target.value;\r\n                                    setSearchText(text); // Update teks pencarian\r\n                                    setCurrentPage(1); // Reset halaman ke awal setelah pencarian\r\n                                }}\r\n                                placeholder=\"Search Product By Name\"\r\n                                className=\"input input-bordered w-full\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Products Section */}\r\n                        <div className=\"grid grid-cols-3 gap-4 mt-10\">\r\n                            {currentProducts.map((product) => (\r\n                                <div key={product.id} className=\"border rounded p-2 text-center bg-white\">\r\n                                    <img\r\n                                        src=\"/product.png\"\r\n                                        alt={product.name}\r\n                                        className=\"mx-auto mb-2 h-24 object-contain\"\r\n                                    />\r\n                                    <div className=\"font-bold\">{product.name}</div>\r\n                                    <div>{product.stock}</div>\r\n                                    <div className=\"text-primary font-bold\">${product.price}</div>\r\n                                    <button\r\n                                        onClick={() => addToCart(product)}\r\n                                        className=\"bg-primary text-white px-4 py-1 rounded mt-2\"\r\n                                    >\r\n                                        Add\r\n                                    </button>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        {/* Pagination Section */}\r\n                        <div className=\"flex justify-center mt-10 space-x-2\">\r\n                            {[...Array(totalPages)].map((_, index) => (\r\n                                <button\r\n                                    key={index + 1}\r\n                                    className={`px-4 py-2 border rounded ${currentPage === index + 1 ? 'bg-primary text-white' : ''}`}\r\n                                    onClick={() => paginate(index + 1)}\r\n                                >\r\n                                    {index + 1}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default POS;\r\n"],"names":["dispatch","useDispatch","noOfNotifications","pageTitle","useSelector","state","header","currentTheme","setCurrentTheme","useState","localStorage","getItem","useEffect","themeChange","window","matchMedia","matches","navigate","useNavigate","_jsx","_Fragment","children","_jsxs","className","htmlFor","Bars3Icon","class","onClick","handleClick","type","SunIcon","MoonIcon","openRightDrawer","bodyType","RIGHT_DRAWER_TYPES","NOTIFICATION","BellIcon","tabIndex","src","Link","to","clear","location","href","role","iconClasses","path","icon","Squares2X2Icon","name","FolderIcon","submenu","InboxStackIcon","IdentificationIcon","SwatchIcon","HomeModernIcon","ChartBarIcon","_ref","useLocation","isExpanded","setIsExpanded","filter","m","pathname","ChevronDownIcon","map","k","document","getElementById","click","XMarkIcon","alt","routes","route","SidebarSubmenu","NavLink","end","isActive","orderTax","setOrderTax","discount","setDiscount","scanning","setScanning","productCode","setProductCode","orderItems","setOrderItems","shipping","setShipping","searchText","setSearchText","cartItems","setCartItems","id","product","price","quantity","getPaymentContent","totalPayable","reduce","total","item","finalTotal","products","Array","from","length","_","index","stock","updateQuantity","value","prev","Math","max","currentPage","setCurrentPage","totalPages","ceil","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","ShoppingCart","CUSTOMERDATA","cust","removeItem","XCircle","toFixed","onChange","e","parseFloat","target","resetFields","openModal","title","MODAL_BODY_TYPES","PAYMENT_ADD_NEW","toggleScanner","QrCodeIcon","onUpdate","err","result","data","scannedProduct","Date","now","unitPrice","currentStock","qty","tax","subtotal","text","handleBarcodeScan","placeholder","find","addToCart"],"sourceRoot":""}