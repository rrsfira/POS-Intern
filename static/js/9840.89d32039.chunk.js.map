{"version":3,"file":"static/js/9840.89d32039.chunk.js","mappings":"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","sources":["features/sales/pos/index.js","../node_modules/@heroicons/react/24/outline/ShoppingCartIcon.js","../node_modules/@heroicons/react/24/outline/Squares2X2Icon.js","../node_modules/@heroicons/react/24/outline/XCircleIcon.js","../node_modules/@heroicons/react/24/outline/esm/QrCodeIcon.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"jspdf-autotable\";\r\nimport { useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport TitleCard from \"../../../components/Cards/TitleCard\";\r\nimport ShoppingCart from '@heroicons/react/24/outline/ShoppingCartIcon'\r\nimport Squares2X2Icon  from '@heroicons/react/24/outline/Squares2X2Icon'\r\nimport XCircle  from '@heroicons/react/24/outline/XCircleIcon'\r\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\r\nimport { QrCodeIcon } from \"@heroicons/react/24/outline\";\r\nimport { CUSTOMERDATA } from \"../../people/customer/index\";\r\nimport { showNotification } from \"../../common/headerSlice\";\r\nimport { openModal } from \"../../common/modalSlice\";\r\nimport { deletePayment, editPayment, getPaymentContent } from \"../pos/PaymentSlice\";\r\nimport { MODAL_BODY_TYPES } from '../../../../src/utils/globalConstantUtil';\r\nimport { NavLink,  Routes, Link , useLocation, useNavigate} from 'react-router-dom'\r\n\r\n\r\nfunction POS() {\r\n    const [orderTax, setOrderTax] = useState(0);\r\n    const [discount, setDiscount] = useState(0);\r\n    const [scanning, setScanning] = useState(false);\r\n    const [productCode, setProductCode] = useState(\"\");\r\n    const [orderItems, setOrderItems] = useState([]);\r\n    const [shipping, setShipping] = useState(0);\r\n    const [searchText, setSearchText] = useState(\"\"); // Untuk teks pencarian\r\n    const [cartItems, setCartItems] = useState([\r\n        { id: 1, product: \"Pineapple\", price: 16, quantity: 1 },\r\n        { id: 2, product: \"Lemon\", price: 16, quantity: 1 },\r\n    ]);\r\n\r\n    const handleBarcodeScan = (data) => {\r\n        if (data) {\r\n          const scannedProduct = {\r\n            id: Date.now(),\r\n            product: \"Scanned Product\",\r\n            unitPrice: 15.0,\r\n            currentStock: \"1 kg\",\r\n            qty: 1,\r\n            discount: 0.0,\r\n            tax: 0.75,\r\n            subtotal: 15.75,\r\n          };\r\n          setProductCode(data.text);\r\n          setOrderItems((prev) => [...prev, scannedProduct]);\r\n          setScanning(false);\r\n        }\r\n    };\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        dispatch(getPaymentContent())\r\n    }, [])  \r\n\r\n    // CREATE\r\n    const openCreatePayment = () => {\r\n        dispatch(openModal({title : \"Create Payment\", bodyType : MODAL_BODY_TYPES.PAYMENT_ADD_NEW}))\r\n    }\r\n    \r\n    const toggleScanner = () => {\r\n        setScanning(!scanning);\r\n    };\r\n\r\n    const resetFields = () => {\r\n        setOrderTax(0);\r\n        setDiscount(0);\r\n        setShipping(0);\r\n    };\r\n\r\n    const totalPayable = cartItems.reduce(\r\n        (total, item) => total + item.price * item.quantity,\r\n        0\r\n    );\r\n\r\n     // VIEW\r\n     const navigate = useNavigate();\r\n\r\n     const handleClick = () => {\r\n         navigate(\"/app/dashboard\");\r\n     };\r\n \r\n\r\n    const finalTotal = totalPayable + orderTax - discount + shipping;\r\n\r\n    const [products] = useState(\r\n        Array.from({ length: 12 }, (_, index) => ({\r\n            id: index + 1,\r\n            name: `Honey Bee ${index + 1}`,\r\n            price: 15,\r\n            stock: \"100 pcs\",\r\n        }))\r\n    );\r\n\r\n    const updateQuantity = (id, value) => {\r\n        setCartItems((prev) =>\r\n            prev.map((item) =>\r\n                item.id === id\r\n                    ? { ...item, quantity: Math.max(1, item.quantity + value) }\r\n                    : item\r\n            )\r\n        );\r\n    };\r\n\r\n    const removeItem = (id) => {\r\n        setCartItems((prev) => prev.filter((item) => item.id !== id));\r\n    };\r\n\r\n    const addToCart = (product) => {\r\n        setCartItems((prev) => {\r\n            const existingItem = prev.find((item) => item.id === product.id);\r\n            if (existingItem) {\r\n                return prev.map((item) =>\r\n                    item.id === product.id\r\n                        ? { ...item, quantity: item.quantity + 1 }\r\n                        : item\r\n                );\r\n            }\r\n            return [\r\n                ...prev,\r\n                { id: product.id, product: product.name, price: product.price, quantity: 1 },\r\n            ];\r\n        });\r\n    };\r\n\r\n    \r\n    // VIEW\r\n    const openInvoicePayment = () => {\r\n        dispatch(openModal({title : \"Invoice\", bodyType : MODAL_BODY_TYPES.PAYMENT_INVOICE}))\r\n    }\r\n\r\n\r\n    // State untuk halaman saat ini\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const itemsPerPage = 6;\r\n\r\n    // Menghitung total halaman\r\n    const totalPages = Math.ceil(products.length / itemsPerPage);\r\n\r\n    // Menghitung produk yang akan ditampilkan berdasarkan halaman\r\n    const indexOfLastProduct = currentPage * itemsPerPage;\r\n    const indexOfFirstProduct = indexOfLastProduct - itemsPerPage;\r\n    const currentProducts = products.slice(indexOfFirstProduct, indexOfLastProduct);\r\n\r\n    // Fungsi untuk mengubah halaman\r\n    const paginate = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    };\r\n\r\n    return (\r\n        <>\r\n                <div className=\"flex flex-row gap-2\">\r\n                    {/* Bagian Transaksi */}\r\n                    <div className=\"flex flex-col h-screen\">\r\n                        {/* Konten Utama */}\r\n                        <div className=\"flex-1 p-4 space-y-4 bg-white overflow-y-auto\">\r\n                            {/* Header */}\r\n                            <header className=\"flex justify-between items-center mb-4\">\r\n                            {/* Logo dan Text DashStack */}\r\n                            <div className=\"flex items-center space-x-2\">\r\n                                <img\r\n                                className=\"mask mask-squircle w-10\"\r\n                                src=\"/SnowIcon.png\"\r\n                                alt=\"DashStack Logo\"\r\n                                />\r\n                                <div className=\"mb-1 font-bold text-2xl\">\r\n                                <span className=\"text-primary\">Dash</span>\r\n                                <span className=\"text-accentcont\">Stack</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Ikon dan Profil */}\r\n                            <div className=\"flex items-center space-x-4\">\r\n                                <button class=\"border btn-sm border-primary text-primary rounded-md px-4 py-2 flex items-center space-x-1 hover:bg-primary hover:text-white transition duration-200\"\r\n                                    onClick={handleClick} >                  \r\n                                    <span className=\"text-semibold\">Back</span>\r\n                                </button>\r\n                                <Squares2X2Icon className=\"h-6 w-6\" />\r\n                                <ShoppingCart className=\"h-6 w-6\" />\r\n                                <label tabIndex={0} className=\"btn btn-ghost btn-circle avatar\">\r\n                                <div className=\"w-10 rounded-full\">\r\n                                    <img src=\"/Profile.svg\" />\r\n                                </div>\r\n                                </label>\r\n                            </div>\r\n                            </header>\r\n\r\n                            {/* Form dan Tabel */}\r\n                            <div className=\"space-y-4\">\r\n                            <select className=\"border p-2 rounded w-full\">\r\n                                <option value=\"\">Walk in Customers</option>\r\n                                {CUSTOMERDATA.map((cust) => (\r\n                                    <option key={cust.id} value={cust.name}>\r\n                                        {cust.name}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            <select className=\"border p-2 rounded w-full\">\r\n                                <option value=\"\">Warehouse 1</option>\r\n                                <option value=\"\">Warehouse </option>\r\n                            </select>\r\n                            </div>\r\n\r\n                            <table className=\"w-full border-collapse border border-gray-300 mt-4\">\r\n                            <thead>\r\n                                <tr>\r\n                                <th className=\"border px-4 py-2\">Product</th>\r\n                                <th className=\"border px-4 py-2\">Price</th>\r\n                                <th className=\"border px-4 py-2\">Qty</th>\r\n                                <th className=\"border px-4 py-2\">Subtotal</th>\r\n                                <th className=\"border px-4 py-2\">Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {cartItems.map((item) => (\r\n                                <tr key={item.id}>\r\n                                    <td className=\"border px-4 py-2\">{item.product}</td>\r\n                                    <td className=\"border px-4 py-2\">${item.price}</td>\r\n                                    <td className=\"border px-4 py-2 flex items-center\">\r\n                                    <button\r\n                                        onClick={() => updateQuantity(item.id, -1)}\r\n                                        className=\"px-2 py-2 rounded text-white ml-7 border bg-primary font-bold\"\r\n                                    >\r\n                                        -\r\n                                    </button>\r\n                                    <span className=\"px-2\">{item.quantity}</span>\r\n                                    <button\r\n                                        onClick={() => updateQuantity(item.id, 1)}\r\n                                        className=\"px-2 py-2 rounded text-white border bg-primary font-bold\"\r\n                                    >\r\n                                        +\r\n                                    </button>\r\n                                    </td>\r\n                                    <td className=\"border px-4 py-2\">\r\n                                    ${item.price * item.quantity}\r\n                                    </td>\r\n                                    <td className=\"border px-4 py-2\">\r\n                                    <button\r\n                                        onClick={() => removeItem(item.id)}\r\n                                        className=\"text-red-500\"\r\n                                    >\r\n                                        <XCircle className=\"h-6 w-6 font-error\" />\r\n                                    </button>\r\n                                    </td>\r\n                                </tr>\r\n                                ))}\r\n                            </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        {/* Total Payable dan Tombol */}\r\n                        <div className=\"p-4 bg-white rounded shadow-md\">\r\n                            <div className=\"text-center font-bold text-lg bg-blue-100 py-2 rounded\">\r\n                            Total Payable: ${finalTotal.toFixed(2)}\r\n                            </div>\r\n\r\n                            <div className=\"flex justify-between items-center mt-4 space-x-4\">\r\n                            <div className=\"flex flex-col\">\r\n                                <label className=\"text-gray-700 text-sm mb-2\">Order Tax</label>\r\n                                <div className=\"relative\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={orderTax}\r\n                                    onChange={(e) => setOrderTax(parseFloat(e.target.value) || 0)}\r\n                                    className=\"border rounded px-3 py-2 w-full text-sm\"\r\n                                />\r\n                                <span className=\"absolute top-2 right-3 text-gray-500\">%</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"flex flex-col\">\r\n                                <label className=\"text-gray-700 text-sm mb-2\">Discount</label>\r\n                                <div className=\"relative\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={discount}\r\n                                    onChange={(e) => setDiscount(parseFloat(e.target.value) || 0)}\r\n                                    className=\"border rounded px-3 py-2 w-full text-sm\"\r\n                                />\r\n                                <span className=\"absolute top-2 right-3 text-gray-500\">%</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"flex flex-col\">\r\n                                <label className=\"text-gray-700 text-sm mb-2\">Shipping</label>\r\n                                <div className=\"relative\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={shipping}\r\n                                    onChange={(e) => setShipping(parseFloat(e.target.value) || 0)}\r\n                                    className=\"border rounded px-3 py-2 w-full text-sm\"\r\n                                />\r\n                                <span className=\"absolute top-2 right-3 text-gray-500\">$</span>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n\r\n                            <div className=\"flex justify-between items-center mt-6\">\r\n                                <button\r\n                                    onClick={resetFields}\r\n                                    className=\"flex items-center space-x-2 px-4 py-2 border border-red-500 text-red-500 rounded\"\r\n                                >\r\n                                    <span>&#8634;</span>\r\n                                    <span>Reset</span>\r\n                                </button>\r\n                                <button className=\"bg-primary text-white px-6 py-2 rounded flex-grow ml-4\"\r\n                                    onClick={() => openCreatePayment()}>\r\n                                    Pay Now\r\n                                </button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/* Bagian Produk */}\r\n                    <div className=\"flex-1 p-4 bg-gray-50 overflow-y-auto\">\r\n                        {/* Scanner Section */}\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"relative flex items-center\">\r\n                            <button\r\n                                onClick={toggleScanner}\r\n                                className=\"btn btn-primary mr-4 flex items-center\"\r\n                            >\r\n                                <QrCodeIcon className=\"w-10 h-10 mr-1\" \r\n                                onUpdate={(err, result) => {\r\n                                    if (result) handleBarcodeScan(result);\r\n                                  }}/>\r\n                            </button>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={searchText}\r\n                                onChange={(e) => {\r\n                                    const text = e.target.value;\r\n                                    setSearchText(text); // Update teks pencarian\r\n                                    setCurrentPage(1); // Reset halaman ke awal setelah pencarian\r\n                                }}\r\n                                placeholder=\"Search Product By Name\"\r\n                                className=\"input input-bordered w-full\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Products Section */}\r\n                        <div className=\"grid grid-cols-3 gap-4 mt-10\">\r\n                            {currentProducts.map((product) => (\r\n                                <div key={product.id} className=\"border rounded p-2 text-center bg-white\">\r\n                                    <img\r\n                                        src=\"/product.png\"\r\n                                        alt={product.name}\r\n                                        className=\"mx-auto mb-2 h-24 object-contain\"\r\n                                    />\r\n                                    <div className=\"font-bold\">{product.name}</div>\r\n                                    <div>{product.stock}</div>\r\n                                    <div className=\"text-primary font-bold\">${product.price}</div>\r\n                                    <button\r\n                                        onClick={() => addToCart(product)}\r\n                                        className=\"bg-primary text-white px-4 py-1 rounded mt-2\"\r\n                                    >\r\n                                        Add\r\n                                    </button>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        {/* Pagination Section */}\r\n                        <div className=\"flex justify-center mt-10 space-x-2\">\r\n                            {[...Array(totalPages)].map((_, index) => (\r\n                                <button\r\n                                    key={index + 1}\r\n                                    className={`px-4 py-2 border rounded ${currentPage === index + 1 ? 'bg-primary text-white' : ''}`}\r\n                                    onClick={() => paginate(index + 1)}\r\n                                >\r\n                                    {index + 1}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default POS;\r\n","const React = require(\"react\");\n\nfunction ShoppingCartIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 00-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 00-16.536-1.84M7.5 14.25L5.106 5.272M6 20.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm12.75 0a.75.75 0 11-1.5 0 .75.75 0 011.5 0z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ShoppingCartIcon);\nmodule.exports = ForwardRef;","const React = require(\"react\");\n\nfunction Squares2X2Icon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3.75 6A2.25 2.25 0 016 3.75h2.25A2.25 2.25 0 0110.5 6v2.25a2.25 2.25 0 01-2.25 2.25H6a2.25 2.25 0 01-2.25-2.25V6zM3.75 15.75A2.25 2.25 0 016 13.5h2.25a2.25 2.25 0 012.25 2.25V18a2.25 2.25 0 01-2.25 2.25H6A2.25 2.25 0 013.75 18v-2.25zM13.5 6a2.25 2.25 0 012.25-2.25H18A2.25 2.25 0 0120.25 6v2.25A2.25 2.25 0 0118 10.5h-2.25a2.25 2.25 0 01-2.25-2.25V6zM13.5 15.75a2.25 2.25 0 012.25-2.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-2.25A2.25 2.25 0 0113.5 18v-2.25z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(Squares2X2Icon);\nmodule.exports = ForwardRef;","const React = require(\"react\");\n\nfunction XCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(XCircleIcon);\nmodule.exports = ForwardRef;","import * as React from \"react\";\n\nfunction QrCodeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3.75 4.875c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5A1.125 1.125 0 013.75 9.375v-4.5zM3.75 14.625c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5a1.125 1.125 0 01-1.125-1.125v-4.5zM13.5 4.875c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5A1.125 1.125 0 0113.5 9.375v-4.5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6.75 6.75h.75v.75h-.75v-.75zM6.75 16.5h.75v.75h-.75v-.75zM16.5 6.75h.75v.75h-.75v-.75zM13.5 13.5h.75v.75h-.75v-.75zM13.5 19.5h.75v.75h-.75v-.75zM19.5 13.5h.75v.75h-.75v-.75zM19.5 19.5h.75v.75h-.75v-.75zM16.5 16.5h.75v.75h-.75v-.75z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(QrCodeIcon);\nexport default ForwardRef;"],"names":["orderTax","setOrderTax","useState","discount","setDiscount","scanning","setScanning","productCode","setProductCode","orderItems","setOrderItems","shipping","setShipping","searchText","setSearchText","cartItems","setCartItems","id","product","price","quantity","dispatch","useDispatch","useEffect","getPaymentContent","totalPayable","reduce","total","item","navigate","useNavigate","finalTotal","products","Array","from","length","_","index","name","stock","updateQuantity","value","prev","map","Math","max","currentPage","setCurrentPage","totalPages","ceil","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","_jsx","_Fragment","children","_jsxs","className","src","alt","class","onClick","handleClick","Squares2X2Icon","ShoppingCart","tabIndex","CUSTOMERDATA","cust","removeItem","filter","XCircle","toFixed","type","onChange","e","parseFloat","target","resetFields","openModal","title","bodyType","MODAL_BODY_TYPES","PAYMENT_ADD_NEW","toggleScanner","QrCodeIcon","onUpdate","err","result","data","scannedProduct","Date","now","unitPrice","currentStock","qty","tax","subtotal","text","handleBarcodeScan","placeholder","find","addToCart","React","require","ForwardRef","forwardRef","_ref","svgRef","titleId","props","createElement","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","module","exports"],"sourceRoot":""}